
use crate::metadata::ir::*;
pub(crate) static REGISTERS: IR = IR {
    blocks: &[Block {
        name: "Flash",
        extends: None,
        description: Some("Flash"),
        items: &[
            BlockItem {
                name: "acr",
                description: Some("Access control register"),
                array: None,
                byte_offset: 0x0,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Acr"),
                }),
            },
            BlockItem {
                name: "pdkeyr",
                description: Some("Power down key register"),
                array: None,
                byte_offset: 0x4,
                inner: BlockItemInner::Register(Register {
                    access: Access::Write,
                    bit_size: 32,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "nskeyr",
                description: Some("Flash non-secure key register"),
                array: None,
                byte_offset: 0x8,
                inner: BlockItemInner::Register(Register {
                    access: Access::Write,
                    bit_size: 32,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "seckeyr",
                description: Some("Flash secure key register"),
                array: None,
                byte_offset: 0xc,
                inner: BlockItemInner::Register(Register {
                    access: Access::Write,
                    bit_size: 32,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "optkeyr",
                description: Some("Flash option key register"),
                array: None,
                byte_offset: 0x10,
                inner: BlockItemInner::Register(Register {
                    access: Access::Write,
                    bit_size: 32,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "lvekeyr",
                description: Some("Flash low voltage key register"),
                array: None,
                byte_offset: 0x14,
                inner: BlockItemInner::Register(Register {
                    access: Access::Write,
                    bit_size: 32,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "nssr",
                description: Some("Flash status register"),
                array: None,
                byte_offset: 0x20,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Nssr"),
                }),
            },
            BlockItem {
                name: "secsr",
                description: Some("Flash status register"),
                array: None,
                byte_offset: 0x24,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secsr"),
                }),
            },
            BlockItem {
                name: "nscr",
                description: Some("Flash non-secure control register"),
                array: None,
                byte_offset: 0x28,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Nscr"),
                }),
            },
            BlockItem {
                name: "seccr",
                description: Some("Flash secure control register"),
                array: None,
                byte_offset: 0x2c,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Seccr"),
                }),
            },
            BlockItem {
                name: "eccr",
                description: Some("Flash ECC register"),
                array: None,
                byte_offset: 0x30,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Eccr"),
                }),
            },
            BlockItem {
                name: "optr",
                description: Some("Flash option register"),
                array: None,
                byte_offset: 0x40,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Optr"),
                }),
            },
            BlockItem {
                name: "nsbootadd0r",
                description: Some("Flash non-secure boot address 0 register"),
                array: None,
                byte_offset: 0x44,
                inner: BlockItemInner::Register(Register {
                    access: Access::Write,
                    bit_size: 32,
                    fieldset: Some("Nsbootadd0r"),
                }),
            },
            BlockItem {
                name: "nsbootadd1r",
                description: Some("Flash non-secure boot address 1 register"),
                array: None,
                byte_offset: 0x48,
                inner: BlockItemInner::Register(Register {
                    access: Access::Write,
                    bit_size: 32,
                    fieldset: Some("Nsbootadd1r"),
                }),
            },
            BlockItem {
                name: "secbootadd0r",
                description: Some("FFlash secure boot address 0 register"),
                array: None,
                byte_offset: 0x4c,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secbootadd0r"),
                }),
            },
            BlockItem {
                name: "secwm1r1",
                description: Some("Flash bank 1 secure watermak1 register"),
                array: None,
                byte_offset: 0x50,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secwm1r1"),
                }),
            },
            BlockItem {
                name: "secwm1r2",
                description: Some("Flash secure watermak1 register 2"),
                array: None,
                byte_offset: 0x54,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secwm1r2"),
                }),
            },
            BlockItem {
                name: "wrp1ar",
                description: Some("Flash Bank 1 WRP area A address register"),
                array: None,
                byte_offset: 0x58,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Wrp1ar"),
                }),
            },
            BlockItem {
                name: "wrp1br",
                description: Some("Flash Bank 1 WRP area B address register"),
                array: None,
                byte_offset: 0x5c,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Wrp1br"),
                }),
            },
            BlockItem {
                name: "secwm2r1",
                description: Some("Flash secure watermak2 register"),
                array: None,
                byte_offset: 0x60,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secwm2r1"),
                }),
            },
            BlockItem {
                name: "secwm2r2",
                description: Some("Flash secure watermak2 register2"),
                array: None,
                byte_offset: 0x64,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secwm2r2"),
                }),
            },
            BlockItem {
                name: "wrp2ar",
                description: Some("Flash WPR2 area A address register"),
                array: None,
                byte_offset: 0x68,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Wrp2ar"),
                }),
            },
            BlockItem {
                name: "wrp2br",
                description: Some("Flash WPR2 area B address register"),
                array: None,
                byte_offset: 0x6c,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Wrp2br"),
                }),
            },
            BlockItem {
                name: "secbb1r1",
                description: Some("FLASH secure block based bank 1 register"),
                array: None,
                byte_offset: 0x80,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secbb1r1"),
                }),
            },
            BlockItem {
                name: "secbb1r2",
                description: Some("FLASH secure block based bank 1 register"),
                array: None,
                byte_offset: 0x84,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secbb1r2"),
                }),
            },
            BlockItem {
                name: "secbb1r3",
                description: Some("FLASH secure block based bank 1 register"),
                array: None,
                byte_offset: 0x88,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secbb1r3"),
                }),
            },
            BlockItem {
                name: "secbb1r4",
                description: Some("FLASH secure block based bank 1 register"),
                array: None,
                byte_offset: 0x8c,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secbb1r4"),
                }),
            },
            BlockItem {
                name: "secbb2r1",
                description: Some("FLASH secure block based bank 2 register"),
                array: None,
                byte_offset: 0xa0,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secbb2r1"),
                }),
            },
            BlockItem {
                name: "secbb2r2",
                description: Some("FLASH secure block based bank 2 register"),
                array: None,
                byte_offset: 0xa4,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secbb2r2"),
                }),
            },
            BlockItem {
                name: "secbb2r3",
                description: Some("FLASH secure block based bank 2 register"),
                array: None,
                byte_offset: 0xa8,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secbb2r3"),
                }),
            },
            BlockItem {
                name: "secbb2r4",
                description: Some("FLASH secure block based bank 2 register"),
                array: None,
                byte_offset: 0xac,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Secbb2r4"),
                }),
            },
            BlockItem {
                name: "sechdpcr",
                description: Some("FLASH secure HDP control register"),
                array: None,
                byte_offset: 0xc0,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Sechdpcr"),
                }),
            },
            BlockItem {
                name: "privcfgr",
                description: Some("Power privilege configuration register"),
                array: None,
                byte_offset: 0xc4,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Privcfgr"),
                }),
            },
        ],
    }],
    fieldsets: &[
        FieldSet {
            name: "Acr",
            extends: None,
            description: Some("Access control register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "latency",
                    description: Some("Latency"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "run_pd",
                    description: Some("Flash Power-down mode during Low-power run mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sleep_pd",
                    description: Some("Flash Power-down mode during Low-power sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lven",
                    description: Some("LVEN"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Eccr",
            extends: None,
            description: Some("Flash ECC register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "addr_ecc",
                    description: Some("ECC fail address"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 19,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bk_ecc",
                    description: Some("BK_ECC"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sysf_ecc",
                    description: Some("SYSF_ECC"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eccie",
                    description: Some("ECC correction interrupt enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eccc2",
                    description: Some("ECCC2"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eccd2",
                    description: Some("ECCD2"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eccc",
                    description: Some("ECC correction"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eccd",
                    description: Some("ECC detection"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Nsbootadd0r",
            extends: None,
            description: Some("Flash non-secure boot address 0 register"),
            bit_size: 32,
            fields: &[Field {
                name: "nsbootadd0",
                description: Some("NSBOOTADD0"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                bit_size: 25,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Nsbootadd1r",
            extends: None,
            description: Some("Flash non-secure boot address 1 register"),
            bit_size: 32,
            fields: &[Field {
                name: "nsbootadd1",
                description: Some("NSBOOTADD1"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                bit_size: 25,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Nscr",
            extends: None,
            description: Some("Flash non-secure control register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "nspg",
                    description: Some("NSPG"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nsper",
                    description: Some("NSPER"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nsmer1",
                    description: Some("NSMER1"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nspnb",
                    description: Some("NSPNB"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nsbker",
                    description: Some("NSBKER"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nsmer2",
                    description: Some("NSMER2"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nsstrt",
                    description: Some("Options modification start"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "optstrt",
                    description: Some("Options modification start"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nseopie",
                    description: Some("NSEOPIE"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nserrie",
                    description: Some("NSERRIE"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "obl_launch",
                    description: Some("Force the option byte loading"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "optlock",
                    description: Some("Options Lock"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nslock",
                    description: Some("NSLOCK"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Nssr",
            extends: None,
            description: Some("Flash status register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "nseop",
                    description: Some("NSEOP"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nsoperr",
                    description: Some("NSOPERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nsprogerr",
                    description: Some("NSPROGERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nswrperr",
                    description: Some("NSWRPERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nspgaerr",
                    description: Some("NSPGAERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nssizerr",
                    description: Some("NSSIZERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nspgserr",
                    description: Some("NSPGSERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "optwerr",
                    description: Some("OPTWERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "optverr",
                    description: Some("OPTVERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nsbsy",
                    description: Some("NSBusy"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Optr",
            extends: None,
            description: Some("Flash option register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rdp",
                    description: Some("Read protection level"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 8,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bor_lev",
                    description: Some("BOR reset Level"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 3,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "n_rst_stop",
                    description: Some("nRST_STOP"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "n_rst_stdby",
                    description: Some("nRST_STDBY"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "n_rst_shdw",
                    description: Some("nRST_SHDW"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iwdg_sw",
                    description: Some("Independent watchdog selection"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iwdg_stop",
                    description: Some("Independent watchdog counter freeze in Stop mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iwdg_stdby",
                    description: Some("Independent watchdog counter freeze in Standby mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdg_sw",
                    description: Some("Window watchdog selection"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "swap_bank",
                    description: Some("SWAP_BANK"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "db256k",
                    description: Some("DB256K"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dbank",
                    description: Some("DBANK"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sram2_pe",
                    description: Some("SRAM2 parity check enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sram2_rst",
                    description: Some("SRAM2 Erase when system reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "n_swboot0",
                    description: Some("nSWBOOT0"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "n_boot0",
                    description: Some("nBOOT0"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pa15_pupen",
                    description: Some("PA15_PUPEN"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tzen",
                    description: Some("TZEN"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Privcfgr",
            extends: None,
            description: Some("Power privilege configuration register"),
            bit_size: 32,
            fields: &[Field {
                name: "priv_",
                description: Some("PRIV"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 1,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Secbb1r1",
            extends: None,
            description: Some("FLASH secure block based bank 1 register"),
            bit_size: 32,
            fields: &[Field {
                name: "secbb1",
                description: Some("SECBB1"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Secbb1r2",
            extends: None,
            description: Some("FLASH secure block based bank 1 register"),
            bit_size: 32,
            fields: &[Field {
                name: "secbb1",
                description: Some("SECBB1"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Secbb1r3",
            extends: None,
            description: Some("FLASH secure block based bank 1 register"),
            bit_size: 32,
            fields: &[Field {
                name: "secbb1",
                description: Some("SECBB1"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Secbb1r4",
            extends: None,
            description: Some("FLASH secure block based bank 1 register"),
            bit_size: 32,
            fields: &[Field {
                name: "secbb1",
                description: Some("SECBB1"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Secbb2r1",
            extends: None,
            description: Some("FLASH secure block based bank 2 register"),
            bit_size: 32,
            fields: &[Field {
                name: "secbb2",
                description: Some("SECBB2"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Secbb2r2",
            extends: None,
            description: Some("FLASH secure block based bank 2 register"),
            bit_size: 32,
            fields: &[Field {
                name: "secbb2",
                description: Some("SECBB2"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Secbb2r3",
            extends: None,
            description: Some("FLASH secure block based bank 2 register"),
            bit_size: 32,
            fields: &[Field {
                name: "secbb2",
                description: Some("SECBB2"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Secbb2r4",
            extends: None,
            description: Some("FLASH secure block based bank 2 register"),
            bit_size: 32,
            fields: &[Field {
                name: "secbb2",
                description: Some("SECBB2"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Secbootadd0r",
            extends: None,
            description: Some("FFlash secure boot address 0 register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "boot_lock",
                    description: Some("BOOT_LOCK"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secbootadd0",
                    description: Some("SECBOOTADD0"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 25,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Seccr",
            extends: None,
            description: Some("Flash secure control register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "secpg",
                    description: Some("SECPG"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secper",
                    description: Some("SECPER"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secmer1",
                    description: Some("SECMER1"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secpnb",
                    description: Some("SECPNB"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secbker",
                    description: Some("SECBKER"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secmer2",
                    description: Some("SECMER2"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secstrt",
                    description: Some("SECSTRT"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "seceopie",
                    description: Some("SECEOPIE"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secerrie",
                    description: Some("SECERRIE"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secrderrie",
                    description: Some("SECRDERRIE"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secinv",
                    description: Some("SECINV"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "seclock",
                    description: Some("SECLOCK"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Sechdpcr",
            extends: None,
            description: Some("FLASH secure HDP control register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hdp1_accdis",
                    description: Some("HDP1_ACCDIS"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hdp2_accdis",
                    description: Some("HDP2_ACCDIS"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Secsr",
            extends: None,
            description: Some("Flash status register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "seceop",
                    description: Some("SECEOP"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secoperr",
                    description: Some("SECOPERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secprogerr",
                    description: Some("SECPROGERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secwrperr",
                    description: Some("SECWRPERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secpgaerr",
                    description: Some("SECPGAERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secsizerr",
                    description: Some("SECSIZERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secpgserr",
                    description: Some("SECPGSERR"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secrderr",
                    description: Some("Secure read protection error"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secbsy",
                    description: Some("SECBusy"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Secwm1r1",
            extends: None,
            description: Some("Flash bank 1 secure watermak1 register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "secwm1_pstrt",
                    description: Some("SECWM1_PSTRT"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secwm1_pend",
                    description: Some("SECWM1_PEND"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Secwm1r2",
            extends: None,
            description: Some("Flash secure watermak1 register 2"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pcrop1_pstrt",
                    description: Some("PCROP1_PSTRT"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pcrop1en",
                    description: Some("PCROP1EN"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hdp1_pend",
                    description: Some("HDP1_PEND"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hdp1en",
                    description: Some("HDP1EN"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Secwm2r1",
            extends: None,
            description: Some("Flash secure watermak2 register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "secwm2_pstrt",
                    description: Some("SECWM2_PSTRT"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "secwm2_pend",
                    description: Some("SECWM2_PEND"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Secwm2r2",
            extends: None,
            description: Some("Flash secure watermak2 register2"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pcrop2_pstrt",
                    description: Some("PCROP2_PSTRT"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pcrop2en",
                    description: Some("PCROP2EN"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hdp2_pend",
                    description: Some("HDP2_PEND"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hdp2en",
                    description: Some("HDP2EN"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Wrp1ar",
            extends: None,
            description: Some("Flash Bank 1 WRP area A address register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "wrp1a_pstrt",
                    description: Some("WRP1A_PSTRT"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wrp1a_pend",
                    description: Some("WRP1A_PEND"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Wrp1br",
            extends: None,
            description: Some("Flash Bank 1 WRP area B address register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "wrp1b_pstrt",
                    description: Some("WRP1B_PSTRT"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wrp1b_pend",
                    description: Some("WRP1B_PEND"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Wrp2ar",
            extends: None,
            description: Some("Flash WPR2 area A address register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "wrp2a_pstrt",
                    description: Some("WRP2A_PSTRT"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wrp2a_pend",
                    description: Some("WRP2A_PEND"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Wrp2br",
            extends: None,
            description: Some("Flash WPR2 area B address register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "wrp2b_pstrt",
                    description: Some("WRP2B_PSTRT"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wrp2b_pend",
                    description: Some("WRP2B_PEND"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 7,
                    array: None,
                    enumm: None,
                },
            ],
        },
    ],
    enums: &[],
};
