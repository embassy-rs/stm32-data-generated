
use crate::metadata::ir::*;
pub(crate) static REGISTERS: IR = IR {
    blocks: &[Block {
        name: "Rcc",
        extends: None,
        description: Some("Reset and clock control"),
        items: &[
            BlockItem {
                name: "cr",
                description: Some("clock control register"),
                array: None,
                byte_offset: 0x0,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Cr"),
                }),
            },
            BlockItem {
                name: "pllcfgr",
                description: Some("PLL configuration register"),
                array: None,
                byte_offset: 0x4,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Pllcfgr"),
                }),
            },
            BlockItem {
                name: "cfgr",
                description: Some("clock configuration register"),
                array: None,
                byte_offset: 0x8,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Cfgr"),
                }),
            },
            BlockItem {
                name: "cir",
                description: Some("clock interrupt register"),
                array: None,
                byte_offset: 0xc,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Cir"),
                }),
            },
            BlockItem {
                name: "ahb1rstr",
                description: Some("AHB1 peripheral reset register"),
                array: None,
                byte_offset: 0x10,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahb1rstr"),
                }),
            },
            BlockItem {
                name: "ahb2rstr",
                description: Some("AHB2 peripheral reset register"),
                array: None,
                byte_offset: 0x14,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahb2rstr"),
                }),
            },
            BlockItem {
                name: "ahb3rstr",
                description: Some("AHB3 peripheral reset register"),
                array: None,
                byte_offset: 0x18,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahb3rstr"),
                }),
            },
            BlockItem {
                name: "apb1rstr",
                description: Some("APB1 peripheral reset register"),
                array: None,
                byte_offset: 0x20,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb1rstr"),
                }),
            },
            BlockItem {
                name: "apb2rstr",
                description: Some("APB2 peripheral reset register"),
                array: None,
                byte_offset: 0x24,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb2rstr"),
                }),
            },
            BlockItem {
                name: "ahb1enr",
                description: Some("AHB1 peripheral clock register"),
                array: None,
                byte_offset: 0x30,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahb1enr"),
                }),
            },
            BlockItem {
                name: "ahb2enr",
                description: Some("AHB2 peripheral clock enable register"),
                array: None,
                byte_offset: 0x34,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahb2enr"),
                }),
            },
            BlockItem {
                name: "ahb3enr",
                description: Some("AHB3 peripheral clock enable register"),
                array: None,
                byte_offset: 0x38,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahb3enr"),
                }),
            },
            BlockItem {
                name: "apb1enr",
                description: Some("APB1 peripheral clock enable register"),
                array: None,
                byte_offset: 0x40,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb1enr"),
                }),
            },
            BlockItem {
                name: "apb2enr",
                description: Some("APB2 peripheral clock enable register"),
                array: None,
                byte_offset: 0x44,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb2enr"),
                }),
            },
            BlockItem {
                name: "ahb1lpenr",
                description: Some("AHB1 peripheral clock enable in low power mode register"),
                array: None,
                byte_offset: 0x50,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahb1lpenr"),
                }),
            },
            BlockItem {
                name: "ahb2lpenr",
                description: Some("AHB2 peripheral clock enable in low power mode register"),
                array: None,
                byte_offset: 0x54,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahb2lpenr"),
                }),
            },
            BlockItem {
                name: "ahb3lpenr",
                description: Some("AHB3 peripheral clock enable in low power mode register"),
                array: None,
                byte_offset: 0x58,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahb3lpenr"),
                }),
            },
            BlockItem {
                name: "apb1lpenr",
                description: Some("APB1 peripheral clock enable in low power mode register"),
                array: None,
                byte_offset: 0x60,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb1lpenr"),
                }),
            },
            BlockItem {
                name: "apb2lpenr",
                description: Some("APB2 peripheral clock enabled in low power mode register"),
                array: None,
                byte_offset: 0x64,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb2lpenr"),
                }),
            },
            BlockItem {
                name: "bdcr",
                description: Some("Backup domain control register"),
                array: None,
                byte_offset: 0x70,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Bdcr"),
                }),
            },
            BlockItem {
                name: "csr",
                description: Some("clock control & status register"),
                array: None,
                byte_offset: 0x74,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Csr"),
                }),
            },
            BlockItem {
                name: "sscgr",
                description: Some("spread spectrum clock generation register"),
                array: None,
                byte_offset: 0x80,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Sscgr"),
                }),
            },
            BlockItem {
                name: "plli2scfgr",
                description: Some("PLLI2S configuration register"),
                array: None,
                byte_offset: 0x84,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Plli2scfgr"),
                }),
            },
        ],
    }],
    fieldsets: &[
        FieldSet {
            name: "Ahb1enr",
            extends: None,
            description: Some("AHB1 peripheral clock register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioaen",
                    description: Some("IO port A clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioben",
                    description: Some("IO port B clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiocen",
                    description: Some("IO port C clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioden",
                    description: Some("IO port D clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioeen",
                    description: Some("IO port E clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiofen",
                    description: Some("IO port F clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiogen",
                    description: Some("IO port G clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohen",
                    description: Some("IO port H clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioien",
                    description: Some("IO port I clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crcen",
                    description: Some("CRC clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkpsramen",
                    description: Some("Backup SRAM interface clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma1en",
                    description: Some("DMA1 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2en",
                    description: Some("DMA2 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethen",
                    description: Some("Ethernet MAC clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethtxen",
                    description: Some("Ethernet Transmission clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethrxen",
                    description: Some("Ethernet Reception clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethptpen",
                    description: Some("Ethernet PTP clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usb_otg_hsen",
                    description: Some("USB OTG HS clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usb_otg_hsulpien",
                    description: Some("USB OTG HSULPI clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb1lpenr",
            extends: None,
            description: Some("AHB1 peripheral clock enable in low power mode register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioalpen",
                    description: Some("IO port A clock enable during sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioblpen",
                    description: Some("IO port B clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioclpen",
                    description: Some("IO port C clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiodlpen",
                    description: Some("IO port D clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioelpen",
                    description: Some("IO port E clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioflpen",
                    description: Some("IO port F clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioglpen",
                    description: Some("IO port G clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohlpen",
                    description: Some("IO port H clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioilpen",
                    description: Some("IO port I clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crclpen",
                    description: Some("CRC clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flashlpen",
                    description: Some("Flash interface clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sram1lpen",
                    description: Some("SRAM 1interface clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sram2lpen",
                    description: Some("SRAM 2 interface clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkpsramlpen",
                    description: Some("Backup SRAM interface clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma1lpen",
                    description: Some("DMA1 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2lpen",
                    description: Some("DMA2 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethlpen",
                    description: Some("Ethernet MAC clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethtxlpen",
                    description: Some("Ethernet transmission clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethrxlpen",
                    description: Some("Ethernet reception clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethptplpen",
                    description: Some("Ethernet PTP clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usb_otg_hslpen",
                    description: Some("USB OTG HS clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usb_otg_hsulpilpen",
                    description: Some("USB OTG HS ULPI clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb1rstr",
            extends: None,
            description: Some("AHB1 peripheral reset register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioarst",
                    description: Some("IO port A reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiobrst",
                    description: Some("IO port B reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiocrst",
                    description: Some("IO port C reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiodrst",
                    description: Some("IO port D reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioerst",
                    description: Some("IO port E reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiofrst",
                    description: Some("IO port F reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiogrst",
                    description: Some("IO port G reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohrst",
                    description: Some("IO port H reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioirst",
                    description: Some("IO port I reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crcrst",
                    description: Some("CRC reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma1rst",
                    description: Some("DMA2 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2rst",
                    description: Some("DMA2 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethrst",
                    description: Some("Ethernet MAC reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usb_otg_hsrst",
                    description: Some("USB OTG HS module reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2enr",
            extends: None,
            description: Some("AHB2 peripheral clock enable register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dcmien",
                    description: Some("Camera interface enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crypen",
                    description: Some("Cryptographic modules clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hashen",
                    description: Some("Hash modules clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rngen",
                    description: Some("Random number generator clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usb_otg_fsen",
                    description: Some("USB OTG FS clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2lpenr",
            extends: None,
            description: Some("AHB2 peripheral clock enable in low power mode register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dcmilpen",
                    description: Some("Camera interface enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cryplpen",
                    description: Some("Cryptography modules clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hashlpen",
                    description: Some("Hash modules clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rnglpen",
                    description: Some("Random number generator clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usb_otg_fslpen",
                    description: Some("USB OTG FS clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2rstr",
            extends: None,
            description: Some("AHB2 peripheral reset register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dcmirst",
                    description: Some("Camera interface reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cryprst",
                    description: Some("Cryptographic module reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsahrst",
                    description: Some("Hash module reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rngrst",
                    description: Some("Random number generator module reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usb_otg_fsrst",
                    description: Some("USB OTG FS module reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb3enr",
            extends: None,
            description: Some("AHB3 peripheral clock enable register"),
            bit_size: 32,
            fields: &[Field {
                name: "fsmcen",
                description: Some("Flexible static memory controller module clock enable"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 1,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Ahb3lpenr",
            extends: None,
            description: Some("AHB3 peripheral clock enable in low power mode register"),
            bit_size: 32,
            fields: &[Field {
                name: "fsmclpen",
                description: Some("Flexible static memory controller module clock enable during Sleep mode"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 1,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Ahb3rstr",
            extends: None,
            description: Some("AHB3 peripheral reset register"),
            bit_size: 32,
            fields: &[Field {
                name: "fsmcrst",
                description: Some("Flexible static memory controller module reset"),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 1,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Apb1enr",
            extends: None,
            description: Some("APB1 peripheral clock enable register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2en",
                    description: Some("TIM2 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3en",
                    description: Some("TIM3 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4en",
                    description: Some("TIM4 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5en",
                    description: Some("TIM5 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6en",
                    description: Some("TIM6 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7en",
                    description: Some("TIM7 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12en",
                    description: Some("TIM12 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13en",
                    description: Some("TIM13 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14en",
                    description: Some("TIM14 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgen",
                    description: Some("Window watchdog clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2en",
                    description: Some("SPI2 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3en",
                    description: Some("SPI3 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2en",
                    description: Some("USART 2 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3en",
                    description: Some("USART3 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4en",
                    description: Some("UART4 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5en",
                    description: Some("UART5 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1en",
                    description: Some("I2C1 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2en",
                    description: Some("I2C2 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3en",
                    description: Some("I2C3 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 23 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "can1en",
                    description: Some("CAN 1 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "can2en",
                    description: Some("CAN 2 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwren",
                    description: Some("Power interface clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dacen",
                    description: Some("DAC interface clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1lpenr",
            extends: None,
            description: Some("APB1 peripheral clock enable in low power mode register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2lpen",
                    description: Some("TIM2 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3lpen",
                    description: Some("TIM3 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4lpen",
                    description: Some("TIM4 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5lpen",
                    description: Some("TIM5 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6lpen",
                    description: Some("TIM6 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7lpen",
                    description: Some("TIM7 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12lpen",
                    description: Some("TIM12 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13lpen",
                    description: Some("TIM13 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14lpen",
                    description: Some("TIM14 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdglpen",
                    description: Some("Window watchdog clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2lpen",
                    description: Some("SPI2 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3lpen",
                    description: Some("SPI3 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2lpen",
                    description: Some("USART2 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3lpen",
                    description: Some("USART3 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4lpen",
                    description: Some("UART4 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5lpen",
                    description: Some("UART5 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1lpen",
                    description: Some("I2C1 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2lpen",
                    description: Some("I2C2 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3lpen",
                    description: Some("I2C3 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 23 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "can1lpen",
                    description: Some("CAN 1 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "can2lpen",
                    description: Some("CAN 2 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrlpen",
                    description: Some("Power interface clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "daclpen",
                    description: Some("DAC interface clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1rstr",
            extends: None,
            description: Some("APB1 peripheral reset register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2rst",
                    description: Some("TIM2 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3rst",
                    description: Some("TIM3 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4rst",
                    description: Some("TIM4 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5rst",
                    description: Some("TIM5 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6rst",
                    description: Some("TIM6 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7rst",
                    description: Some("TIM7 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12rst",
                    description: Some("TIM12 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13rst",
                    description: Some("TIM13 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14rst",
                    description: Some("TIM14 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgrst",
                    description: Some("Window watchdog reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2rst",
                    description: Some("SPI 2 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3rst",
                    description: Some("SPI 3 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart2rst",
                    description: Some("USART 2 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart3rst",
                    description: Some("USART 3 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4rst",
                    description: Some("USART 4 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5rst",
                    description: Some("USART 5 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1rst",
                    description: Some("I2C 1 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2rst",
                    description: Some("I2C 2 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3rst",
                    description: Some("I2C3 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 23 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "can1rst",
                    description: Some("CAN1 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "can2rst",
                    description: Some("CAN2 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrrst",
                    description: Some("Power interface reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dacrst",
                    description: Some("DAC reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2enr",
            extends: None,
            description: Some("APB2 peripheral clock enable register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1en",
                    description: Some("TIM1 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8en",
                    description: Some("TIM8 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1en",
                    description: Some("USART1 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6en",
                    description: Some("USART6 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc1en",
                    description: Some("ADC1 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc2en",
                    description: Some("ADC2 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 9 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc3en",
                    description: Some("ADC3 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 10 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdioen",
                    description: Some("SDIO clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1en",
                    description: Some("SPI1 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syscfgen",
                    description: Some("System configuration controller clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9en",
                    description: Some("TIM9 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10en",
                    description: Some("TIM10 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11en",
                    description: Some("TIM11 clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2lpenr",
            extends: None,
            description: Some("APB2 peripheral clock enabled in low power mode register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1lpen",
                    description: Some("TIM1 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8lpen",
                    description: Some("TIM8 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1lpen",
                    description: Some("USART1 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6lpen",
                    description: Some("USART6 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc1lpen",
                    description: Some("ADC1 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc2lpen",
                    description: Some("ADC2 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 9 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc3lpen",
                    description: Some("ADC 3 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 10 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdiolpen",
                    description: Some("SDIO clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1lpen",
                    description: Some("SPI 1 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syscfglpen",
                    description: Some("System configuration controller clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9lpen",
                    description: Some("TIM9 clock enable during sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10lpen",
                    description: Some("TIM10 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11lpen",
                    description: Some("TIM11 clock enable during Sleep mode"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2rstr",
            extends: None,
            description: Some("APB2 peripheral reset register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1rst",
                    description: Some("TIM1 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8rst",
                    description: Some("TIM8 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1rst",
                    description: Some("USART1 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6rst",
                    description: Some("USART6 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adcrst",
                    description: Some("ADC interface reset (common to all ADCs)"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdiorst",
                    description: Some("SDIO reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1rst",
                    description: Some("SPI 1 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syscfgrst",
                    description: Some("System configuration controller reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9rst",
                    description: Some("TIM9 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10rst",
                    description: Some("TIM10 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11rst",
                    description: Some("TIM11 reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Bdcr",
            extends: None,
            description: Some("Backup domain control register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lseon",
                    description: Some("External low-speed oscillator enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lserdy",
                    description: Some("External low-speed oscillator ready"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsebyp",
                    description: Some("External low-speed oscillator bypass"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtcsel",
                    description: Some("RTC clock source selection"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 2,
                    array: None,
                    enumm: Some("Rtcsel"),
                },
                Field {
                    name: "rtcen",
                    description: Some("RTC clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bdrst",
                    description: Some("Backup domain software reset"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Cfgr",
            extends: None,
            description: Some("clock configuration register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "sw",
                    description: Some("System clock switch"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 2,
                    array: None,
                    enumm: Some("Sw"),
                },
                Field {
                    name: "sws",
                    description: Some("System clock switch status"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 2,
                    array: None,
                    enumm: Some("Sw"),
                },
                Field {
                    name: "hpre",
                    description: Some("AHB prescaler"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 4,
                    array: None,
                    enumm: Some("Hpre"),
                },
                Field {
                    name: "ppre1",
                    description: Some("APB Low speed prescaler (APB1)"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 10 }),
                    bit_size: 3,
                    array: None,
                    enumm: Some("Ppre"),
                },
                Field {
                    name: "ppre2",
                    description: Some("APB high-speed prescaler (APB2)"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 3,
                    array: None,
                    enumm: Some("Ppre"),
                },
                Field {
                    name: "rtcpre",
                    description: Some("HSE division factor for RTC clock"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mco1sel",
                    description: Some("Microcontroller clock output 1"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 2,
                    array: None,
                    enumm: Some("Mco1sel"),
                },
                Field {
                    name: "i2ssrc",
                    description: Some("I2S clock selection"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 23 }),
                    bit_size: 1,
                    array: None,
                    enumm: Some("Issrc"),
                },
                Field {
                    name: "mco1pre",
                    description: Some("MCO1 prescaler"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 3,
                    array: None,
                    enumm: Some("Mcopre"),
                },
                Field {
                    name: "mco2pre",
                    description: Some("MCO2 prescaler"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 3,
                    array: None,
                    enumm: Some("Mcopre"),
                },
                Field {
                    name: "mco2sel",
                    description: Some("Microcontroller clock output 2"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 2,
                    array: None,
                    enumm: Some("Mco2sel"),
                },
            ],
        },
        FieldSet {
            name: "Cir",
            extends: None,
            description: Some("clock interrupt register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsirdyf",
                    description: Some("LSI ready interrupt flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lserdyf",
                    description: Some("LSE ready interrupt flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsirdyf",
                    description: Some("HSI ready interrupt flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hserdyf",
                    description: Some("HSE ready interrupt flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllrdyf",
                    description: Some("Main PLL (PLL) ready interrupt flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "plli2srdyf",
                    description: Some("PLLI2S ready interrupt flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cssf",
                    description: Some("Clock security system interrupt flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsirdyie",
                    description: Some("LSI ready interrupt enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lserdyie",
                    description: Some("LSE ready interrupt enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 9 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsirdyie",
                    description: Some("HSI ready interrupt enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 10 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hserdyie",
                    description: Some("HSE ready interrupt enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllrdyie",
                    description: Some("Main PLL (PLL) ready interrupt enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "plli2srdyie",
                    description: Some("PLLI2S ready interrupt enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsirdyc",
                    description: Some("LSI ready interrupt clear"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lserdyc",
                    description: Some("LSE ready interrupt clear"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsirdyc",
                    description: Some("HSI ready interrupt clear"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hserdyc",
                    description: Some("HSE ready interrupt clear"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllrdyc",
                    description: Some("Main PLL(PLL) ready interrupt clear"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "plli2srdyc",
                    description: Some("PLLI2S ready interrupt clear"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cssc",
                    description: Some("Clock security system interrupt clear"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 23 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Cr",
            extends: None,
            description: Some("clock control register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hsion",
                    description: Some("Internal high-speed clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsirdy",
                    description: Some("Internal high-speed clock ready flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsitrim",
                    description: Some("Internal high-speed clock trimming"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsical",
                    description: Some("Internal high-speed clock calibration"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 8,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hseon",
                    description: Some("HSE clock enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hserdy",
                    description: Some("HSE clock ready flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsebyp",
                    description: Some("HSE clock bypass"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "csson",
                    description: Some("Clock security system enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllon",
                    description: Some("Main PLL (PLL) enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllrdy",
                    description: Some("Main PLL (PLL) clock ready flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "plli2son",
                    description: Some("PLLI2S enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "plli2srdy",
                    description: Some("PLLI2S clock ready flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Csr",
            extends: None,
            description: Some("clock control & status register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsion",
                    description: Some("Internal low-speed oscillator enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsirdy",
                    description: Some("Internal low-speed oscillator ready"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rmvf",
                    description: Some("Remove reset flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "borrstf",
                    description: Some("BOR reset flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "padrstf",
                    description: Some("PIN reset flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "porrstf",
                    description: Some("POR/PDR reset flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sftrstf",
                    description: Some("Software reset flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wdgrstf",
                    description: Some("Independent watchdog reset flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgrstf",
                    description: Some("Window watchdog reset flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpwrrstf",
                    description: Some("Low-power reset flag"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pllcfgr",
            extends: None,
            description: Some("PLL configuration register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllm",
                    description: Some("Division factor for the main PLL (PLL) and audio PLL (PLLI2S) input clock"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 6,
                    array: None,
                    enumm: Some("Pllm"),
                },
                Field {
                    name: "plln",
                    description: Some("Main PLL (PLL) multiplication factor for VCO"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 9,
                    array: None,
                    enumm: Some("Plln"),
                },
                Field {
                    name: "pllp",
                    description: Some("Main PLL (PLL) division factor for main system clock"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 2,
                    array: None,
                    enumm: Some("Pllp"),
                },
                Field {
                    name: "pllsrc",
                    description: Some("Main PLL(PLL) and audio PLL (PLLI2S) entry clock source"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: Some("Pllsrc"),
                },
                Field {
                    name: "pllq",
                    description: Some(
                        "Main PLL (PLL) division factor for USB OTG FS, SDIO and random number generator clocks",
                    ),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 4,
                    array: None,
                    enumm: Some("Pllq"),
                },
            ],
        },
        FieldSet {
            name: "Plli2scfgr",
            extends: None,
            description: Some("PLLI2S configuration register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "plln",
                    description: Some("PLLI2S multiplication factor for VCO"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 9,
                    array: None,
                    enumm: Some("Plln"),
                },
                Field {
                    name: "pllr",
                    description: Some("PLLI2S division factor for I2S clocks"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 3,
                    array: None,
                    enumm: Some("Pllr"),
                },
            ],
        },
        FieldSet {
            name: "Sscgr",
            extends: None,
            description: Some("spread spectrum clock generation register"),
            bit_size: 32,
            fields: &[
                Field {
                    name: "modper",
                    description: Some("Modulation period"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 13,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "incstep",
                    description: Some("Incrementation step"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 15,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spreadsel",
                    description: Some("Spread Select"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: Some("Spreadsel"),
                },
                Field {
                    name: "sscgen",
                    description: Some("Spread spectrum modulation enable"),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
    ],
    enums: &[
        Enum {
            name: "Hpre",
            description: None,
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some("SYSCLK not divided"),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some("SYSCLK divided by 2"),
                    value: 8,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some("SYSCLK divided by 4"),
                    value: 9,
                },
                EnumVariant {
                    name: "DIV8",
                    description: Some("SYSCLK divided by 8"),
                    value: 10,
                },
                EnumVariant {
                    name: "DIV16",
                    description: Some("SYSCLK divided by 16"),
                    value: 11,
                },
                EnumVariant {
                    name: "DIV64",
                    description: Some("SYSCLK divided by 64"),
                    value: 12,
                },
                EnumVariant {
                    name: "DIV128",
                    description: Some("SYSCLK divided by 128"),
                    value: 13,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some("SYSCLK divided by 256"),
                    value: 14,
                },
                EnumVariant {
                    name: "DIV512",
                    description: Some("SYSCLK divided by 512"),
                    value: 15,
                },
            ],
        },
        Enum {
            name: "Issrc",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "PLLI2S",
                    description: Some("PLLI2S clock used as I2S clock source"),
                    value: 0,
                },
                EnumVariant {
                    name: "CKIN",
                    description: Some("External clock mapped on the I2S_CKIN pin used as I2S clock source"),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Mco1sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HSI",
                    description: Some("HSI clock selected"),
                    value: 0,
                },
                EnumVariant {
                    name: "LSE",
                    description: Some("LSE oscillator selected"),
                    value: 1,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some("HSE oscillator clock selected"),
                    value: 2,
                },
                EnumVariant {
                    name: "PLL",
                    description: Some("PLL clock selected"),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Mco2sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "SYS",
                    description: Some("System clock (SYSCLK) selected"),
                    value: 0,
                },
                EnumVariant {
                    name: "PLLI2S",
                    description: Some("PLLI2S clock selected"),
                    value: 1,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some("HSE oscillator clock selected"),
                    value: 2,
                },
                EnumVariant {
                    name: "PLL",
                    description: Some("PLL clock selected"),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Mcopre",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some("No division"),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some("Division by 2"),
                    value: 4,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some("Division by 3"),
                    value: 5,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some("Division by 4"),
                    value: 6,
                },
                EnumVariant {
                    name: "DIV5",
                    description: Some("Division by 5"),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Pllm",
            description: None,
            bit_size: 6,
            variants: &[
                EnumVariant {
                    name: "DIV2",
                    description: None,
                    value: 2,
                },
                EnumVariant {
                    name: "DIV3",
                    description: None,
                    value: 3,
                },
                EnumVariant {
                    name: "DIV4",
                    description: None,
                    value: 4,
                },
                EnumVariant {
                    name: "DIV5",
                    description: None,
                    value: 5,
                },
                EnumVariant {
                    name: "DIV6",
                    description: None,
                    value: 6,
                },
                EnumVariant {
                    name: "DIV7",
                    description: None,
                    value: 7,
                },
                EnumVariant {
                    name: "DIV8",
                    description: None,
                    value: 8,
                },
                EnumVariant {
                    name: "DIV9",
                    description: None,
                    value: 9,
                },
                EnumVariant {
                    name: "DIV10",
                    description: None,
                    value: 10,
                },
                EnumVariant {
                    name: "DIV11",
                    description: None,
                    value: 11,
                },
                EnumVariant {
                    name: "DIV12",
                    description: None,
                    value: 12,
                },
                EnumVariant {
                    name: "DIV13",
                    description: None,
                    value: 13,
                },
                EnumVariant {
                    name: "DIV14",
                    description: None,
                    value: 14,
                },
                EnumVariant {
                    name: "DIV15",
                    description: None,
                    value: 15,
                },
                EnumVariant {
                    name: "DIV16",
                    description: None,
                    value: 16,
                },
                EnumVariant {
                    name: "DIV17",
                    description: None,
                    value: 17,
                },
                EnumVariant {
                    name: "DIV18",
                    description: None,
                    value: 18,
                },
                EnumVariant {
                    name: "DIV19",
                    description: None,
                    value: 19,
                },
                EnumVariant {
                    name: "DIV20",
                    description: None,
                    value: 20,
                },
                EnumVariant {
                    name: "DIV21",
                    description: None,
                    value: 21,
                },
                EnumVariant {
                    name: "DIV22",
                    description: None,
                    value: 22,
                },
                EnumVariant {
                    name: "DIV23",
                    description: None,
                    value: 23,
                },
                EnumVariant {
                    name: "DIV24",
                    description: None,
                    value: 24,
                },
                EnumVariant {
                    name: "DIV25",
                    description: None,
                    value: 25,
                },
                EnumVariant {
                    name: "DIV26",
                    description: None,
                    value: 26,
                },
                EnumVariant {
                    name: "DIV27",
                    description: None,
                    value: 27,
                },
                EnumVariant {
                    name: "DIV28",
                    description: None,
                    value: 28,
                },
                EnumVariant {
                    name: "DIV29",
                    description: None,
                    value: 29,
                },
                EnumVariant {
                    name: "DIV30",
                    description: None,
                    value: 30,
                },
                EnumVariant {
                    name: "DIV31",
                    description: None,
                    value: 31,
                },
                EnumVariant {
                    name: "DIV32",
                    description: None,
                    value: 32,
                },
                EnumVariant {
                    name: "DIV33",
                    description: None,
                    value: 33,
                },
                EnumVariant {
                    name: "DIV34",
                    description: None,
                    value: 34,
                },
                EnumVariant {
                    name: "DIV35",
                    description: None,
                    value: 35,
                },
                EnumVariant {
                    name: "DIV36",
                    description: None,
                    value: 36,
                },
                EnumVariant {
                    name: "DIV37",
                    description: None,
                    value: 37,
                },
                EnumVariant {
                    name: "DIV38",
                    description: None,
                    value: 38,
                },
                EnumVariant {
                    name: "DIV39",
                    description: None,
                    value: 39,
                },
                EnumVariant {
                    name: "DIV40",
                    description: None,
                    value: 40,
                },
                EnumVariant {
                    name: "DIV41",
                    description: None,
                    value: 41,
                },
                EnumVariant {
                    name: "DIV42",
                    description: None,
                    value: 42,
                },
                EnumVariant {
                    name: "DIV43",
                    description: None,
                    value: 43,
                },
                EnumVariant {
                    name: "DIV44",
                    description: None,
                    value: 44,
                },
                EnumVariant {
                    name: "DIV45",
                    description: None,
                    value: 45,
                },
                EnumVariant {
                    name: "DIV46",
                    description: None,
                    value: 46,
                },
                EnumVariant {
                    name: "DIV47",
                    description: None,
                    value: 47,
                },
                EnumVariant {
                    name: "DIV48",
                    description: None,
                    value: 48,
                },
                EnumVariant {
                    name: "DIV49",
                    description: None,
                    value: 49,
                },
                EnumVariant {
                    name: "DIV50",
                    description: None,
                    value: 50,
                },
                EnumVariant {
                    name: "DIV51",
                    description: None,
                    value: 51,
                },
                EnumVariant {
                    name: "DIV52",
                    description: None,
                    value: 52,
                },
                EnumVariant {
                    name: "DIV53",
                    description: None,
                    value: 53,
                },
                EnumVariant {
                    name: "DIV54",
                    description: None,
                    value: 54,
                },
                EnumVariant {
                    name: "DIV55",
                    description: None,
                    value: 55,
                },
                EnumVariant {
                    name: "DIV56",
                    description: None,
                    value: 56,
                },
                EnumVariant {
                    name: "DIV57",
                    description: None,
                    value: 57,
                },
                EnumVariant {
                    name: "DIV58",
                    description: None,
                    value: 58,
                },
                EnumVariant {
                    name: "DIV59",
                    description: None,
                    value: 59,
                },
                EnumVariant {
                    name: "DIV60",
                    description: None,
                    value: 60,
                },
                EnumVariant {
                    name: "DIV61",
                    description: None,
                    value: 61,
                },
                EnumVariant {
                    name: "DIV62",
                    description: None,
                    value: 62,
                },
                EnumVariant {
                    name: "DIV63",
                    description: None,
                    value: 63,
                },
            ],
        },
        Enum {
            name: "Plln",
            description: None,
            bit_size: 9,
            variants: &[
                EnumVariant {
                    name: "MUL192",
                    description: None,
                    value: 192,
                },
                EnumVariant {
                    name: "MUL193",
                    description: None,
                    value: 193,
                },
                EnumVariant {
                    name: "MUL194",
                    description: None,
                    value: 194,
                },
                EnumVariant {
                    name: "MUL195",
                    description: None,
                    value: 195,
                },
                EnumVariant {
                    name: "MUL196",
                    description: None,
                    value: 196,
                },
                EnumVariant {
                    name: "MUL197",
                    description: None,
                    value: 197,
                },
                EnumVariant {
                    name: "MUL198",
                    description: None,
                    value: 198,
                },
                EnumVariant {
                    name: "MUL199",
                    description: None,
                    value: 199,
                },
                EnumVariant {
                    name: "MUL200",
                    description: None,
                    value: 200,
                },
                EnumVariant {
                    name: "MUL201",
                    description: None,
                    value: 201,
                },
                EnumVariant {
                    name: "MUL202",
                    description: None,
                    value: 202,
                },
                EnumVariant {
                    name: "MUL203",
                    description: None,
                    value: 203,
                },
                EnumVariant {
                    name: "MUL204",
                    description: None,
                    value: 204,
                },
                EnumVariant {
                    name: "MUL205",
                    description: None,
                    value: 205,
                },
                EnumVariant {
                    name: "MUL206",
                    description: None,
                    value: 206,
                },
                EnumVariant {
                    name: "MUL207",
                    description: None,
                    value: 207,
                },
                EnumVariant {
                    name: "MUL208",
                    description: None,
                    value: 208,
                },
                EnumVariant {
                    name: "MUL209",
                    description: None,
                    value: 209,
                },
                EnumVariant {
                    name: "MUL210",
                    description: None,
                    value: 210,
                },
                EnumVariant {
                    name: "MUL211",
                    description: None,
                    value: 211,
                },
                EnumVariant {
                    name: "MUL212",
                    description: None,
                    value: 212,
                },
                EnumVariant {
                    name: "MUL213",
                    description: None,
                    value: 213,
                },
                EnumVariant {
                    name: "MUL214",
                    description: None,
                    value: 214,
                },
                EnumVariant {
                    name: "MUL215",
                    description: None,
                    value: 215,
                },
                EnumVariant {
                    name: "MUL216",
                    description: None,
                    value: 216,
                },
                EnumVariant {
                    name: "MUL217",
                    description: None,
                    value: 217,
                },
                EnumVariant {
                    name: "MUL218",
                    description: None,
                    value: 218,
                },
                EnumVariant {
                    name: "MUL219",
                    description: None,
                    value: 219,
                },
                EnumVariant {
                    name: "MUL220",
                    description: None,
                    value: 220,
                },
                EnumVariant {
                    name: "MUL221",
                    description: None,
                    value: 221,
                },
                EnumVariant {
                    name: "MUL222",
                    description: None,
                    value: 222,
                },
                EnumVariant {
                    name: "MUL223",
                    description: None,
                    value: 223,
                },
                EnumVariant {
                    name: "MUL224",
                    description: None,
                    value: 224,
                },
                EnumVariant {
                    name: "MUL225",
                    description: None,
                    value: 225,
                },
                EnumVariant {
                    name: "MUL226",
                    description: None,
                    value: 226,
                },
                EnumVariant {
                    name: "MUL227",
                    description: None,
                    value: 227,
                },
                EnumVariant {
                    name: "MUL228",
                    description: None,
                    value: 228,
                },
                EnumVariant {
                    name: "MUL229",
                    description: None,
                    value: 229,
                },
                EnumVariant {
                    name: "MUL230",
                    description: None,
                    value: 230,
                },
                EnumVariant {
                    name: "MUL231",
                    description: None,
                    value: 231,
                },
                EnumVariant {
                    name: "MUL232",
                    description: None,
                    value: 232,
                },
                EnumVariant {
                    name: "MUL233",
                    description: None,
                    value: 233,
                },
                EnumVariant {
                    name: "MUL234",
                    description: None,
                    value: 234,
                },
                EnumVariant {
                    name: "MUL235",
                    description: None,
                    value: 235,
                },
                EnumVariant {
                    name: "MUL236",
                    description: None,
                    value: 236,
                },
                EnumVariant {
                    name: "MUL237",
                    description: None,
                    value: 237,
                },
                EnumVariant {
                    name: "MUL238",
                    description: None,
                    value: 238,
                },
                EnumVariant {
                    name: "MUL239",
                    description: None,
                    value: 239,
                },
                EnumVariant {
                    name: "MUL240",
                    description: None,
                    value: 240,
                },
                EnumVariant {
                    name: "MUL241",
                    description: None,
                    value: 241,
                },
                EnumVariant {
                    name: "MUL242",
                    description: None,
                    value: 242,
                },
                EnumVariant {
                    name: "MUL243",
                    description: None,
                    value: 243,
                },
                EnumVariant {
                    name: "MUL244",
                    description: None,
                    value: 244,
                },
                EnumVariant {
                    name: "MUL245",
                    description: None,
                    value: 245,
                },
                EnumVariant {
                    name: "MUL246",
                    description: None,
                    value: 246,
                },
                EnumVariant {
                    name: "MUL247",
                    description: None,
                    value: 247,
                },
                EnumVariant {
                    name: "MUL248",
                    description: None,
                    value: 248,
                },
                EnumVariant {
                    name: "MUL249",
                    description: None,
                    value: 249,
                },
                EnumVariant {
                    name: "MUL250",
                    description: None,
                    value: 250,
                },
                EnumVariant {
                    name: "MUL251",
                    description: None,
                    value: 251,
                },
                EnumVariant {
                    name: "MUL252",
                    description: None,
                    value: 252,
                },
                EnumVariant {
                    name: "MUL253",
                    description: None,
                    value: 253,
                },
                EnumVariant {
                    name: "MUL254",
                    description: None,
                    value: 254,
                },
                EnumVariant {
                    name: "MUL255",
                    description: None,
                    value: 255,
                },
                EnumVariant {
                    name: "MUL256",
                    description: None,
                    value: 256,
                },
                EnumVariant {
                    name: "MUL257",
                    description: None,
                    value: 257,
                },
                EnumVariant {
                    name: "MUL258",
                    description: None,
                    value: 258,
                },
                EnumVariant {
                    name: "MUL259",
                    description: None,
                    value: 259,
                },
                EnumVariant {
                    name: "MUL260",
                    description: None,
                    value: 260,
                },
                EnumVariant {
                    name: "MUL261",
                    description: None,
                    value: 261,
                },
                EnumVariant {
                    name: "MUL262",
                    description: None,
                    value: 262,
                },
                EnumVariant {
                    name: "MUL263",
                    description: None,
                    value: 263,
                },
                EnumVariant {
                    name: "MUL264",
                    description: None,
                    value: 264,
                },
                EnumVariant {
                    name: "MUL265",
                    description: None,
                    value: 265,
                },
                EnumVariant {
                    name: "MUL266",
                    description: None,
                    value: 266,
                },
                EnumVariant {
                    name: "MUL267",
                    description: None,
                    value: 267,
                },
                EnumVariant {
                    name: "MUL268",
                    description: None,
                    value: 268,
                },
                EnumVariant {
                    name: "MUL269",
                    description: None,
                    value: 269,
                },
                EnumVariant {
                    name: "MUL270",
                    description: None,
                    value: 270,
                },
                EnumVariant {
                    name: "MUL271",
                    description: None,
                    value: 271,
                },
                EnumVariant {
                    name: "MUL272",
                    description: None,
                    value: 272,
                },
                EnumVariant {
                    name: "MUL273",
                    description: None,
                    value: 273,
                },
                EnumVariant {
                    name: "MUL274",
                    description: None,
                    value: 274,
                },
                EnumVariant {
                    name: "MUL275",
                    description: None,
                    value: 275,
                },
                EnumVariant {
                    name: "MUL276",
                    description: None,
                    value: 276,
                },
                EnumVariant {
                    name: "MUL277",
                    description: None,
                    value: 277,
                },
                EnumVariant {
                    name: "MUL278",
                    description: None,
                    value: 278,
                },
                EnumVariant {
                    name: "MUL279",
                    description: None,
                    value: 279,
                },
                EnumVariant {
                    name: "MUL280",
                    description: None,
                    value: 280,
                },
                EnumVariant {
                    name: "MUL281",
                    description: None,
                    value: 281,
                },
                EnumVariant {
                    name: "MUL282",
                    description: None,
                    value: 282,
                },
                EnumVariant {
                    name: "MUL283",
                    description: None,
                    value: 283,
                },
                EnumVariant {
                    name: "MUL284",
                    description: None,
                    value: 284,
                },
                EnumVariant {
                    name: "MUL285",
                    description: None,
                    value: 285,
                },
                EnumVariant {
                    name: "MUL286",
                    description: None,
                    value: 286,
                },
                EnumVariant {
                    name: "MUL287",
                    description: None,
                    value: 287,
                },
                EnumVariant {
                    name: "MUL288",
                    description: None,
                    value: 288,
                },
                EnumVariant {
                    name: "MUL289",
                    description: None,
                    value: 289,
                },
                EnumVariant {
                    name: "MUL290",
                    description: None,
                    value: 290,
                },
                EnumVariant {
                    name: "MUL291",
                    description: None,
                    value: 291,
                },
                EnumVariant {
                    name: "MUL292",
                    description: None,
                    value: 292,
                },
                EnumVariant {
                    name: "MUL293",
                    description: None,
                    value: 293,
                },
                EnumVariant {
                    name: "MUL294",
                    description: None,
                    value: 294,
                },
                EnumVariant {
                    name: "MUL295",
                    description: None,
                    value: 295,
                },
                EnumVariant {
                    name: "MUL296",
                    description: None,
                    value: 296,
                },
                EnumVariant {
                    name: "MUL297",
                    description: None,
                    value: 297,
                },
                EnumVariant {
                    name: "MUL298",
                    description: None,
                    value: 298,
                },
                EnumVariant {
                    name: "MUL299",
                    description: None,
                    value: 299,
                },
                EnumVariant {
                    name: "MUL300",
                    description: None,
                    value: 300,
                },
                EnumVariant {
                    name: "MUL301",
                    description: None,
                    value: 301,
                },
                EnumVariant {
                    name: "MUL302",
                    description: None,
                    value: 302,
                },
                EnumVariant {
                    name: "MUL303",
                    description: None,
                    value: 303,
                },
                EnumVariant {
                    name: "MUL304",
                    description: None,
                    value: 304,
                },
                EnumVariant {
                    name: "MUL305",
                    description: None,
                    value: 305,
                },
                EnumVariant {
                    name: "MUL306",
                    description: None,
                    value: 306,
                },
                EnumVariant {
                    name: "MUL307",
                    description: None,
                    value: 307,
                },
                EnumVariant {
                    name: "MUL308",
                    description: None,
                    value: 308,
                },
                EnumVariant {
                    name: "MUL309",
                    description: None,
                    value: 309,
                },
                EnumVariant {
                    name: "MUL310",
                    description: None,
                    value: 310,
                },
                EnumVariant {
                    name: "MUL311",
                    description: None,
                    value: 311,
                },
                EnumVariant {
                    name: "MUL312",
                    description: None,
                    value: 312,
                },
                EnumVariant {
                    name: "MUL313",
                    description: None,
                    value: 313,
                },
                EnumVariant {
                    name: "MUL314",
                    description: None,
                    value: 314,
                },
                EnumVariant {
                    name: "MUL315",
                    description: None,
                    value: 315,
                },
                EnumVariant {
                    name: "MUL316",
                    description: None,
                    value: 316,
                },
                EnumVariant {
                    name: "MUL317",
                    description: None,
                    value: 317,
                },
                EnumVariant {
                    name: "MUL318",
                    description: None,
                    value: 318,
                },
                EnumVariant {
                    name: "MUL319",
                    description: None,
                    value: 319,
                },
                EnumVariant {
                    name: "MUL320",
                    description: None,
                    value: 320,
                },
                EnumVariant {
                    name: "MUL321",
                    description: None,
                    value: 321,
                },
                EnumVariant {
                    name: "MUL322",
                    description: None,
                    value: 322,
                },
                EnumVariant {
                    name: "MUL323",
                    description: None,
                    value: 323,
                },
                EnumVariant {
                    name: "MUL324",
                    description: None,
                    value: 324,
                },
                EnumVariant {
                    name: "MUL325",
                    description: None,
                    value: 325,
                },
                EnumVariant {
                    name: "MUL326",
                    description: None,
                    value: 326,
                },
                EnumVariant {
                    name: "MUL327",
                    description: None,
                    value: 327,
                },
                EnumVariant {
                    name: "MUL328",
                    description: None,
                    value: 328,
                },
                EnumVariant {
                    name: "MUL329",
                    description: None,
                    value: 329,
                },
                EnumVariant {
                    name: "MUL330",
                    description: None,
                    value: 330,
                },
                EnumVariant {
                    name: "MUL331",
                    description: None,
                    value: 331,
                },
                EnumVariant {
                    name: "MUL332",
                    description: None,
                    value: 332,
                },
                EnumVariant {
                    name: "MUL333",
                    description: None,
                    value: 333,
                },
                EnumVariant {
                    name: "MUL334",
                    description: None,
                    value: 334,
                },
                EnumVariant {
                    name: "MUL335",
                    description: None,
                    value: 335,
                },
                EnumVariant {
                    name: "MUL336",
                    description: None,
                    value: 336,
                },
                EnumVariant {
                    name: "MUL337",
                    description: None,
                    value: 337,
                },
                EnumVariant {
                    name: "MUL338",
                    description: None,
                    value: 338,
                },
                EnumVariant {
                    name: "MUL339",
                    description: None,
                    value: 339,
                },
                EnumVariant {
                    name: "MUL340",
                    description: None,
                    value: 340,
                },
                EnumVariant {
                    name: "MUL341",
                    description: None,
                    value: 341,
                },
                EnumVariant {
                    name: "MUL342",
                    description: None,
                    value: 342,
                },
                EnumVariant {
                    name: "MUL343",
                    description: None,
                    value: 343,
                },
                EnumVariant {
                    name: "MUL344",
                    description: None,
                    value: 344,
                },
                EnumVariant {
                    name: "MUL345",
                    description: None,
                    value: 345,
                },
                EnumVariant {
                    name: "MUL346",
                    description: None,
                    value: 346,
                },
                EnumVariant {
                    name: "MUL347",
                    description: None,
                    value: 347,
                },
                EnumVariant {
                    name: "MUL348",
                    description: None,
                    value: 348,
                },
                EnumVariant {
                    name: "MUL349",
                    description: None,
                    value: 349,
                },
                EnumVariant {
                    name: "MUL350",
                    description: None,
                    value: 350,
                },
                EnumVariant {
                    name: "MUL351",
                    description: None,
                    value: 351,
                },
                EnumVariant {
                    name: "MUL352",
                    description: None,
                    value: 352,
                },
                EnumVariant {
                    name: "MUL353",
                    description: None,
                    value: 353,
                },
                EnumVariant {
                    name: "MUL354",
                    description: None,
                    value: 354,
                },
                EnumVariant {
                    name: "MUL355",
                    description: None,
                    value: 355,
                },
                EnumVariant {
                    name: "MUL356",
                    description: None,
                    value: 356,
                },
                EnumVariant {
                    name: "MUL357",
                    description: None,
                    value: 357,
                },
                EnumVariant {
                    name: "MUL358",
                    description: None,
                    value: 358,
                },
                EnumVariant {
                    name: "MUL359",
                    description: None,
                    value: 359,
                },
                EnumVariant {
                    name: "MUL360",
                    description: None,
                    value: 360,
                },
                EnumVariant {
                    name: "MUL361",
                    description: None,
                    value: 361,
                },
                EnumVariant {
                    name: "MUL362",
                    description: None,
                    value: 362,
                },
                EnumVariant {
                    name: "MUL363",
                    description: None,
                    value: 363,
                },
                EnumVariant {
                    name: "MUL364",
                    description: None,
                    value: 364,
                },
                EnumVariant {
                    name: "MUL365",
                    description: None,
                    value: 365,
                },
                EnumVariant {
                    name: "MUL366",
                    description: None,
                    value: 366,
                },
                EnumVariant {
                    name: "MUL367",
                    description: None,
                    value: 367,
                },
                EnumVariant {
                    name: "MUL368",
                    description: None,
                    value: 368,
                },
                EnumVariant {
                    name: "MUL369",
                    description: None,
                    value: 369,
                },
                EnumVariant {
                    name: "MUL370",
                    description: None,
                    value: 370,
                },
                EnumVariant {
                    name: "MUL371",
                    description: None,
                    value: 371,
                },
                EnumVariant {
                    name: "MUL372",
                    description: None,
                    value: 372,
                },
                EnumVariant {
                    name: "MUL373",
                    description: None,
                    value: 373,
                },
                EnumVariant {
                    name: "MUL374",
                    description: None,
                    value: 374,
                },
                EnumVariant {
                    name: "MUL375",
                    description: None,
                    value: 375,
                },
                EnumVariant {
                    name: "MUL376",
                    description: None,
                    value: 376,
                },
                EnumVariant {
                    name: "MUL377",
                    description: None,
                    value: 377,
                },
                EnumVariant {
                    name: "MUL378",
                    description: None,
                    value: 378,
                },
                EnumVariant {
                    name: "MUL379",
                    description: None,
                    value: 379,
                },
                EnumVariant {
                    name: "MUL380",
                    description: None,
                    value: 380,
                },
                EnumVariant {
                    name: "MUL381",
                    description: None,
                    value: 381,
                },
                EnumVariant {
                    name: "MUL382",
                    description: None,
                    value: 382,
                },
                EnumVariant {
                    name: "MUL383",
                    description: None,
                    value: 383,
                },
                EnumVariant {
                    name: "MUL384",
                    description: None,
                    value: 384,
                },
                EnumVariant {
                    name: "MUL385",
                    description: None,
                    value: 385,
                },
                EnumVariant {
                    name: "MUL386",
                    description: None,
                    value: 386,
                },
                EnumVariant {
                    name: "MUL387",
                    description: None,
                    value: 387,
                },
                EnumVariant {
                    name: "MUL388",
                    description: None,
                    value: 388,
                },
                EnumVariant {
                    name: "MUL389",
                    description: None,
                    value: 389,
                },
                EnumVariant {
                    name: "MUL390",
                    description: None,
                    value: 390,
                },
                EnumVariant {
                    name: "MUL391",
                    description: None,
                    value: 391,
                },
                EnumVariant {
                    name: "MUL392",
                    description: None,
                    value: 392,
                },
                EnumVariant {
                    name: "MUL393",
                    description: None,
                    value: 393,
                },
                EnumVariant {
                    name: "MUL394",
                    description: None,
                    value: 394,
                },
                EnumVariant {
                    name: "MUL395",
                    description: None,
                    value: 395,
                },
                EnumVariant {
                    name: "MUL396",
                    description: None,
                    value: 396,
                },
                EnumVariant {
                    name: "MUL397",
                    description: None,
                    value: 397,
                },
                EnumVariant {
                    name: "MUL398",
                    description: None,
                    value: 398,
                },
                EnumVariant {
                    name: "MUL399",
                    description: None,
                    value: 399,
                },
                EnumVariant {
                    name: "MUL400",
                    description: None,
                    value: 400,
                },
                EnumVariant {
                    name: "MUL401",
                    description: None,
                    value: 401,
                },
                EnumVariant {
                    name: "MUL402",
                    description: None,
                    value: 402,
                },
                EnumVariant {
                    name: "MUL403",
                    description: None,
                    value: 403,
                },
                EnumVariant {
                    name: "MUL404",
                    description: None,
                    value: 404,
                },
                EnumVariant {
                    name: "MUL405",
                    description: None,
                    value: 405,
                },
                EnumVariant {
                    name: "MUL406",
                    description: None,
                    value: 406,
                },
                EnumVariant {
                    name: "MUL407",
                    description: None,
                    value: 407,
                },
                EnumVariant {
                    name: "MUL408",
                    description: None,
                    value: 408,
                },
                EnumVariant {
                    name: "MUL409",
                    description: None,
                    value: 409,
                },
                EnumVariant {
                    name: "MUL410",
                    description: None,
                    value: 410,
                },
                EnumVariant {
                    name: "MUL411",
                    description: None,
                    value: 411,
                },
                EnumVariant {
                    name: "MUL412",
                    description: None,
                    value: 412,
                },
                EnumVariant {
                    name: "MUL413",
                    description: None,
                    value: 413,
                },
                EnumVariant {
                    name: "MUL414",
                    description: None,
                    value: 414,
                },
                EnumVariant {
                    name: "MUL415",
                    description: None,
                    value: 415,
                },
                EnumVariant {
                    name: "MUL416",
                    description: None,
                    value: 416,
                },
                EnumVariant {
                    name: "MUL417",
                    description: None,
                    value: 417,
                },
                EnumVariant {
                    name: "MUL418",
                    description: None,
                    value: 418,
                },
                EnumVariant {
                    name: "MUL419",
                    description: None,
                    value: 419,
                },
                EnumVariant {
                    name: "MUL420",
                    description: None,
                    value: 420,
                },
                EnumVariant {
                    name: "MUL421",
                    description: None,
                    value: 421,
                },
                EnumVariant {
                    name: "MUL422",
                    description: None,
                    value: 422,
                },
                EnumVariant {
                    name: "MUL423",
                    description: None,
                    value: 423,
                },
                EnumVariant {
                    name: "MUL424",
                    description: None,
                    value: 424,
                },
                EnumVariant {
                    name: "MUL425",
                    description: None,
                    value: 425,
                },
                EnumVariant {
                    name: "MUL426",
                    description: None,
                    value: 426,
                },
                EnumVariant {
                    name: "MUL427",
                    description: None,
                    value: 427,
                },
                EnumVariant {
                    name: "MUL428",
                    description: None,
                    value: 428,
                },
                EnumVariant {
                    name: "MUL429",
                    description: None,
                    value: 429,
                },
                EnumVariant {
                    name: "MUL430",
                    description: None,
                    value: 430,
                },
                EnumVariant {
                    name: "MUL431",
                    description: None,
                    value: 431,
                },
                EnumVariant {
                    name: "MUL432",
                    description: None,
                    value: 432,
                },
            ],
        },
        Enum {
            name: "Pllp",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "DIV2",
                    description: Some("PLLP=2"),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some("PLLP=4"),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV6",
                    description: Some("PLLP=6"),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV8",
                    description: Some("PLLP=8"),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Pllq",
            description: None,
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "DIV2",
                    description: None,
                    value: 2,
                },
                EnumVariant {
                    name: "DIV3",
                    description: None,
                    value: 3,
                },
                EnumVariant {
                    name: "DIV4",
                    description: None,
                    value: 4,
                },
                EnumVariant {
                    name: "DIV5",
                    description: None,
                    value: 5,
                },
                EnumVariant {
                    name: "DIV6",
                    description: None,
                    value: 6,
                },
                EnumVariant {
                    name: "DIV7",
                    description: None,
                    value: 7,
                },
                EnumVariant {
                    name: "DIV8",
                    description: None,
                    value: 8,
                },
                EnumVariant {
                    name: "DIV9",
                    description: None,
                    value: 9,
                },
                EnumVariant {
                    name: "DIV10",
                    description: None,
                    value: 10,
                },
                EnumVariant {
                    name: "DIV11",
                    description: None,
                    value: 11,
                },
                EnumVariant {
                    name: "DIV12",
                    description: None,
                    value: 12,
                },
                EnumVariant {
                    name: "DIV13",
                    description: None,
                    value: 13,
                },
                EnumVariant {
                    name: "DIV14",
                    description: None,
                    value: 14,
                },
                EnumVariant {
                    name: "DIV15",
                    description: None,
                    value: 15,
                },
            ],
        },
        Enum {
            name: "Pllr",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "DIV2",
                    description: None,
                    value: 2,
                },
                EnumVariant {
                    name: "DIV3",
                    description: None,
                    value: 3,
                },
                EnumVariant {
                    name: "DIV4",
                    description: None,
                    value: 4,
                },
                EnumVariant {
                    name: "DIV5",
                    description: None,
                    value: 5,
                },
                EnumVariant {
                    name: "DIV6",
                    description: None,
                    value: 6,
                },
                EnumVariant {
                    name: "DIV7",
                    description: None,
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Pllsrc",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "HSI",
                    description: Some("HSI clock selected as PLL and PLLI2S clock entry"),
                    value: 0,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some("HSE oscillator clock selected as PLL and PLLI2S clock entry"),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Ppre",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some("HCLK not divided"),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some("HCLK divided by 2"),
                    value: 4,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some("HCLK divided by 4"),
                    value: 5,
                },
                EnumVariant {
                    name: "DIV8",
                    description: Some("HCLK divided by 8"),
                    value: 6,
                },
                EnumVariant {
                    name: "DIV16",
                    description: Some("HCLK divided by 16"),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Rtcsel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "DISABLE",
                    description: Some("No clock"),
                    value: 0,
                },
                EnumVariant {
                    name: "LSE",
                    description: Some("LSE oscillator clock used as RTC clock"),
                    value: 1,
                },
                EnumVariant {
                    name: "LSI",
                    description: Some("LSI oscillator clock used as RTC clock"),
                    value: 2,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some("HSE oscillator clock divided by a prescaler used as RTC clock"),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Spreadsel",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "CENTER",
                    description: Some("Center spread"),
                    value: 0,
                },
                EnumVariant {
                    name: "DOWN",
                    description: Some("Down spread"),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Sw",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HSI",
                    description: Some("HSI selected as system clock"),
                    value: 0,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some("HSE selected as system clock"),
                    value: 1,
                },
                EnumVariant {
                    name: "PLL1_P",
                    description: Some("PLL selected as system clock"),
                    value: 2,
                },
            ],
        },
    ],
};
