
use crate::metadata::ir::*;
pub(crate) static REGISTERS: IR = IR {
    blocks: &[
        Block {
            name: "Rcc",
            extends: None,
            description: Some(
                "Reset and clock control.",
            ),
            items: &[
                BlockItem {
                    name: "cr",
                    description: Some(
                        "RCC control register.",
                    ),
                    array: None,
                    byte_offset: 0x0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Cr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "sr",
                    description: Some(
                        "RCC status register.",
                    ),
                    array: None,
                    byte_offset: 0x4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Sr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "stopcr",
                    description: Some(
                        "RCC Stop mode control register.",
                    ),
                    array: None,
                    byte_offset: 0x8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Stopcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "cfgr1",
                    description: Some(
                        "RCC configuration register 1.",
                    ),
                    array: None,
                    byte_offset: 0x20,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Cfgr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "cfgr2",
                    description: Some(
                        "RCC configuration register 2.",
                    ),
                    array: None,
                    byte_offset: 0x24,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Cfgr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ckprotr",
                    description: Some(
                        "RCC clock protection register.",
                    ),
                    array: None,
                    byte_offset: 0x28,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ckprotr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "bdcr",
                    description: Some(
                        "RCC backup domain protection register.",
                    ),
                    array: None,
                    byte_offset: 0x2c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Bdcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "hwrsr",
                    description: Some(
                        "RCC reset status register for hardware.",
                    ),
                    array: None,
                    byte_offset: 0x30,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Hwrsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "rsr",
                    description: Some(
                        "RCC reset register.",
                    ),
                    array: None,
                    byte_offset: 0x34,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Rsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "lsecfgr",
                    description: Some(
                        "RCC LSE configuration register.",
                    ),
                    array: None,
                    byte_offset: 0x40,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Lsecfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "msicfgr",
                    description: Some(
                        "RCC MSI configuration register.",
                    ),
                    array: None,
                    byte_offset: 0x44,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Msicfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "hsicfgr",
                    description: Some(
                        "RCC HSI configuration register.",
                    ),
                    array: None,
                    byte_offset: 0x48,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Hsicfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "hsimcr",
                    description: Some(
                        "RCC HSI monitor control register.",
                    ),
                    array: None,
                    byte_offset: 0x4c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Hsimcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "hsimsr",
                    description: Some(
                        "RCC HSI monitor status register.",
                    ),
                    array: None,
                    byte_offset: 0x50,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Hsimsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "hsecfgr",
                    description: Some(
                        "RCC HSE configuration register.",
                    ),
                    array: None,
                    byte_offset: 0x54,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Hsecfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pllcfgr1",
                    description: Some(
                        "RCC PLL1 configuration register 1.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0x80,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll1cfgr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pllcfgr2",
                    description: Some(
                        "RCC PLL1 configuration register 2.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0x84,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll1cfgr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pllcfgr3",
                    description: Some(
                        "RCC PLL1 configuration register 3.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0x88,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll1cfgr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pll2cfgr1",
                    description: Some(
                        "RCC PLL2 configuration register 1.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0x90,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll2cfgr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pll2cfgr2",
                    description: Some(
                        "RCC PLL2 configuration register 2.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0x94,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll2cfgr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pll2cfgr3",
                    description: Some(
                        "RCC PLL2 configuration register 3.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0x98,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll2cfgr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pll3cfgr1",
                    description: Some(
                        "RCC PLL3 configuration register 1.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0xa0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll3cfgr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pll3cfgr2",
                    description: Some(
                        "RCC PLL3 configuration register 2.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0xa4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll3cfgr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pll3cfgr3",
                    description: Some(
                        "RCC PLL3 configuration register 3.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0xa8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll3cfgr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pll4cfgr1",
                    description: Some(
                        "RCC PLL4 configuration register 1.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0xb0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll4cfgr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pll4cfgr2",
                    description: Some(
                        "RCC PLL4 configuration register 2.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0xb4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll4cfgr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pll4cfgr3",
                    description: Some(
                        "RCC PLL4 configuration register 3.",
                    ),
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 16,
                            },
                        ),
                    ),
                    byte_offset: 0xb8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pll4cfgr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic1cfgr",
                    description: Some(
                        "RCC IC1 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xc4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic1cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic2cfgr",
                    description: Some(
                        "RCC IC2 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xc8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic2cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic3cfgr",
                    description: Some(
                        "RCC IC3 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xcc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic3cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic4cfgr",
                    description: Some(
                        "RCC IC4 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xd0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic4cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic5cfgr",
                    description: Some(
                        "RCC IC5 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xd4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic5cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic6cfgr",
                    description: Some(
                        "RCC IC6 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xd8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic6cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic7cfgr",
                    description: Some(
                        "RCC IC7 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xdc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic7cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic8cfgr",
                    description: Some(
                        "RCC IC8 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xe0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic8cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic9cfgr",
                    description: Some(
                        "RCC IC9 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xe4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic9cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic10cfgr",
                    description: Some(
                        "RCC IC10 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xe8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic10cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic11cfgr",
                    description: Some(
                        "RCC IC11 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xec,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic11cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic12cfgr",
                    description: Some(
                        "RCC IC12 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xf0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic12cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic13cfgr",
                    description: Some(
                        "RCC IC13 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xf4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic13cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic14cfgr",
                    description: Some(
                        "RCC IC14 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xf8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic14cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic15cfgr",
                    description: Some(
                        "RCC IC15 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0xfc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic15cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic16cfgr",
                    description: Some(
                        "RCC IC16 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0x100,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic16cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic17cfgr",
                    description: Some(
                        "RCC IC17 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0x104,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic17cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic18cfgr",
                    description: Some(
                        "RCC IC18 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0x108,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic18cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic19cfgr",
                    description: Some(
                        "RCC IC19 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0x10c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic19cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ic20cfgr",
                    description: Some(
                        "RCC IC20 configuration register.",
                    ),
                    array: None,
                    byte_offset: 0x110,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ic20cfgr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "cier",
                    description: Some(
                        "RCC clock-source interrupt enable register.",
                    ),
                    array: None,
                    byte_offset: 0x124,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Cier",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "cifr",
                    description: Some(
                        "RCC clock-source interrupt flag register.",
                    ),
                    array: None,
                    byte_offset: 0x128,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Cifr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "cicr",
                    description: Some(
                        "RCC clock-source interrupt Clear register.",
                    ),
                    array: None,
                    byte_offset: 0x12c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Cicr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr1",
                    description: Some(
                        "RCC clock configuration for independent peripheral register1.",
                    ),
                    array: None,
                    byte_offset: 0x144,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr2",
                    description: Some(
                        "RCC clock configuration for independent peripheral register 2.",
                    ),
                    array: None,
                    byte_offset: 0x148,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr3",
                    description: Some(
                        "RCC clock configuration for independent peripheral register3.",
                    ),
                    array: None,
                    byte_offset: 0x14c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr4",
                    description: Some(
                        "RCC clock configuration for independent peripheral register4.",
                    ),
                    array: None,
                    byte_offset: 0x150,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr4",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr5",
                    description: Some(
                        "RCC lock configuration for independent peripheral register5.",
                    ),
                    array: None,
                    byte_offset: 0x154,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr5",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr6",
                    description: Some(
                        "RCC clock configuration for independent peripheral register6.",
                    ),
                    array: None,
                    byte_offset: 0x158,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr6",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr7",
                    description: Some(
                        "RCC clock configuration for independent peripheral register7.",
                    ),
                    array: None,
                    byte_offset: 0x15c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr7",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr8",
                    description: Some(
                        "RCC clock configuration for independent peripheral register8.",
                    ),
                    array: None,
                    byte_offset: 0x160,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr8",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr9",
                    description: Some(
                        "RCC clock configuration for independent peripheral register9.",
                    ),
                    array: None,
                    byte_offset: 0x164,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr9",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr12",
                    description: Some(
                        "RCC clock configuration for independent peripheral register12.",
                    ),
                    array: None,
                    byte_offset: 0x170,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr12",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr13",
                    description: Some(
                        "RCC clock configuration for independent peripheral register13.",
                    ),
                    array: None,
                    byte_offset: 0x174,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr13",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccipr14",
                    description: Some(
                        "RCC clock configuration for independent peripheral register14.",
                    ),
                    array: None,
                    byte_offset: 0x178,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccipr14",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "busrstr",
                    description: Some(
                        "RCC SoC buses reset register.",
                    ),
                    array: None,
                    byte_offset: 0x204,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Busrstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "miscrstr",
                    description: Some(
                        "RCC miscellaneous configurations reset register.",
                    ),
                    array: None,
                    byte_offset: 0x208,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Miscrstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "memrstr",
                    description: Some(
                        "RCC memories reset register.",
                    ),
                    array: None,
                    byte_offset: 0x20c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Memrstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb1rstr",
                    description: Some(
                        "RCC AHB1 Reset register.",
                    ),
                    array: None,
                    byte_offset: 0x210,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb1rstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb2rstr",
                    description: Some(
                        "RCC AHB2 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x214,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb2rstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb3rstr",
                    description: Some(
                        "RCC AHB3 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x218,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb3rstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb4rstr",
                    description: Some(
                        "RCC AHB4 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x21c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb4rstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb5rstr",
                    description: Some(
                        "RCC AHB5 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x220,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb5rstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1lrstr",
                    description: Some(
                        "RCC APB1L reset register.",
                    ),
                    array: None,
                    byte_offset: 0x224,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1lrstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1hrstr",
                    description: Some(
                        "RCC APB1H reset register.",
                    ),
                    array: None,
                    byte_offset: 0x228,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1hrstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb2rstr",
                    description: Some(
                        "RCC APB2 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x22c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb2rstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4lrstr",
                    description: Some(
                        "RCC APB4L reset register.",
                    ),
                    array: None,
                    byte_offset: 0x234,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4lrstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4hrstr",
                    description: Some(
                        "RCC APB4H reset register.",
                    ),
                    array: None,
                    byte_offset: 0x238,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4hrstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb5rstr",
                    description: Some(
                        "RCC APB5 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x23c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb5rstr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "divenr",
                    description: Some(
                        "RCC IC dividers enable register.",
                    ),
                    array: None,
                    byte_offset: 0x240,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Divenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "busenr",
                    description: Some(
                        "RCC SoC buses enable register.",
                    ),
                    array: None,
                    byte_offset: 0x244,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Busenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "miscenr",
                    description: Some(
                        "RCC miscellaneous configuration enable register.",
                    ),
                    array: None,
                    byte_offset: 0x248,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Miscenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "memenr",
                    description: Some(
                        "RCC memory enable register.",
                    ),
                    array: None,
                    byte_offset: 0x24c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Memenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb1enr",
                    description: Some(
                        "RCC AHB1 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x250,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb1enr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb2enr",
                    description: Some(
                        "RCC AHB2 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x254,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb2enr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb3enr",
                    description: Some(
                        "RCC AHB3 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x258,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb3enr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb4enr",
                    description: Some(
                        "RCC AHB4 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x25c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb4enr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb5enr",
                    description: Some(
                        "RCC AHB5 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x260,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb5enr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1lenr",
                    description: Some(
                        "RCC APB1L enable register.",
                    ),
                    array: None,
                    byte_offset: 0x264,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1lenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1henr",
                    description: Some(
                        "RCC APB1H enable register.",
                    ),
                    array: None,
                    byte_offset: 0x268,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1henr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb2enr",
                    description: Some(
                        "RCC APB2 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x26c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb2enr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb3enr",
                    description: Some(
                        "RCC APB3 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x270,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb3enr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4lenr",
                    description: Some(
                        "RCC APB4L enable register.",
                    ),
                    array: None,
                    byte_offset: 0x274,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4lenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4henr",
                    description: Some(
                        "RCC APB4H enable register.",
                    ),
                    array: None,
                    byte_offset: 0x278,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4henr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb5enr",
                    description: Some(
                        "RCC APB5 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x27c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb5enr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "divlpenr",
                    description: Some(
                        "RCC dividers Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x280,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Divlpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "buslpenr",
                    description: Some(
                        "RCC SoC buses Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x284,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Buslpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "misclpenr",
                    description: Some(
                        "RCC miscellaneous configurations Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x288,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Misclpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "memlpenr",
                    description: Some(
                        "RCC memory Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x28c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Memlpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb1lpenr",
                    description: Some(
                        "RCC AHB1 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x290,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb1lpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb2lpenr",
                    description: Some(
                        "RCC AHB2 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x294,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb2lpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb3lpenr",
                    description: Some(
                        "RCC AHB3 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x298,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb3lpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb4lpenr",
                    description: Some(
                        "RCC AHB4 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x29c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb4lpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb5lpenr",
                    description: Some(
                        "RCC AHB5 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x2a0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb5lpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1llpenr",
                    description: Some(
                        "RCC APB1L Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x2a4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1llpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1hlpenr",
                    description: Some(
                        "RCC APB1H Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x2a8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1hlpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb2lpenr",
                    description: Some(
                        "RCC APB2 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x2ac,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb2lpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb3lpenr",
                    description: Some(
                        "RCC APB3 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x2b0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb3lpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4llpenr",
                    description: Some(
                        "RCC APB4L Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x2b4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4llpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4hlpenr",
                    description: Some(
                        "RCC APB4H Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x2b8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4hlpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb5lpenr",
                    description: Some(
                        "RCC APB5 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x2bc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb5lpenr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "rdcr",
                    description: Some(
                        "RCC APB5 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x44c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Rdcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "seccfgr0",
                    description: Some(
                        "RCC oscillator secure configuration register0.",
                    ),
                    array: None,
                    byte_offset: 0x780,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Seccfgr0",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgr0",
                    description: Some(
                        "RCC oscillator privilege configuration register0.",
                    ),
                    array: None,
                    byte_offset: 0x784,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgr0",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "lockcfgr0",
                    description: Some(
                        "RCC oscillator lock configuration register0.",
                    ),
                    array: None,
                    byte_offset: 0x788,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Lockcfgr0",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgr0",
                    description: Some(
                        "RCC oscillator public configuration register0.",
                    ),
                    array: None,
                    byte_offset: 0x78c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgr0",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "seccfgr1",
                    description: Some(
                        "RCC PLL secure configuration register1.",
                    ),
                    array: None,
                    byte_offset: 0x790,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Seccfgr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgr1",
                    description: Some(
                        "RCC PLL privilege configuration register1.",
                    ),
                    array: None,
                    byte_offset: 0x794,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "lockcfgr1",
                    description: Some(
                        "RCC PLL lock configuration register1.",
                    ),
                    array: None,
                    byte_offset: 0x798,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Lockcfgr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgr1",
                    description: Some(
                        "RCC PLL public configuration register1.",
                    ),
                    array: None,
                    byte_offset: 0x79c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "seccfgr2",
                    description: Some(
                        "RCC divider secure configuration register2.",
                    ),
                    array: None,
                    byte_offset: 0x7a0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Seccfgr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgr2",
                    description: Some(
                        "RCC divider privilege configuration register2.",
                    ),
                    array: None,
                    byte_offset: 0x7a4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "lockcfgr2",
                    description: Some(
                        "RCC divider lock configuration register2.",
                    ),
                    array: None,
                    byte_offset: 0x7a8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Lockcfgr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgr2",
                    description: Some(
                        "RCC divider public configuration register2.",
                    ),
                    array: None,
                    byte_offset: 0x7ac,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "seccfgr3",
                    description: Some(
                        "RCC system secure configuration register3.",
                    ),
                    array: None,
                    byte_offset: 0x7b0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Seccfgr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgr3",
                    description: Some(
                        "RCC system privilege configuration register3.",
                    ),
                    array: None,
                    byte_offset: 0x7b4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "lockcfgr3",
                    description: Some(
                        "RCC system lock configuration register3.",
                    ),
                    array: None,
                    byte_offset: 0x7b8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Lockcfgr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgr3",
                    description: Some(
                        "RCC system public configuration register3.",
                    ),
                    array: None,
                    byte_offset: 0x7bc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "seccfgr4",
                    description: Some(
                        "RCC bus secure configuration register4.",
                    ),
                    array: None,
                    byte_offset: 0x7c0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Seccfgr4",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgr4",
                    description: Some(
                        "RCC bus privilege configuration register4.",
                    ),
                    array: None,
                    byte_offset: 0x7c4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgr4",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "lockcfgr4",
                    description: Some(
                        "RCC bus lock configuration register4.",
                    ),
                    array: None,
                    byte_offset: 0x7c8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Lockcfgr4",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgr4",
                    description: Some(
                        "RCC bus public configuration register4.",
                    ),
                    array: None,
                    byte_offset: 0x7cc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgr4",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgr5",
                    description: Some(
                        "RCC bus public configuration register4.",
                    ),
                    array: None,
                    byte_offset: 0x7d0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgr5",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "csr",
                    description: Some(
                        "RCC control set register.",
                    ),
                    array: None,
                    byte_offset: 0x800,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Csr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "stopcsr",
                    description: Some(
                        "RCC Stop configuration register.",
                    ),
                    array: None,
                    byte_offset: 0x808,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Stopcsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "busrstsr",
                    description: Some(
                        "RCC bus reset set register.",
                    ),
                    array: None,
                    byte_offset: 0xa04,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Busrstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "miscrstsr",
                    description: Some(
                        "RCC miscellaneous reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa08,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Miscrstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "memrstsr",
                    description: Some(
                        "RCC memory reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa0c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Memrstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb1rstsr",
                    description: Some(
                        "RCC AHB1 reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa10,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb1rstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb2rstsr",
                    description: Some(
                        "RCC AHB2 reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa14,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb2rstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb3rstsr",
                    description: Some(
                        "RCC AHB3 reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa18,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb3rstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb4rstsr",
                    description: Some(
                        "RCC AHB4 reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa1c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb4rstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb5rstsr",
                    description: Some(
                        "RCC AHB5 reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa20,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb5rstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1lrstsr",
                    description: Some(
                        "RCC APB1L reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa24,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1lrstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1hrstsr",
                    description: Some(
                        "RCC APB1H reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa28,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1hrstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb2rstsr",
                    description: Some(
                        "RCC APB2 reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa2c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb2rstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4lrstsr",
                    description: Some(
                        "RCC APB4L reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa34,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4lrstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4hrstsr",
                    description: Some(
                        "RCC APB4H reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa38,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4hrstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb5rstsr",
                    description: Some(
                        "RCC APB5 reset register.",
                    ),
                    array: None,
                    byte_offset: 0xa3c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb5rstsr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "divensr",
                    description: Some(
                        "RCC Divider enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa40,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Divensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "busensr",
                    description: Some(
                        "RCC bus enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa44,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Busensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "miscensr",
                    description: Some(
                        "RCC miscellaneous enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa48,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Miscensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "memensr",
                    description: Some(
                        "RCC memory enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa4c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Memensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb1ensr",
                    description: Some(
                        "RCC AHB1 enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa50,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb1ensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb2ensr",
                    description: Some(
                        "RCC AHB2 enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa54,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb2ensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb3ensr",
                    description: Some(
                        "RCC AHB3 enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa58,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb3ensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb4ensr",
                    description: Some(
                        "RCC AHB4 enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa5c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb4ensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb5ensr",
                    description: Some(
                        "RCC AHB5 enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa60,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb5ensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1lensr",
                    description: Some(
                        "RCC APB1L enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa64,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1lensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1hensr",
                    description: Some(
                        "RCC APB1H enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa68,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1hensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb2ensr",
                    description: Some(
                        "RCC APB2 enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa6c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb2ensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb3ensr",
                    description: Some(
                        "RCC APB3 enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa70,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb3ensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4lensr",
                    description: Some(
                        "RCC APB4L enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa74,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4lensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4hensr",
                    description: Some(
                        "RCC APB4H enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa78,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4hensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb5ensr",
                    description: Some(
                        "RCC APB5 enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa7c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb5ensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "divlpensr",
                    description: Some(
                        "RCC divider Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa80,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Divlpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "buslpensr",
                    description: Some(
                        "RCC bus Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa84,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Buslpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "misclpensr",
                    description: Some(
                        "RCC miscellaneous Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa88,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Misclpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "memlpensr",
                    description: Some(
                        "RCC memory sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa8c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Memlpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb1lpensr",
                    description: Some(
                        "RCC AHB1 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa90,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb1lpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb2lpensr",
                    description: Some(
                        "RCC AHB2 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa94,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb2lpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb3lpensr",
                    description: Some(
                        "RCC AHB3 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa98,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb3lpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb4lpensr",
                    description: Some(
                        "RCC AHB4 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xa9c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb4lpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb5lpensr",
                    description: Some(
                        "RCC AHB5 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xaa0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb5lpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1llpensr",
                    description: Some(
                        "RCC APB1L Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xaa4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1llpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1hlpensr",
                    description: Some(
                        "RCC APB1H Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xaa8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1hlpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb2lpensr",
                    description: Some(
                        "RCC APB2 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xaac,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb2lpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb3lpensr",
                    description: Some(
                        "RCC APB3 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xab0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb3lpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4llpensr",
                    description: Some(
                        "RCC APB4L Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xab4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4llpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4hlpensr",
                    description: Some(
                        "RCC APB4H Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xab8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4hlpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb5lpensr",
                    description: Some(
                        "RCC APB5 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0xabc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb5lpensr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgsr0",
                    description: Some(
                        "RCC oscillator privilege configuration register0.",
                    ),
                    array: None,
                    byte_offset: 0xf84,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgsr0",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgsr0",
                    description: Some(
                        "RCC oscillator public configuration register0.",
                    ),
                    array: None,
                    byte_offset: 0xf8c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgsr0",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgsr1",
                    description: Some(
                        "RCC PLL privilege configuration register1.",
                    ),
                    array: None,
                    byte_offset: 0xf94,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgsr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgsr1",
                    description: Some(
                        "RCC PLL public configuration register1.",
                    ),
                    array: None,
                    byte_offset: 0xf9c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgsr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgsr2",
                    description: Some(
                        "RCC divider privilege configuration register2.",
                    ),
                    array: None,
                    byte_offset: 0xfa4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgsr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgsr2",
                    description: Some(
                        "RCC divider public configuration register2.",
                    ),
                    array: None,
                    byte_offset: 0xfac,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgsr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "seccfgsr3",
                    description: Some(
                        "RCC system secure configuration register3.",
                    ),
                    array: None,
                    byte_offset: 0xfb0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Seccfgsr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgsr3",
                    description: Some(
                        "RCC system privilege configuration register3.",
                    ),
                    array: None,
                    byte_offset: 0xfb4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgsr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "lockcfgsr3",
                    description: Some(
                        "RCC system lock configuration register3.",
                    ),
                    array: None,
                    byte_offset: 0xfb8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Lockcfgsr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgsr3",
                    description: Some(
                        "RCC system public configuration register3.",
                    ),
                    array: None,
                    byte_offset: 0xfbc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgsr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgsr4",
                    description: Some(
                        "RCC privilege configuration register4.",
                    ),
                    array: None,
                    byte_offset: 0xfc4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgsr4",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgsr4",
                    description: Some(
                        "RCC public configuration register4.",
                    ),
                    array: None,
                    byte_offset: 0xfcc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgsr4",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgsr5",
                    description: Some(
                        "RCC public configuration register4.",
                    ),
                    array: None,
                    byte_offset: 0xfd0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgsr5",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ccr",
                    description: Some(
                        "RCC control Clear register.",
                    ),
                    array: None,
                    byte_offset: 0x1000,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ccr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "stopccr",
                    description: Some(
                        "RCC StopCCR configuration register.",
                    ),
                    array: None,
                    byte_offset: 0x1008,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Stopccr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "busrstcr",
                    description: Some(
                        "RCC bus reset register.",
                    ),
                    array: None,
                    byte_offset: 0x1204,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Busrstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "miscrstcr",
                    description: Some(
                        "RCC miscellaneous reset register.",
                    ),
                    array: None,
                    byte_offset: 0x1208,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Miscrstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "memrstcr",
                    description: Some(
                        "RCC memory reset register.",
                    ),
                    array: None,
                    byte_offset: 0x120c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Memrstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb1rstcr",
                    description: Some(
                        "RCC AHB1 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x1210,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb1rstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb2rstcr",
                    description: Some(
                        "RCC AHB2 Reset register.",
                    ),
                    array: None,
                    byte_offset: 0x1214,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb2rstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb3rstcr",
                    description: Some(
                        "RCC AHB3 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x1218,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb3rstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb4rstcr",
                    description: Some(
                        "RCC AHB4 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x121c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb4rstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb5rstcr",
                    description: Some(
                        "RCC AHB5 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x1220,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb5rstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1lrstcr",
                    description: Some(
                        "RCC APB1L reset register.",
                    ),
                    array: None,
                    byte_offset: 0x1224,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1lrstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1hrstcr",
                    description: Some(
                        "RCC APB1H reset register.",
                    ),
                    array: None,
                    byte_offset: 0x1228,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1hrstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb2rstcr",
                    description: Some(
                        "RCC APB2 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x122c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb2rstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4lrstcr",
                    description: Some(
                        "RCC APB4L reset register.",
                    ),
                    array: None,
                    byte_offset: 0x1234,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4lrstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4hrstcr",
                    description: Some(
                        "RCC APB4H reset register.",
                    ),
                    array: None,
                    byte_offset: 0x1238,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4hrstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb5rstcr",
                    description: Some(
                        "RCC APB5 reset register.",
                    ),
                    array: None,
                    byte_offset: 0x123c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb5rstcr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "divencr",
                    description: Some(
                        "RCC divider enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1240,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Divencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "busencr",
                    description: Some(
                        "RCC bus enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1244,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Busencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "miscencr",
                    description: Some(
                        "RCC miscellaneous enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1248,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Miscencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "memencr",
                    description: Some(
                        "RCC memory enable register.",
                    ),
                    array: None,
                    byte_offset: 0x124c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Memencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb1encr",
                    description: Some(
                        "RCC AHB1 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1250,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb1encr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb2encr",
                    description: Some(
                        "RCC AHB2 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1254,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb2encr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb3encr",
                    description: Some(
                        "RCC AHB3 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1258,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb3encr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb4encr",
                    description: Some(
                        "RCC AHB4 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x125c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb4encr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb5encr",
                    description: Some(
                        "RCC AHB5 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1260,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb5encr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1lencr",
                    description: Some(
                        "RCC APB1L enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1264,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1lencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1hencr",
                    description: Some(
                        "RCC APB1H enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1268,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1hencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb2encr",
                    description: Some(
                        "RCC APB2 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x126c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb2encr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb3encr",
                    description: Some(
                        "RCC APB3 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1270,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb3encr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4lencr",
                    description: Some(
                        "RCC APB4L enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1274,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4lencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4hencr",
                    description: Some(
                        "RCC APB4H enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1278,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4hencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb5encr",
                    description: Some(
                        "RCC APB5 enable register.",
                    ),
                    array: None,
                    byte_offset: 0x127c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb5encr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "divlpencr",
                    description: Some(
                        "RCC divider Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1280,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Divlpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "buslpencr",
                    description: Some(
                        "RCC bus Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1284,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Buslpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "misclpencr",
                    description: Some(
                        "RCC miscellaneous Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1288,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Misclpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "memlpencr",
                    description: Some(
                        "RCC memory Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x128c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Memlpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb1lpencr",
                    description: Some(
                        "RCC AHB1 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1290,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb1lpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb2lpencr",
                    description: Some(
                        "RCC AHB2 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1294,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb2lpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb3lpencr",
                    description: Some(
                        "RCC AHB3 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x1298,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb3lpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb4lpencr",
                    description: Some(
                        "RCC AHB4 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x129c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb4lpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "ahb5lpencr",
                    description: Some(
                        "RCC AHB5 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x12a0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Ahb5lpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1llpencr",
                    description: Some(
                        "RCC APB1L Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x12a4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1llpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb1hlpencr",
                    description: Some(
                        "RCC APB1H Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x12a8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb1hlpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb2lpencr",
                    description: Some(
                        "RCC APB2 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x12ac,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb2lpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb3lpencr",
                    description: Some(
                        "RCC APB3 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x12b0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb3lpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4llpencr",
                    description: Some(
                        "RCC APB4L Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x12b4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4llpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb4hlpencr",
                    description: Some(
                        "RCC APB4H Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x12b8,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb4hlpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "apb5lpencr",
                    description: Some(
                        "RCC APB5 Sleep enable register.",
                    ),
                    array: None,
                    byte_offset: 0x12bc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Apb5lpencr",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgcr0",
                    description: Some(
                        "RCC oscillator privilege configuration register0.",
                    ),
                    array: None,
                    byte_offset: 0x1784,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgcr0",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgcr0",
                    description: Some(
                        "RCC oscillator public configuration register0.",
                    ),
                    array: None,
                    byte_offset: 0x178c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgcr0",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgcr1",
                    description: Some(
                        "RCC PLL privilege configuration register1.",
                    ),
                    array: None,
                    byte_offset: 0x1794,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgcr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgcr1",
                    description: Some(
                        "RCC PLL public configuration register1.",
                    ),
                    array: None,
                    byte_offset: 0x179c,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgcr1",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgcr2",
                    description: Some(
                        "RCC divider privilege configuration register2.",
                    ),
                    array: None,
                    byte_offset: 0x17a4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgcr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgcr2",
                    description: Some(
                        "RCC divider public configuration register2.",
                    ),
                    array: None,
                    byte_offset: 0x17ac,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgcr2",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgcr3",
                    description: Some(
                        "RCC system privilege configuration register3.",
                    ),
                    array: None,
                    byte_offset: 0x17b4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgcr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgcr3",
                    description: Some(
                        "RCC system public configuration register3.",
                    ),
                    array: None,
                    byte_offset: 0x17bc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgcr3",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "privcfgcr4",
                    description: Some(
                        "RCC privilege configuration register4.",
                    ),
                    array: None,
                    byte_offset: 0x17c4,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Privcfgcr4",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgcr4",
                    description: Some(
                        "RCC public configuration register4.",
                    ),
                    array: None,
                    byte_offset: 0x17cc,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgcr4",
                            ),
                        },
                    ),
                },
                BlockItem {
                    name: "pubcfgcr5",
                    description: Some(
                        "RCC public configuration register4.",
                    ),
                    array: None,
                    byte_offset: 0x17d0,
                    inner: BlockItemInner::Register(
                        Register {
                            access: Access::ReadWrite,
                            bit_size: 32,
                            fieldset: Some(
                                "Pubcfgcr5",
                            ),
                        },
                    ),
                },
            ],
        },
    ],
    fieldsets: &[
        FieldSet {
            name: "Ahb1encr",
            extends: None,
            description: Some(
                "RCC AHB1 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpdma1enc",
                    description: Some(
                        "GPDMA1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc12enc",
                    description: Some(
                        "ADC12 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb1enr",
            extends: None,
            description: Some(
                "RCC AHB1 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpdma1en",
                    description: Some(
                        "GPDMA1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc12en",
                    description: Some(
                        "ADC12 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb1ensr",
            extends: None,
            description: Some(
                "RCC AHB1 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpdma1ens",
                    description: Some(
                        "GPDMA1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc12ens",
                    description: Some(
                        "ADC12 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb1lpencr",
            extends: None,
            description: Some(
                "RCC AHB1 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpdma1lpenc",
                    description: Some(
                        "GPDMA1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc12lpenc",
                    description: Some(
                        "ADC12 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb1lpenr",
            extends: None,
            description: Some(
                "RCC AHB1 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpdma1lpen",
                    description: Some(
                        "GPDMA1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc12lpen",
                    description: Some(
                        "ADC12 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb1lpensr",
            extends: None,
            description: Some(
                "RCC AHB1 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpdma1lpens",
                    description: Some(
                        "GPDMA1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc12lpens",
                    description: Some(
                        "ADC12 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb1rstcr",
            extends: None,
            description: Some(
                "RCC AHB1 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpdma1rstc",
                    description: Some(
                        "GPDMA1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc12rstc",
                    description: Some(
                        "ADC12 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb1rstr",
            extends: None,
            description: Some(
                "RCC AHB1 Reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpdma1rst",
                    description: Some(
                        "GPDMA1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc12rst",
                    description: Some(
                        "ADC12 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb1rstsr",
            extends: None,
            description: Some(
                "RCC AHB1 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpdma1rsts",
                    description: Some(
                        "GPDMA1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc12rsts",
                    description: Some(
                        "ADC12 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2encr",
            extends: None,
            description: Some(
                "RCC AHB2 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ramcfgenc",
                    description: Some(
                        "RAMCFG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mdf1enc",
                    description: Some(
                        "MDF1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adf1enc",
                    description: Some(
                        "ADF1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2enr",
            extends: None,
            description: Some(
                "RCC AHB2 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ramcfgen",
                    description: Some(
                        "RAMCFG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mdf1en",
                    description: Some(
                        "MDF1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adf1en",
                    description: Some(
                        "ADF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2ensr",
            extends: None,
            description: Some(
                "RCC AHB2 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ramcfgens",
                    description: Some(
                        "RAMCFG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mdf1ens",
                    description: Some(
                        "MDF1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adf1ens",
                    description: Some(
                        "ADF1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2lpencr",
            extends: None,
            description: Some(
                "RCC AHB2 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ramcfglpenc",
                    description: Some(
                        "RAMCFG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mdf1lpenc",
                    description: Some(
                        "MDF1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adf1lpenc",
                    description: Some(
                        "ADF1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2lpenr",
            extends: None,
            description: Some(
                "RCC AHB2 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ramcfglpen",
                    description: Some(
                        "RAMCFG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mdf1lpen",
                    description: Some(
                        "MDF1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adf1lpen",
                    description: Some(
                        "ADF1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2lpensr",
            extends: None,
            description: Some(
                "RCC AHB2 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ramcfglpens",
                    description: Some(
                        "RAMCFG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mdf1lpens",
                    description: Some(
                        "MDF1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adf1lpens",
                    description: Some(
                        "ADF1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2rstcr",
            extends: None,
            description: Some(
                "RCC AHB2 Reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ramcfgrstc",
                    description: Some(
                        "RAMCFG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mdf1rstc",
                    description: Some(
                        "MDF1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adf1rstc",
                    description: Some(
                        "ADF1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2rstr",
            extends: None,
            description: Some(
                "RCC AHB2 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ramcfgrst",
                    description: Some(
                        "RAMCFG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mdf1rst",
                    description: Some(
                        "MDF1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adf1rst",
                    description: Some(
                        "ADF1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb2rstsr",
            extends: None,
            description: Some(
                "RCC AHB2 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ramcfgrsts",
                    description: Some(
                        "RAMCFG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mdf1rsts",
                    description: Some(
                        "MDF1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adf1rsts",
                    description: Some(
                        "ADF1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb3encr",
            extends: None,
            description: Some(
                "RCC AHB3 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rngenc",
                    description: Some(
                        "RNG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hashenc",
                    description: Some(
                        "HASH enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crypenc",
                    description: Some(
                        "CRYP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "saesenc",
                    description: Some(
                        "SAES enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pkaenc",
                    description: Some(
                        "PKA enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rifscenc",
                    description: Some(
                        "RIFSC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iacenc",
                    description: Some(
                        "IAC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "risafenc",
                    description: Some(
                        "RISAF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb3enr",
            extends: None,
            description: Some(
                "RCC AHB3 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rngen",
                    description: Some(
                        "RNG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hashen",
                    description: Some(
                        "HASH enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crypen",
                    description: Some(
                        "CRYP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "saesen",
                    description: Some(
                        "SAES enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pkaen",
                    description: Some(
                        "PKA enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rifscen",
                    description: Some(
                        "RIFSC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iacen",
                    description: Some(
                        "IAC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "risafen",
                    description: Some(
                        "RISAF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb3ensr",
            extends: None,
            description: Some(
                "RCC AHB3 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rngens",
                    description: Some(
                        "RNG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hashens",
                    description: Some(
                        "HASH enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crypens",
                    description: Some(
                        "CRYP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "saesens",
                    description: Some(
                        "SAES enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pkaens",
                    description: Some(
                        "PKA enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rifscens",
                    description: Some(
                        "RIFSC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iacens",
                    description: Some(
                        "IAC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "risafens",
                    description: Some(
                        "RISAF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb3lpencr",
            extends: None,
            description: Some(
                "RCC AHB3 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rnglpenc",
                    description: Some(
                        "RNG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hashlpenc",
                    description: Some(
                        "HASH sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cryplpenc",
                    description: Some(
                        "CRYP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "saeslpenc",
                    description: Some(
                        "SAES sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pkalpenc",
                    description: Some(
                        "PKA sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rifsclpenc",
                    description: Some(
                        "RIFSC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iaclpenc",
                    description: Some(
                        "IAC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "risaflpenc",
                    description: Some(
                        "RISAF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb3lpenr",
            extends: None,
            description: Some(
                "RCC AHB3 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rnglpen",
                    description: Some(
                        "RNG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hashlpen",
                    description: Some(
                        "HASH sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cryplpen",
                    description: Some(
                        "CRYP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "saeslpen",
                    description: Some(
                        "SAES sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pkalpen",
                    description: Some(
                        "PKA sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rifsclpen",
                    description: Some(
                        "RIFSC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iaclpen",
                    description: Some(
                        "IAC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "risaflpen",
                    description: Some(
                        "RISAF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb3lpensr",
            extends: None,
            description: Some(
                "RCC AHB3 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rnglpens",
                    description: Some(
                        "RNG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hashlpens",
                    description: Some(
                        "HASH sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cryplpens",
                    description: Some(
                        "CRYP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "saeslpens",
                    description: Some(
                        "SAES sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pkalpens",
                    description: Some(
                        "PKA sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rifsclpens",
                    description: Some(
                        "RIFSC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iaclpens",
                    description: Some(
                        "IAC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "risaflpens",
                    description: Some(
                        "RISAF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb3rstcr",
            extends: None,
            description: Some(
                "RCC AHB3 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rngrstc",
                    description: Some(
                        "RNG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hashrstc",
                    description: Some(
                        "HASH reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cryprstc",
                    description: Some(
                        "CRYP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "saesrstc",
                    description: Some(
                        "SAES reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pkarstc",
                    description: Some(
                        "PKA reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iacrstc",
                    description: Some(
                        "IAC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb3rstr",
            extends: None,
            description: Some(
                "RCC AHB3 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rngrst",
                    description: Some(
                        "RNG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hashrst",
                    description: Some(
                        "HASH reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cryprst",
                    description: Some(
                        "CRYP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "saesrst",
                    description: Some(
                        "SAES reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pkarst",
                    description: Some(
                        "PKA reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iacrst",
                    description: Some(
                        "IAC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb3rstsr",
            extends: None,
            description: Some(
                "RCC AHB3 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rngrsts",
                    description: Some(
                        "RNG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hashrsts",
                    description: Some(
                        "HASH reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cryprsts",
                    description: Some(
                        "CRYP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "saesrsts",
                    description: Some(
                        "SAES reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pkarsts",
                    description: Some(
                        "PKA reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iacrsts",
                    description: Some(
                        "IAC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb4encr",
            extends: None,
            description: Some(
                "RCC AHB4 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioaenc",
                    description: Some(
                        "GPIOA enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiobenc",
                    description: Some(
                        "GPIOB enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiocenc",
                    description: Some(
                        "GPIOC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiodenc",
                    description: Some(
                        "GPIOD enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioeenc",
                    description: Some(
                        "GPIOE enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiofenc",
                    description: Some(
                        "GPIOF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiogenc",
                    description: Some(
                        "GPIOG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohenc",
                    description: Some(
                        "GPIOH enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpionenc",
                    description: Some(
                        "GPION enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiooenc",
                    description: Some(
                        "GPIOO enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiopenc",
                    description: Some(
                        "GPIOP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioqenc",
                    description: Some(
                        "GPIOQ enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrenc",
                    description: Some(
                        "PWR enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crcenc",
                    description: Some(
                        "CRC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb4enr",
            extends: None,
            description: Some(
                "RCC AHB4 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioaen",
                    description: Some(
                        "GPIOA enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioben",
                    description: Some(
                        "GPIOB enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiocen",
                    description: Some(
                        "GPIOC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioden",
                    description: Some(
                        "GPIOD enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioeen",
                    description: Some(
                        "GPIOE enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiofen",
                    description: Some(
                        "GPIOF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiogen",
                    description: Some(
                        "GPIOG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohen",
                    description: Some(
                        "GPIOH enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpionen",
                    description: Some(
                        "GPION enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiooen",
                    description: Some(
                        "GPIOO enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiopen",
                    description: Some(
                        "GPIOP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioqen",
                    description: Some(
                        "GPIOQ enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwren",
                    description: Some(
                        "PWR enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crcen",
                    description: Some(
                        "CRC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb4ensr",
            extends: None,
            description: Some(
                "RCC AHB4 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioaens",
                    description: Some(
                        "GPIOA enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiobens",
                    description: Some(
                        "GPIOB enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiocens",
                    description: Some(
                        "GPIOC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiodens",
                    description: Some(
                        "GPIOD enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioeens",
                    description: Some(
                        "GPIOE enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiofens",
                    description: Some(
                        "GPIOF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiogens",
                    description: Some(
                        "GPIOG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohens",
                    description: Some(
                        "GPIOH enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpionens",
                    description: Some(
                        "GPION enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiooens",
                    description: Some(
                        "GPIOO enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiopens",
                    description: Some(
                        "GPIOP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioqens",
                    description: Some(
                        "GPIOQ enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrens",
                    description: Some(
                        "PWR enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crcens",
                    description: Some(
                        "CRC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb4lpencr",
            extends: None,
            description: Some(
                "RCC AHB4 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioalpenc",
                    description: Some(
                        "GPIOA sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioblpenc",
                    description: Some(
                        "GPIOB sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioclpenc",
                    description: Some(
                        "GPIOC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiodlpenc",
                    description: Some(
                        "GPIOD sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioelpenc",
                    description: Some(
                        "GPIOE sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioflpenc",
                    description: Some(
                        "GPIOF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioglpenc",
                    description: Some(
                        "GPIOG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohlpenc",
                    description: Some(
                        "GPIOH sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpionlpenc",
                    description: Some(
                        "GPION sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioolpenc",
                    description: Some(
                        "GPIOO sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioplpenc",
                    description: Some(
                        "GPIOP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioqlpenc",
                    description: Some(
                        "GPIOQ sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrlpenc",
                    description: Some(
                        "PWR sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crclpenc",
                    description: Some(
                        "CRC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb4lpenr",
            extends: None,
            description: Some(
                "RCC AHB4 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioalpen",
                    description: Some(
                        "GPIOA sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioblpen",
                    description: Some(
                        "GPIOB sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioclpen",
                    description: Some(
                        "GPIOC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiodlpen",
                    description: Some(
                        "GPIOD sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioelpen",
                    description: Some(
                        "GPIOE sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioflpen",
                    description: Some(
                        "GPIOF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioglpen",
                    description: Some(
                        "GPIOG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohlpen",
                    description: Some(
                        "GPIOH sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpionlpen",
                    description: Some(
                        "GPION sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioolpen",
                    description: Some(
                        "GPIOO sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioplpen",
                    description: Some(
                        "GPIOP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioqlpen",
                    description: Some(
                        "GPIOQ sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrlpen",
                    description: Some(
                        "PWR sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crclpen",
                    description: Some(
                        "CRC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb4lpensr",
            extends: None,
            description: Some(
                "RCC AHB4 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioalpens",
                    description: Some(
                        "GPIOA sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioblpens",
                    description: Some(
                        "GPIOB sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioclpens",
                    description: Some(
                        "GPIOC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiodlpens",
                    description: Some(
                        "GPIOD sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioelpens",
                    description: Some(
                        "GPIOE sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioflpens",
                    description: Some(
                        "GPIOF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioglpens",
                    description: Some(
                        "GPIOG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohlpens",
                    description: Some(
                        "GPIOH sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpionlpens",
                    description: Some(
                        "GPION sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioolpens",
                    description: Some(
                        "GPIOO sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioplpens",
                    description: Some(
                        "GPIOP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioqlpens",
                    description: Some(
                        "GPIOQ sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrlpens",
                    description: Some(
                        "PWR sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crclpens",
                    description: Some(
                        "CRC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb4rstcr",
            extends: None,
            description: Some(
                "RCC AHB4 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioarstc",
                    description: Some(
                        "GPIOA reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiobrstc",
                    description: Some(
                        "GPIOB reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiocrstc",
                    description: Some(
                        "GPIOC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiodrstc",
                    description: Some(
                        "GPIOD reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioerstc",
                    description: Some(
                        "GPIOE reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiofrstc",
                    description: Some(
                        "GPIOF reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiogrstc",
                    description: Some(
                        "GPIOG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohrstc",
                    description: Some(
                        "GPIOH reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpionrstc",
                    description: Some(
                        "GPION reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioorstc",
                    description: Some(
                        "GPIOO reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioprstc",
                    description: Some(
                        "GPIOP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioqrstc",
                    description: Some(
                        "GPIOQ reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrrstc",
                    description: Some(
                        "PWR reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crcrstc",
                    description: Some(
                        "CRC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb4rstr",
            extends: None,
            description: Some(
                "RCC AHB4 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioarst",
                    description: Some(
                        "GPIOA reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiobrst",
                    description: Some(
                        "GPIOB reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiocrst",
                    description: Some(
                        "GPIOC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiodrst",
                    description: Some(
                        "GPIOD reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioerst",
                    description: Some(
                        "GPIOE reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiofrst",
                    description: Some(
                        "GPIOF reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiogrst",
                    description: Some(
                        "GPIOG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohrst",
                    description: Some(
                        "GPIOH reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpionrst",
                    description: Some(
                        "GPION reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioorst",
                    description: Some(
                        "GPIOO reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioprst",
                    description: Some(
                        "GPIOP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioqrst",
                    description: Some(
                        "GPIOQ reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrrst",
                    description: Some(
                        "PWR reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crcrst",
                    description: Some(
                        "CRC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb4rstsr",
            extends: None,
            description: Some(
                "RCC AHB4 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "gpioarsts",
                    description: Some(
                        "GPIOA reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiobrsts",
                    description: Some(
                        "GPIOB reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiocrsts",
                    description: Some(
                        "GPIOC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiodrsts",
                    description: Some(
                        "GPIOD reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioersts",
                    description: Some(
                        "GPIOE reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiofrsts",
                    description: Some(
                        "GPIOF reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiogrsts",
                    description: Some(
                        "GPIOG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpiohrsts",
                    description: Some(
                        "GPIOH reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpionrsts",
                    description: Some(
                        "GPION reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioorsts",
                    description: Some(
                        "GPIOO reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioprsts",
                    description: Some(
                        "GPIOP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpioqrsts",
                    description: Some(
                        "GPIOQ reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrrsts",
                    description: Some(
                        "PWR reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crcrsts",
                    description: Some(
                        "CRC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb5encr",
            extends: None,
            description: Some(
                "RCC AHB5 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hpdma1enc",
                    description: Some(
                        "HPDMA1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2denc",
                    description: Some(
                        "DMA2D enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "jpegenc",
                    description: Some(
                        "JPEG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fmcenc",
                    description: Some(
                        "FMC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi1enc",
                    description: Some(
                        "XSPI1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pssienc",
                    description: Some(
                        "PSSI enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2enc",
                    description: Some(
                        "SDMMC2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1enc",
                    description: Some(
                        "SDMMC1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi2enc",
                    description: Some(
                        "XSPI2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspimenc",
                    description: Some(
                        "XSPIM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce1enc",
                    description: Some(
                        "MCE1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce2enc",
                    description: Some(
                        "MCE2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce3enc",
                    description: Some(
                        "MCE3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi3enc",
                    description: Some(
                        "XSPI3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce4enc",
                    description: Some(
                        "MCE4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxmmuenc",
                    description: Some(
                        "GFXMMU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpuenc",
                    description: Some(
                        "GPU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1macenc",
                    description: Some(
                        "ETH1MAC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1txenc",
                    description: Some(
                        "ETH1TX enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1rxenc",
                    description: Some(
                        "ETH1RX enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1enc",
                    description: Some(
                        "ETH1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg1enc",
                    description: Some(
                        "OTG1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 26,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy1enc",
                    description: Some(
                        "OTGPHY1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy2enc",
                    description: Some(
                        "OTGPHY2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg2enc",
                    description: Some(
                        "OTG2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 29,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheenc",
                    description: Some(
                        "NPUCACHE enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npuenc",
                    description: Some(
                        "NPU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb5enr",
            extends: None,
            description: Some(
                "RCC AHB5 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hpdma1en",
                    description: Some(
                        "HPDMA1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2den",
                    description: Some(
                        "DMA2D enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "jpegen",
                    description: Some(
                        "JPEG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fmcen",
                    description: Some(
                        "FMC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi1en",
                    description: Some(
                        "XSPI1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pssien",
                    description: Some(
                        "PSSI enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2en",
                    description: Some(
                        "SDMMC2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1en",
                    description: Some(
                        "SDMMC1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi2en",
                    description: Some(
                        "XSPI2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspimen",
                    description: Some(
                        "XSPIM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce1en",
                    description: Some(
                        "MCE1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce2en",
                    description: Some(
                        "MCE2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce3en",
                    description: Some(
                        "MCE3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi3en",
                    description: Some(
                        "XSPI3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce4en",
                    description: Some(
                        "MCE4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxmmuen",
                    description: Some(
                        "GFXMMU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpuen",
                    description: Some(
                        "GPU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1macen",
                    description: Some(
                        "ETH1MAC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1txen",
                    description: Some(
                        "ETH1TX enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1rxen",
                    description: Some(
                        "ETH1RX enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1en",
                    description: Some(
                        "ETH1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg1en",
                    description: Some(
                        "OTG1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 26,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy1en",
                    description: Some(
                        "OTGPHY1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy2en",
                    description: Some(
                        "OTGPHY2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg2en",
                    description: Some(
                        "OTG2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 29,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheen",
                    description: Some(
                        "NPUCACHE enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npuen",
                    description: Some(
                        "NPU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb5ensr",
            extends: None,
            description: Some(
                "RCC AHB5 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hpdma1ens",
                    description: Some(
                        "HPDMA1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2dens",
                    description: Some(
                        "DMA2D enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "jpegens",
                    description: Some(
                        "JPEG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fmcens",
                    description: Some(
                        "FMC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi1ens",
                    description: Some(
                        "XSPI1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pssiens",
                    description: Some(
                        "PSSI enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2ens",
                    description: Some(
                        "SDMMC2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1ens",
                    description: Some(
                        "SDMMC1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi2ens",
                    description: Some(
                        "XSPI2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspimens",
                    description: Some(
                        "XSPIM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce1ens",
                    description: Some(
                        "MCE1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce2ens",
                    description: Some(
                        "MCE2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce3ens",
                    description: Some(
                        "MCE3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi3ens",
                    description: Some(
                        "XSPI3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce4ens",
                    description: Some(
                        "MCE4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxmmuens",
                    description: Some(
                        "GFXMMU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpuens",
                    description: Some(
                        "GPU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1macens",
                    description: Some(
                        "ETH1MAC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1txens",
                    description: Some(
                        "ETH1TX enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1rxens",
                    description: Some(
                        "ETH1RX enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1ens",
                    description: Some(
                        "ETH1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg1ens",
                    description: Some(
                        "OTG1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 26,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy1ens",
                    description: Some(
                        "OTGPHY1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy2ens",
                    description: Some(
                        "OTGPHY2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg2ens",
                    description: Some(
                        "OTG2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 29,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheens",
                    description: Some(
                        "NPUCACHE enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npuens",
                    description: Some(
                        "NPU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb5lpencr",
            extends: None,
            description: Some(
                "RCC AHB5 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hpdma1lpenc",
                    description: Some(
                        "HPDMA1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2dlpenc",
                    description: Some(
                        "DMA2D sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "jpeglpenc",
                    description: Some(
                        "JPEG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fmclpenc",
                    description: Some(
                        "FMC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi1lpenc",
                    description: Some(
                        "XSPI1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pssilpenc",
                    description: Some(
                        "PSSI sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2lpenc",
                    description: Some(
                        "SDMMC2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1lpenc",
                    description: Some(
                        "SDMMC1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi2lpenc",
                    description: Some(
                        "XSPI2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspimlpenc",
                    description: Some(
                        "XSPIM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce1lpenc",
                    description: Some(
                        "MCE1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce2lpenc",
                    description: Some(
                        "MCE2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce3lpenc",
                    description: Some(
                        "MCE3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi3lpenc",
                    description: Some(
                        "XSPI3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce4lpenc",
                    description: Some(
                        "MCE4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxmmulpenc",
                    description: Some(
                        "GFXMMU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpulpenc",
                    description: Some(
                        "GPU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1maclpenc",
                    description: Some(
                        "ETH1MAC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1txlpenc",
                    description: Some(
                        "ETH1TX sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1rxlpenc",
                    description: Some(
                        "ETH1RX sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1lpenc",
                    description: Some(
                        "ETH1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg1lpenc",
                    description: Some(
                        "OTG1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 26,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy1lpenc",
                    description: Some(
                        "OTGPHY1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy2lpenc",
                    description: Some(
                        "OTGPHY2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg2lpenc",
                    description: Some(
                        "OTG2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 29,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucachelpenc",
                    description: Some(
                        "NPUCACHE sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npulpenc",
                    description: Some(
                        "NPU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb5lpenr",
            extends: None,
            description: Some(
                "RCC AHB5 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hpdma1lpen",
                    description: Some(
                        "HPDMA1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2dlpen",
                    description: Some(
                        "DMA2D sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "jpeglpen",
                    description: Some(
                        "JPEG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fmclpen",
                    description: Some(
                        "FMC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi1lpen",
                    description: Some(
                        "XSPI1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pssilpen",
                    description: Some(
                        "PSSI sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2lpen",
                    description: Some(
                        "SDMMC2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1lpen",
                    description: Some(
                        "SDMMC1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi2lpen",
                    description: Some(
                        "XSPI2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspimlpen",
                    description: Some(
                        "XSPIM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce1lpen",
                    description: Some(
                        "MCE1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce2lpen",
                    description: Some(
                        "MCE2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce3lpen",
                    description: Some(
                        "MCE3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi3lpen",
                    description: Some(
                        "XSPI3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce4lpen",
                    description: Some(
                        "MCE4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxmmulpen",
                    description: Some(
                        "GFXMMU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpulpen",
                    description: Some(
                        "GPU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1maclpen",
                    description: Some(
                        "ETH1MAC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1txlpen",
                    description: Some(
                        "ETH1TX sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1rxlpen",
                    description: Some(
                        "ETH1RX sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1lpen",
                    description: Some(
                        "ETH1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg1lpen",
                    description: Some(
                        "OTG1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 26,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy1lpen",
                    description: Some(
                        "OTGPHY1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy2lpen",
                    description: Some(
                        "OTGPHY2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg2lpen",
                    description: Some(
                        "OTG2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 29,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucachelpen",
                    description: Some(
                        "NPUCACHE sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npulpen",
                    description: Some(
                        "NPU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb5lpensr",
            extends: None,
            description: Some(
                "RCC AHB5 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hpdma1lpens",
                    description: Some(
                        "HPDMA1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2dlpens",
                    description: Some(
                        "DMA2D sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "jpeglpens",
                    description: Some(
                        "JPEG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fmclpens",
                    description: Some(
                        "FMC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi1lpens",
                    description: Some(
                        "XSPI1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pssilpens",
                    description: Some(
                        "PSSI sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2lpens",
                    description: Some(
                        "SDMMC2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1lpens",
                    description: Some(
                        "SDMMC1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi2lpens",
                    description: Some(
                        "XSPI2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspimlpens",
                    description: Some(
                        "XSPIM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce1lpens",
                    description: Some(
                        "MCE1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce2lpens",
                    description: Some(
                        "MCE2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce3lpens",
                    description: Some(
                        "MCE3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi3lpens",
                    description: Some(
                        "XSPI3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce4lpens",
                    description: Some(
                        "MCE4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxmmulpens",
                    description: Some(
                        "GFXMMU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpulpens",
                    description: Some(
                        "GPU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1maclpens",
                    description: Some(
                        "ETH1MAC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1txlpens",
                    description: Some(
                        "ETH1TX sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1rxlpens",
                    description: Some(
                        "ETH1RX sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1lpens",
                    description: Some(
                        "ETH1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg1lpens",
                    description: Some(
                        "OTG1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 26,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy1lpens",
                    description: Some(
                        "OTGPHY1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy2lpens",
                    description: Some(
                        "OTGPHY2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg2lpens",
                    description: Some(
                        "OTG2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 29,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucachelpens",
                    description: Some(
                        "NPUCACHE sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npulpens",
                    description: Some(
                        "NPU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb5rstcr",
            extends: None,
            description: Some(
                "RCC AHB5 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hpdma1rstc",
                    description: Some(
                        "HPDMA1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2drstc",
                    description: Some(
                        "DMA2D reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "jpegrstc",
                    description: Some(
                        "JPEG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fmcrstc",
                    description: Some(
                        "FMC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi1rstc",
                    description: Some(
                        "XSPI1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pssirstc",
                    description: Some(
                        "PSSI reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2rstc",
                    description: Some(
                        "SDMMC2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1rstc",
                    description: Some(
                        "SDMMC1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi2rstc",
                    description: Some(
                        "XSPI2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspimrstc",
                    description: Some(
                        "XSPIM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi3rstc",
                    description: Some(
                        "XSPI3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce4rstc",
                    description: Some(
                        "MCE4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxmmurstc",
                    description: Some(
                        "GFXMMU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpurstc",
                    description: Some(
                        "GPU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syscfgotghsphy1rstc",
                    description: Some(
                        "SYSCFGOTGHSPHY1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syscfgotghsphy2rstc",
                    description: Some(
                        "SYSCFGOTGHSPHY2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1rstc",
                    description: Some(
                        "ETH1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg1rstc",
                    description: Some(
                        "OTG1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 26,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy1rstc",
                    description: Some(
                        "OTGPHY1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy2rstc",
                    description: Some(
                        "OTGPHY2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg2rstc",
                    description: Some(
                        "OTG2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 29,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacherstc",
                    description: Some(
                        "NPUCACHE reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npurstc",
                    description: Some(
                        "NPU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb5rstr",
            extends: None,
            description: Some(
                "RCC AHB5 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hpdma1rst",
                    description: Some(
                        "HPDMA1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2drst",
                    description: Some(
                        "DMA2D reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "jpegrst",
                    description: Some(
                        "JPEG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fmcrst",
                    description: Some(
                        "FMC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi1rst",
                    description: Some(
                        "XSPI1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pssirst",
                    description: Some(
                        "PSSI reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2rst",
                    description: Some(
                        "SDMMC2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1rst",
                    description: Some(
                        "SDMMC1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi2rst",
                    description: Some(
                        "XSPI2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspimrst",
                    description: Some(
                        "XSPIM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi3rst",
                    description: Some(
                        "XSPI3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce4rst",
                    description: Some(
                        "MCE4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxmmurst",
                    description: Some(
                        "GFXMMU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpurst",
                    description: Some(
                        "GPU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syscfgotghsphy1rst",
                    description: Some(
                        "SYSCFGOTGHSPHY1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syscfgotghsphy2rst",
                    description: Some(
                        "SYSCFGOTGHSPHY2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1rst",
                    description: Some(
                        "ETH1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg1rst",
                    description: Some(
                        "OTG1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 26,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy1rst",
                    description: Some(
                        "OTGPHY1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy2rst",
                    description: Some(
                        "OTGPHY2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg2rst",
                    description: Some(
                        "OTG2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 29,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacherst",
                    description: Some(
                        "NPUCACHE reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npurst",
                    description: Some(
                        "NPU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahb5rstsr",
            extends: None,
            description: Some(
                "RCC AHB5 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hpdma1rsts",
                    description: Some(
                        "HPDMA1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2drsts",
                    description: Some(
                        "DMA2D reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "jpegrsts",
                    description: Some(
                        "JPEG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fmcrsts",
                    description: Some(
                        "FMC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi1rsts",
                    description: Some(
                        "XSPI1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pssirsts",
                    description: Some(
                        "PSSI reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2rsts",
                    description: Some(
                        "SDMMC2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1rsts",
                    description: Some(
                        "SDMMC1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi2rsts",
                    description: Some(
                        "XSPI2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspimrsts",
                    description: Some(
                        "XSPIM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspi3rsts",
                    description: Some(
                        "XSPI3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mce4rsts",
                    description: Some(
                        "MCE4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxmmursts",
                    description: Some(
                        "GFXMMU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gpursts",
                    description: Some(
                        "GPU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syscfgotghsphy1rsts",
                    description: Some(
                        "SYSCFGOTGHSPHY1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syscfgotghsphy2rsts",
                    description: Some(
                        "SYSCFGOTGHSPHY2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1rsts",
                    description: Some(
                        "ETH1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg1rsts",
                    description: Some(
                        "OTG1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 26,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy1rsts",
                    description: Some(
                        "OTGPHY1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy2rsts",
                    description: Some(
                        "OTGPHY2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg2rsts",
                    description: Some(
                        "OTG2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 29,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucachersts",
                    description: Some(
                        "NPUCACHE reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npursts",
                    description: Some(
                        "NPU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1hencr",
            extends: None,
            description: Some(
                "RCC APB1H enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "mdiosenc",
                    description: Some(
                        "MDIOS enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fdcanenc",
                    description: Some(
                        "FDCAN enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ucpd1enc",
                    description: Some(
                        "UCPD1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1henr",
            extends: None,
            description: Some(
                "RCC APB1H enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "mdiosen",
                    description: Some(
                        "MDIOS enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fdcanen",
                    description: Some(
                        "FDCAN enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ucpd1en",
                    description: Some(
                        "UCPD1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1hensr",
            extends: None,
            description: Some(
                "RCC APB1H enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "mdiosens",
                    description: Some(
                        "MDIOS enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fdcanens",
                    description: Some(
                        "FDCAN enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ucpd1ens",
                    description: Some(
                        "UCPD1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1hlpencr",
            extends: None,
            description: Some(
                "RCC APB1H Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "mdioslpenc",
                    description: Some(
                        "MDIOS sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fdcanlpenc",
                    description: Some(
                        "FDCAN sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ucpd1lpenc",
                    description: Some(
                        "UCPD1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1hlpenr",
            extends: None,
            description: Some(
                "RCC APB1H Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "mdioslpen",
                    description: Some(
                        "MDIOS sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fdcanlpen",
                    description: Some(
                        "FDCAN sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ucpd1lpen",
                    description: Some(
                        "UCPD1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1hlpensr",
            extends: None,
            description: Some(
                "RCC APB1H Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "mdioslpens",
                    description: Some(
                        "MDIOS sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fdcanlpens",
                    description: Some(
                        "FDCAN sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ucpd1lpens",
                    description: Some(
                        "UCPD1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1hrstcr",
            extends: None,
            description: Some(
                "RCC APB1H reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "mdiosrstc",
                    description: Some(
                        "MDIOS reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fdcanrstc",
                    description: Some(
                        "FDCAN reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ucpd1rstc",
                    description: Some(
                        "UCPD1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1hrstr",
            extends: None,
            description: Some(
                "RCC APB1H reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "mdiosrst",
                    description: Some(
                        "MDIOS reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fdcanrst",
                    description: Some(
                        "FDCAN reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ucpd1rst",
                    description: Some(
                        "UCPD1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1hrstsr",
            extends: None,
            description: Some(
                "RCC APB1H reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "mdiosrsts",
                    description: Some(
                        "MDIOS reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fdcanrsts",
                    description: Some(
                        "FDCAN reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ucpd1rsts",
                    description: Some(
                        "UCPD1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1lencr",
            extends: None,
            description: Some(
                "RCC APB1L enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2enc",
                    description: Some(
                        "TIM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3enc",
                    description: Some(
                        "TIM3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4enc",
                    description: Some(
                        "TIM4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5enc",
                    description: Some(
                        "TIM5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6enc",
                    description: Some(
                        "TIM6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7enc",
                    description: Some(
                        "TIM7 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12enc",
                    description: Some(
                        "TIM12 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13enc",
                    description: Some(
                        "TIM13 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14enc",
                    description: Some(
                        "TIM14 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim1enc",
                    description: Some(
                        "LPTIM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10enc",
                    description: Some(
                        "TIM10 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11enc",
                    description: Some(
                        "TIM11 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2enc",
                    description: Some(
                        "SPI2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3enc",
                    description: Some(
                        "SPI3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spdifrx1enc",
                    description: Some(
                        "SPDIFRX1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2enc",
                    description: Some(
                        "USART2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3enc",
                    description: Some(
                        "USART3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4enc",
                    description: Some(
                        "UART4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5enc",
                    description: Some(
                        "UART5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1enc",
                    description: Some(
                        "I2C1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2enc",
                    description: Some(
                        "I2C2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3enc",
                    description: Some(
                        "I2C3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c1enc",
                    description: Some(
                        "I3C1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c2enc",
                    description: Some(
                        "I3C2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart7enc",
                    description: Some(
                        "UART7 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart8enc",
                    description: Some(
                        "UART8 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1lenr",
            extends: None,
            description: Some(
                "RCC APB1L enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2en",
                    description: Some(
                        "TIM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3en",
                    description: Some(
                        "TIM3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4en",
                    description: Some(
                        "TIM4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5en",
                    description: Some(
                        "TIM5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6en",
                    description: Some(
                        "TIM6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7en",
                    description: Some(
                        "TIM7 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12en",
                    description: Some(
                        "TIM12 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13en",
                    description: Some(
                        "TIM13 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14en",
                    description: Some(
                        "TIM14 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim1en",
                    description: Some(
                        "LPTIM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgen",
                    description: Some(
                        "WWDG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10en",
                    description: Some(
                        "TIM10 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11en",
                    description: Some(
                        "TIM11 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2en",
                    description: Some(
                        "SPI2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3en",
                    description: Some(
                        "SPI3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spdifrx1en",
                    description: Some(
                        "SPDIFRX1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2en",
                    description: Some(
                        "USART2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3en",
                    description: Some(
                        "USART3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4en",
                    description: Some(
                        "UART4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5en",
                    description: Some(
                        "UART5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1en",
                    description: Some(
                        "I2C1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2en",
                    description: Some(
                        "I2C2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3en",
                    description: Some(
                        "I2C3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c1en",
                    description: Some(
                        "I3C1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c2en",
                    description: Some(
                        "I3C2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart7en",
                    description: Some(
                        "UART7 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart8en",
                    description: Some(
                        "UART8 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1lensr",
            extends: None,
            description: Some(
                "RCC APB1L enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2ens",
                    description: Some(
                        "TIM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3ens",
                    description: Some(
                        "TIM3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4ens",
                    description: Some(
                        "TIM4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5ens",
                    description: Some(
                        "TIM5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6ens",
                    description: Some(
                        "TIM6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7ens",
                    description: Some(
                        "TIM7 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12ens",
                    description: Some(
                        "TIM12 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13ens",
                    description: Some(
                        "TIM13 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14ens",
                    description: Some(
                        "TIM14 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim1ens",
                    description: Some(
                        "LPTIM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgens",
                    description: Some(
                        "WWDG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10ens",
                    description: Some(
                        "TIM10 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11ens",
                    description: Some(
                        "TIM11 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2ens",
                    description: Some(
                        "SPI2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3ens",
                    description: Some(
                        "SPI3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spdifrx1ens",
                    description: Some(
                        "SPDIFRX1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2ens",
                    description: Some(
                        "USART2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3ens",
                    description: Some(
                        "USART3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4ens",
                    description: Some(
                        "UART4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5ens",
                    description: Some(
                        "UART5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1ens",
                    description: Some(
                        "I2C1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2ens",
                    description: Some(
                        "I2C2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3ens",
                    description: Some(
                        "I2C3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c1ens",
                    description: Some(
                        "I3C1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c2ens",
                    description: Some(
                        "I3C2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart7ens",
                    description: Some(
                        "UART7 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart8ens",
                    description: Some(
                        "UART8 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1llpencr",
            extends: None,
            description: Some(
                "RCC APB1L Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2lpenc",
                    description: Some(
                        "TIM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3lpenc",
                    description: Some(
                        "TIM3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4lpenc",
                    description: Some(
                        "TIM4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5lpenc",
                    description: Some(
                        "TIM5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6lpenc",
                    description: Some(
                        "TIM6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7lpenc",
                    description: Some(
                        "TIM7 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12lpenc",
                    description: Some(
                        "TIM12 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13lpenc",
                    description: Some(
                        "TIM13 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14lpenc",
                    description: Some(
                        "TIM14 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim1lpenc",
                    description: Some(
                        "LPTIM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdglpenc",
                    description: Some(
                        "WWDG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10lpenc",
                    description: Some(
                        "TIM10 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11lpenc",
                    description: Some(
                        "TIM11 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2lpenc",
                    description: Some(
                        "SPI2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3lpenc",
                    description: Some(
                        "SPI3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spdifrx1lpenc",
                    description: Some(
                        "SPDIFRX1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2lpenc",
                    description: Some(
                        "USART2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3lpenc",
                    description: Some(
                        "USART3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4lpenc",
                    description: Some(
                        "UART4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5lpenc",
                    description: Some(
                        "UART5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1lpenc",
                    description: Some(
                        "I2C1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2lpenc",
                    description: Some(
                        "I2C2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3lpenc",
                    description: Some(
                        "I2C3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c1lpenc",
                    description: Some(
                        "I3C1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c2lpenc",
                    description: Some(
                        "I3C2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart7lpenc",
                    description: Some(
                        "UART7 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart8lpenc",
                    description: Some(
                        "UART8 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1llpenr",
            extends: None,
            description: Some(
                "RCC APB1L Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2lpen",
                    description: Some(
                        "TIM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3lpen",
                    description: Some(
                        "TIM3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4lpen",
                    description: Some(
                        "TIM4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5lpen",
                    description: Some(
                        "TIM5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6lpen",
                    description: Some(
                        "TIM6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7lpen",
                    description: Some(
                        "TIM7 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12lpen",
                    description: Some(
                        "TIM12 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13lpen",
                    description: Some(
                        "TIM13 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14lpen",
                    description: Some(
                        "TIM14 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim1lpen",
                    description: Some(
                        "LPTIM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdglpen",
                    description: Some(
                        "WWDG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10lpen",
                    description: Some(
                        "TIM10 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11lpen",
                    description: Some(
                        "TIM11 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2lpen",
                    description: Some(
                        "SPI2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3lpen",
                    description: Some(
                        "SPI3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spdifrx1lpen",
                    description: Some(
                        "SPDIFRX1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2lpen",
                    description: Some(
                        "USART2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3lpen",
                    description: Some(
                        "USART3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4lpen",
                    description: Some(
                        "UART4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5lpen",
                    description: Some(
                        "UART5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1lpen",
                    description: Some(
                        "I2C1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2lpen",
                    description: Some(
                        "I2C2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3lpen",
                    description: Some(
                        "I2C3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c1lpen",
                    description: Some(
                        "I3C1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c2lpen",
                    description: Some(
                        "I3C2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart7lpen",
                    description: Some(
                        "UART7 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart8lpen",
                    description: Some(
                        "UART8 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1llpensr",
            extends: None,
            description: Some(
                "RCC APB1L Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2lpens",
                    description: Some(
                        "TIM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3lpens",
                    description: Some(
                        "TIM3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4lpens",
                    description: Some(
                        "TIM4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5lpens",
                    description: Some(
                        "TIM5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6lpens",
                    description: Some(
                        "TIM6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7lpens",
                    description: Some(
                        "TIM7 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12lpens",
                    description: Some(
                        "TIM12 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13lpens",
                    description: Some(
                        "TIM13 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14lpens",
                    description: Some(
                        "TIM14 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim1lpens",
                    description: Some(
                        "LPTIM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdglpens",
                    description: Some(
                        "WWDG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10lpens",
                    description: Some(
                        "TIM10 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11lpens",
                    description: Some(
                        "TIM11 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2lpens",
                    description: Some(
                        "SPI2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3lpens",
                    description: Some(
                        "SPI3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spdifrx1lpens",
                    description: Some(
                        "SPDIFRX1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2lpens",
                    description: Some(
                        "USART2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3lpens",
                    description: Some(
                        "USART3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4lpens",
                    description: Some(
                        "UART4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5lpens",
                    description: Some(
                        "UART5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1lpens",
                    description: Some(
                        "I2C1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2lpens",
                    description: Some(
                        "I2C2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3lpens",
                    description: Some(
                        "I2C3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c1lpens",
                    description: Some(
                        "I3C1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c2lpens",
                    description: Some(
                        "I3C2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart7lpens",
                    description: Some(
                        "UART7 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart8lpens",
                    description: Some(
                        "UART8 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1lrstcr",
            extends: None,
            description: Some(
                "RCC APB1L reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2rstc",
                    description: Some(
                        "TIM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3rstc",
                    description: Some(
                        "TIM3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4rstc",
                    description: Some(
                        "TIM4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5rstc",
                    description: Some(
                        "TIM5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6rstc",
                    description: Some(
                        "TIM6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7rstc",
                    description: Some(
                        "TIM7 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12rstc",
                    description: Some(
                        "TIM12 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13rstc",
                    description: Some(
                        "TIM13 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14rstc",
                    description: Some(
                        "TIM14 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim1rstc",
                    description: Some(
                        "LPTIM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgrstc",
                    description: Some(
                        "WWDG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10rstc",
                    description: Some(
                        "TIM10 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11rstc",
                    description: Some(
                        "TIM11 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2rstc",
                    description: Some(
                        "SPI2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3rstc",
                    description: Some(
                        "SPI3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spdifrx1rstc",
                    description: Some(
                        "SPDIFRX1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2rstc",
                    description: Some(
                        "USART2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3rstc",
                    description: Some(
                        "USART3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4rstc",
                    description: Some(
                        "UART4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5rstc",
                    description: Some(
                        "UART5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1rstc",
                    description: Some(
                        "I2C1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2rstc",
                    description: Some(
                        "I2C2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3rstc",
                    description: Some(
                        "I2C3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c1rstc",
                    description: Some(
                        "I3C1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c2rstc",
                    description: Some(
                        "I3C2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart7rstc",
                    description: Some(
                        "UART7 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart8rstc",
                    description: Some(
                        "UART8 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1lrstr",
            extends: None,
            description: Some(
                "RCC APB1L reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2rst",
                    description: Some(
                        "TIM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3rst",
                    description: Some(
                        "TIM3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4rst",
                    description: Some(
                        "TIM4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5rst",
                    description: Some(
                        "TIM5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6rst",
                    description: Some(
                        "TIM6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7rst",
                    description: Some(
                        "TIM7 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12rst",
                    description: Some(
                        "TIM12 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13rst",
                    description: Some(
                        "TIM13 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14rst",
                    description: Some(
                        "TIM14 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim1rst",
                    description: Some(
                        "LPTIM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgrst",
                    description: Some(
                        "WWDG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10rst",
                    description: Some(
                        "TIM10 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11rst",
                    description: Some(
                        "TIM11 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2rst",
                    description: Some(
                        "SPI2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3rst",
                    description: Some(
                        "SPI3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spdifrx1rst",
                    description: Some(
                        "SPDIFRX1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2rst",
                    description: Some(
                        "USART2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3rst",
                    description: Some(
                        "USART3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4rst",
                    description: Some(
                        "UART4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5rst",
                    description: Some(
                        "UART5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1rst",
                    description: Some(
                        "I2C1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2rst",
                    description: Some(
                        "I2C2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3rst",
                    description: Some(
                        "I2C3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c1rst",
                    description: Some(
                        "I3C1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c2rst",
                    description: Some(
                        "I3C2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart7rst",
                    description: Some(
                        "UART7 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart8rst",
                    description: Some(
                        "UART8 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1lrstsr",
            extends: None,
            description: Some(
                "RCC APB1L reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2rsts",
                    description: Some(
                        "TIM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3rsts",
                    description: Some(
                        "TIM3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4rsts",
                    description: Some(
                        "TIM4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5rsts",
                    description: Some(
                        "TIM5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6rsts",
                    description: Some(
                        "TIM6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7rsts",
                    description: Some(
                        "TIM7 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim12rsts",
                    description: Some(
                        "TIM12 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim13rsts",
                    description: Some(
                        "TIM13 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim14rsts",
                    description: Some(
                        "TIM14 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim1rsts",
                    description: Some(
                        "LPTIM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgrsts",
                    description: Some(
                        "WWDG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10rsts",
                    description: Some(
                        "TIM10 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim11rsts",
                    description: Some(
                        "TIM11 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2rsts",
                    description: Some(
                        "SPI2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3rsts",
                    description: Some(
                        "SPI3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spdifrx1rsts",
                    description: Some(
                        "SPDIFRX1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2rsts",
                    description: Some(
                        "USART2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3rsts",
                    description: Some(
                        "USART3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart4rsts",
                    description: Some(
                        "UART4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart5rsts",
                    description: Some(
                        "UART5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1rsts",
                    description: Some(
                        "I2C1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2rsts",
                    description: Some(
                        "I2C2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c3rsts",
                    description: Some(
                        "I2C3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c1rsts",
                    description: Some(
                        "I3C1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i3c2rsts",
                    description: Some(
                        "I3C2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 25,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart7rsts",
                    description: Some(
                        "UART7 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart8rsts",
                    description: Some(
                        "UART8 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2encr",
            extends: None,
            description: Some(
                "RCC APB2 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1enc",
                    description: Some(
                        "TIM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8enc",
                    description: Some(
                        "TIM8 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1enc",
                    description: Some(
                        "USART1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6enc",
                    description: Some(
                        "USART6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart9enc",
                    description: Some(
                        "UART9 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart10enc",
                    description: Some(
                        "USART10 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1enc",
                    description: Some(
                        "SPI1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi4enc",
                    description: Some(
                        "SPI4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim18enc",
                    description: Some(
                        "TIM18 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim15enc",
                    description: Some(
                        "TIM15 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim16enc",
                    description: Some(
                        "TIM16 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim17enc",
                    description: Some(
                        "TIM17 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9enc",
                    description: Some(
                        "TIM9 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi5enc",
                    description: Some(
                        "SPI5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai1enc",
                    description: Some(
                        "SAI1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai2enc",
                    description: Some(
                        "SAI2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2enr",
            extends: None,
            description: Some(
                "RCC APB2 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1en",
                    description: Some(
                        "TIM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8en",
                    description: Some(
                        "TIM8 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1en",
                    description: Some(
                        "USART1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6en",
                    description: Some(
                        "USART6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart9en",
                    description: Some(
                        "UART9 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart10en",
                    description: Some(
                        "USART10 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1en",
                    description: Some(
                        "SPI1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi4en",
                    description: Some(
                        "SPI4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim18en",
                    description: Some(
                        "TIM18 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim15en",
                    description: Some(
                        "TIM15 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim16en",
                    description: Some(
                        "TIM16 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim17en",
                    description: Some(
                        "TIM17 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9en",
                    description: Some(
                        "TIM9 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi5en",
                    description: Some(
                        "SPI5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai1en",
                    description: Some(
                        "SAI1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai2en",
                    description: Some(
                        "SAI2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2ensr",
            extends: None,
            description: Some(
                "RCC APB2 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1ens",
                    description: Some(
                        "TIM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8ens",
                    description: Some(
                        "TIM8 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1ens",
                    description: Some(
                        "USART1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6ens",
                    description: Some(
                        "USART6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart9ens",
                    description: Some(
                        "UART9 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart10ens",
                    description: Some(
                        "USART10 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1ens",
                    description: Some(
                        "SPI1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi4ens",
                    description: Some(
                        "SPI4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim18ens",
                    description: Some(
                        "TIM18 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim15ens",
                    description: Some(
                        "TIM15 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim16ens",
                    description: Some(
                        "TIM16 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim17ens",
                    description: Some(
                        "TIM17 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9ens",
                    description: Some(
                        "TIM9 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi5ens",
                    description: Some(
                        "SPI5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai1ens",
                    description: Some(
                        "SAI1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai2ens",
                    description: Some(
                        "SAI2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2lpencr",
            extends: None,
            description: Some(
                "RCC APB2 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1lpenc",
                    description: Some(
                        "TIM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8lpenc",
                    description: Some(
                        "TIM8 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1lpenc",
                    description: Some(
                        "USART1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6lpenc",
                    description: Some(
                        "USART6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart9lpenc",
                    description: Some(
                        "UART9 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart10lpenc",
                    description: Some(
                        "USART10 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1lpenc",
                    description: Some(
                        "SPI1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi4lpenc",
                    description: Some(
                        "SPI4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim18lpenc",
                    description: Some(
                        "TIM18 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim15lpenc",
                    description: Some(
                        "TIM15 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim16lpenc",
                    description: Some(
                        "TIM16 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim17lpenc",
                    description: Some(
                        "TIM17 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9lpenc",
                    description: Some(
                        "TIM9 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi5lpenc",
                    description: Some(
                        "SPI5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai1lpenc",
                    description: Some(
                        "SAI1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai2lpenc",
                    description: Some(
                        "SAI2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2lpenr",
            extends: None,
            description: Some(
                "RCC APB2 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1lpen",
                    description: Some(
                        "TIM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8lpen",
                    description: Some(
                        "TIM8 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1lpen",
                    description: Some(
                        "USART1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6lpen",
                    description: Some(
                        "USART6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart9lpen",
                    description: Some(
                        "UART9 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart10lpen",
                    description: Some(
                        "USART10 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1lpen",
                    description: Some(
                        "SPI1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi4lpen",
                    description: Some(
                        "SPI4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim18lpen",
                    description: Some(
                        "TIM18 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim15lpen",
                    description: Some(
                        "TIM15 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim16lpen",
                    description: Some(
                        "TIM16 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim17lpen",
                    description: Some(
                        "TIM17 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9lpen",
                    description: Some(
                        "TIM9 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi5lpen",
                    description: Some(
                        "SPI5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai1lpen",
                    description: Some(
                        "SAI1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai2lpen",
                    description: Some(
                        "SAI2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2lpensr",
            extends: None,
            description: Some(
                "RCC APB2 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1lpens",
                    description: Some(
                        "TIM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8lpens",
                    description: Some(
                        "TIM8 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1lpens",
                    description: Some(
                        "USART1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6lpens",
                    description: Some(
                        "USART6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart9lpens",
                    description: Some(
                        "UART9 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart10lpens",
                    description: Some(
                        "USART10 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1lpens",
                    description: Some(
                        "SPI1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi4lpens",
                    description: Some(
                        "SPI4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim18lpens",
                    description: Some(
                        "TIM18 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim15lpens",
                    description: Some(
                        "TIM15 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim16lpens",
                    description: Some(
                        "TIM16 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim17lpens",
                    description: Some(
                        "TIM17 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9lpens",
                    description: Some(
                        "TIM9 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi5lpens",
                    description: Some(
                        "SPI5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai1lpens",
                    description: Some(
                        "SAI1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai2lpens",
                    description: Some(
                        "SAI2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2rstcr",
            extends: None,
            description: Some(
                "RCC APB2 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1rstc",
                    description: Some(
                        "TIM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8rstc",
                    description: Some(
                        "TIM8 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1rstc",
                    description: Some(
                        "USART1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6rstc",
                    description: Some(
                        "USART6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart9rstc",
                    description: Some(
                        "UART9 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart10rstc",
                    description: Some(
                        "USART10 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1rstc",
                    description: Some(
                        "SPI1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi4rstc",
                    description: Some(
                        "SPI4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim18rstc",
                    description: Some(
                        "TIM18 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim15rstc",
                    description: Some(
                        "TIM15 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim16rstc",
                    description: Some(
                        "TIM16 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim17rstc",
                    description: Some(
                        "TIM17 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9rstc",
                    description: Some(
                        "TIM9 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi5rstc",
                    description: Some(
                        "SPI5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai1rstc",
                    description: Some(
                        "SAI1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai2rstc",
                    description: Some(
                        "SAI2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2rstr",
            extends: None,
            description: Some(
                "RCC APB2 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1rst",
                    description: Some(
                        "TIM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8rst",
                    description: Some(
                        "TIM8 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1rst",
                    description: Some(
                        "USART1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6rst",
                    description: Some(
                        "USART6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart9rst",
                    description: Some(
                        "UART9 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart10rst",
                    description: Some(
                        "USART10 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1rst",
                    description: Some(
                        "SPI1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi4rst",
                    description: Some(
                        "SPI4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim18rst",
                    description: Some(
                        "TIM18 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim15rst",
                    description: Some(
                        "TIM15 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim16rst",
                    description: Some(
                        "TIM16 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim17rst",
                    description: Some(
                        "TIM17 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9rst",
                    description: Some(
                        "TIM9 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi5rst",
                    description: Some(
                        "SPI5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai1rst",
                    description: Some(
                        "SAI1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai2rst",
                    description: Some(
                        "SAI2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2rstsr",
            extends: None,
            description: Some(
                "RCC APB2 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim1rsts",
                    description: Some(
                        "TIM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8rsts",
                    description: Some(
                        "TIM8 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1rsts",
                    description: Some(
                        "USART1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6rsts",
                    description: Some(
                        "USART6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "uart9rsts",
                    description: Some(
                        "UART9 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart10rsts",
                    description: Some(
                        "USART10 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1rsts",
                    description: Some(
                        "SPI1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi4rsts",
                    description: Some(
                        "SPI4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim18rsts",
                    description: Some(
                        "TIM18 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim15rsts",
                    description: Some(
                        "TIM15 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim16rsts",
                    description: Some(
                        "TIM16 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim17rsts",
                    description: Some(
                        "TIM17 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9rsts",
                    description: Some(
                        "TIM9 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi5rsts",
                    description: Some(
                        "SPI5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai1rsts",
                    description: Some(
                        "SAI1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sai2rsts",
                    description: Some(
                        "SAI2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb3encr",
            extends: None,
            description: Some(
                "RCC APB3 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dftenc",
                    description: Some(
                        "DFT enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb3enr",
            extends: None,
            description: Some(
                "RCC APB3 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dften",
                    description: Some(
                        "DFT enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb3ensr",
            extends: None,
            description: Some(
                "RCC APB3 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dftens",
                    description: Some(
                        "DFT enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb3lpencr",
            extends: None,
            description: Some(
                "RCC APB3 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dftlpenc",
                    description: Some(
                        "DFT sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb3lpenr",
            extends: None,
            description: Some(
                "RCC APB3 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dftlpen",
                    description: Some(
                        "DFT sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb3lpensr",
            extends: None,
            description: Some(
                "RCC APB3 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dftlpens",
                    description: Some(
                        "DFT sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4hencr",
            extends: None,
            description: Some(
                "RCC APB4H enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "syscfgenc",
                    description: Some(
                        "SYSCFG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bsecenc",
                    description: Some(
                        "BSEC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dtsenc",
                    description: Some(
                        "DTS enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "busperfmenc",
                    description: Some(
                        "BUSPERFM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4henr",
            extends: None,
            description: Some(
                "RCC APB4H enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "syscfgen",
                    description: Some(
                        "SYSCFG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bsecen",
                    description: Some(
                        "BSEC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dtsen",
                    description: Some(
                        "DTS enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "busperfmen",
                    description: Some(
                        "BUSPERFM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4hensr",
            extends: None,
            description: Some(
                "RCC APB4H enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "syscfgens",
                    description: Some(
                        "SYSCFG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bsecens",
                    description: Some(
                        "BSEC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dtsens",
                    description: Some(
                        "DTS enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "busperfmens",
                    description: Some(
                        "BUSPERFM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4hlpencr",
            extends: None,
            description: Some(
                "RCC APB4H Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "syscfglpenc",
                    description: Some(
                        "SYSCFG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bseclpenc",
                    description: Some(
                        "BSEC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dtslpenc",
                    description: Some(
                        "DTS sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "busperfmlpenc",
                    description: Some(
                        "BUSPERFM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4hlpenr",
            extends: None,
            description: Some(
                "RCC APB4H Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "syscfglpen",
                    description: Some(
                        "SYSCFG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bseclpen",
                    description: Some(
                        "BSEC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dtslpen",
                    description: Some(
                        "DTS sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "busperfmlpen",
                    description: Some(
                        "BUSPERFM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4hlpensr",
            extends: None,
            description: Some(
                "RCC APB4H Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "syscfglpens",
                    description: Some(
                        "SYSCFG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bseclpens",
                    description: Some(
                        "BSEC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dtslpens",
                    description: Some(
                        "DTS sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "busperfmlpens",
                    description: Some(
                        "BUSPERFM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4hrstcr",
            extends: None,
            description: Some(
                "RCC APB4H reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "syscfgrstc",
                    description: Some(
                        "SYSCFG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dtsrstc",
                    description: Some(
                        "DTS reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "busperfmrstc",
                    description: Some(
                        "BUSPERFM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4hrstr",
            extends: None,
            description: Some(
                "RCC APB4H reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "syscfgrst",
                    description: Some(
                        "SYSCFG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dtsrst",
                    description: Some(
                        "DTS reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "busperfmrst",
                    description: Some(
                        "BUSPERFM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4hrstsr",
            extends: None,
            description: Some(
                "RCC APB4H reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "syscfgrsts",
                    description: Some(
                        "SYSCFG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dtsrsts",
                    description: Some(
                        "DTS reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "busperfmrsts",
                    description: Some(
                        "BUSPERFM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4lencr",
            extends: None,
            description: Some(
                "RCC APB4L enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hdpenc",
                    description: Some(
                        "HDP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpuart1enc",
                    description: Some(
                        "LPUART1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi6enc",
                    description: Some(
                        "SPI6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c4enc",
                    description: Some(
                        "I2C4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim2enc",
                    description: Some(
                        "LPTIM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim3enc",
                    description: Some(
                        "LPTIM3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim4enc",
                    description: Some(
                        "LPTIM4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim5enc",
                    description: Some(
                        "LPTIM5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vrefbufenc",
                    description: Some(
                        "VREFBUF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtcenc",
                    description: Some(
                        "RTC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gretenc",
                    description: Some(
                        "R2GRET enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gnpuenc",
                    description: Some(
                        "R2GNPU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "serfenc",
                    description: Some(
                        "SERF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4lenr",
            extends: None,
            description: Some(
                "RCC APB4L enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hdpen",
                    description: Some(
                        "HDP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpuart1en",
                    description: Some(
                        "LPUART1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi6en",
                    description: Some(
                        "SPI6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c4en",
                    description: Some(
                        "I2C4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim2en",
                    description: Some(
                        "LPTIM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim3en",
                    description: Some(
                        "LPTIM3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim4en",
                    description: Some(
                        "LPTIM4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim5en",
                    description: Some(
                        "LPTIM5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vrefbufen",
                    description: Some(
                        "VREFBUF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtcen",
                    description: Some(
                        "RTC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2greten",
                    description: Some(
                        "R2GRET enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gnpuen",
                    description: Some(
                        "R2GNPU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "serfen",
                    description: Some(
                        "SERF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4lensr",
            extends: None,
            description: Some(
                "RCC APB4L enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hdpens",
                    description: Some(
                        "HDP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpuart1ens",
                    description: Some(
                        "LPUART1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi6ens",
                    description: Some(
                        "SPI6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c4ens",
                    description: Some(
                        "I2C4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim2ens",
                    description: Some(
                        "LPTIM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim3ens",
                    description: Some(
                        "LPTIM3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim4ens",
                    description: Some(
                        "LPTIM4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim5ens",
                    description: Some(
                        "LPTIM5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vrefbufens",
                    description: Some(
                        "VREFBUF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtcens",
                    description: Some(
                        "RTC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gretens",
                    description: Some(
                        "R2GRET enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gnpuens",
                    description: Some(
                        "R2GNPU enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "serfens",
                    description: Some(
                        "SERF enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4llpencr",
            extends: None,
            description: Some(
                "RCC APB4L Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hdplpenc",
                    description: Some(
                        "HDP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpuart1lpenc",
                    description: Some(
                        "LPUART1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi6lpenc",
                    description: Some(
                        "SPI6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c4lpenc",
                    description: Some(
                        "I2C4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim2lpenc",
                    description: Some(
                        "LPTIM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim3lpenc",
                    description: Some(
                        "LPTIM3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim4lpenc",
                    description: Some(
                        "LPTIM4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim5lpenc",
                    description: Some(
                        "LPTIM5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vrefbuflpenc",
                    description: Some(
                        "VREFBUF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtclpenc",
                    description: Some(
                        "RTC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtcapblpenc",
                    description: Some(
                        "RTCAPB sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gretlpenc",
                    description: Some(
                        "R2GRET sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gnpulpenc",
                    description: Some(
                        "R2GNPU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "serflpenc",
                    description: Some(
                        "SERF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4llpenr",
            extends: None,
            description: Some(
                "RCC APB4L Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hdplpen",
                    description: Some(
                        "HDP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpuart1lpen",
                    description: Some(
                        "LPUART1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi6lpen",
                    description: Some(
                        "SPI6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c4lpen",
                    description: Some(
                        "I2C4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim2lpen",
                    description: Some(
                        "LPTIM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim3lpen",
                    description: Some(
                        "LPTIM3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim4lpen",
                    description: Some(
                        "LPTIM4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim5lpen",
                    description: Some(
                        "LPTIM5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vrefbuflpen",
                    description: Some(
                        "VREFBUF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtclpen",
                    description: Some(
                        "RTC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtcapblpen",
                    description: Some(
                        "RTCAPB sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gretlpen",
                    description: Some(
                        "R2GRET sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gnpulpen",
                    description: Some(
                        "R2GNPU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "serflpen",
                    description: Some(
                        "SERF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4llpensr",
            extends: None,
            description: Some(
                "RCC APB4L Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hdplpens",
                    description: Some(
                        "HDP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpuart1lpens",
                    description: Some(
                        "LPUART1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi6lpens",
                    description: Some(
                        "SPI6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c4lpens",
                    description: Some(
                        "I2C4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim2lpens",
                    description: Some(
                        "LPTIM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim3lpens",
                    description: Some(
                        "LPTIM3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim4lpens",
                    description: Some(
                        "LPTIM4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim5lpens",
                    description: Some(
                        "LPTIM5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vrefbuflpens",
                    description: Some(
                        "VREFBUF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtclpens",
                    description: Some(
                        "RTC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtcapblpens",
                    description: Some(
                        "RTCAPB sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gretlpens",
                    description: Some(
                        "R2GRET sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gnpulpens",
                    description: Some(
                        "R2GNPU sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "serflpens",
                    description: Some(
                        "SERF sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4lrstcr",
            extends: None,
            description: Some(
                "RCC APB4L reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hdprstc",
                    description: Some(
                        "HDP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpuart1rstc",
                    description: Some(
                        "LPUART1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi6rstc",
                    description: Some(
                        "SPI6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c4rstc",
                    description: Some(
                        "I2C4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim2rstc",
                    description: Some(
                        "LPTIM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim3rstc",
                    description: Some(
                        "LPTIM3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim4rstc",
                    description: Some(
                        "LPTIM4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim5rstc",
                    description: Some(
                        "LPTIM5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vrefbufrstc",
                    description: Some(
                        "VREFBUF reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtcrstc",
                    description: Some(
                        "RTC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gretrstc",
                    description: Some(
                        "R2GRET reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gnpurstc",
                    description: Some(
                        "R2GNPU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "serfrstc",
                    description: Some(
                        "SERF reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4lrstr",
            extends: None,
            description: Some(
                "RCC APB4L reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hdprst",
                    description: Some(
                        "HDP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpuart1rst",
                    description: Some(
                        "LPUART1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi6rst",
                    description: Some(
                        "SPI6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c4rst",
                    description: Some(
                        "I2C4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim2rst",
                    description: Some(
                        "LPTIM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim3rst",
                    description: Some(
                        "LPTIM3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim4rst",
                    description: Some(
                        "LPTIM4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim5rst",
                    description: Some(
                        "LPTIM5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vrefbufrst",
                    description: Some(
                        "VREFBUF reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtcrst",
                    description: Some(
                        "RTC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gretrst",
                    description: Some(
                        "R2GRET reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gnpurst",
                    description: Some(
                        "R2GNPU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "serfrst",
                    description: Some(
                        "SERF reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb4lrstsr",
            extends: None,
            description: Some(
                "RCC APB4L reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hdprsts",
                    description: Some(
                        "HDP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpuart1rsts",
                    description: Some(
                        "LPUART1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi6rsts",
                    description: Some(
                        "SPI6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c4rsts",
                    description: Some(
                        "I2C4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim2rsts",
                    description: Some(
                        "LPTIM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim3rsts",
                    description: Some(
                        "LPTIM3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim4rsts",
                    description: Some(
                        "LPTIM4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lptim5rsts",
                    description: Some(
                        "LPTIM5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vrefbufrsts",
                    description: Some(
                        "VREFBUF reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtcrsts",
                    description: Some(
                        "RTC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gretrsts",
                    description: Some(
                        "R2GRET reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "r2gnpursts",
                    description: Some(
                        "R2GNPU reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "serfrsts",
                    description: Some(
                        "SERF reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb5encr",
            extends: None,
            description: Some(
                "RCC APB5 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ltdcenc",
                    description: Some(
                        "LTDC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dcmippenc",
                    description: Some(
                        "DCMIPP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxtimenc",
                    description: Some(
                        "GFXTIM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencenc",
                    description: Some(
                        "VENC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "csienc",
                    description: Some(
                        "CSI enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb5enr",
            extends: None,
            description: Some(
                "RCC APB5 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ltdcen",
                    description: Some(
                        "LTDC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dcmippen",
                    description: Some(
                        "DCMIPP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxtimen",
                    description: Some(
                        "GFXTIM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencen",
                    description: Some(
                        "VENC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "csien",
                    description: Some(
                        "CSI enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb5ensr",
            extends: None,
            description: Some(
                "RCC APB5 enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ltdcens",
                    description: Some(
                        "LTDC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dcmippens",
                    description: Some(
                        "DCMIPP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxtimens",
                    description: Some(
                        "GFXTIM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencens",
                    description: Some(
                        "VENC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "csiens",
                    description: Some(
                        "CSI enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb5lpencr",
            extends: None,
            description: Some(
                "RCC APB5 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ltdclpenc",
                    description: Some(
                        "LTDC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dcmipplpenc",
                    description: Some(
                        "DCMIPP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxtimlpenc",
                    description: Some(
                        "GFXTIM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "venclpenc",
                    description: Some(
                        "VENC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "csilpenc",
                    description: Some(
                        "CSI sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb5lpenr",
            extends: None,
            description: Some(
                "RCC APB5 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ltdclpen",
                    description: Some(
                        "LTDC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dcmipplpen",
                    description: Some(
                        "DCMIPP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxtimlpen",
                    description: Some(
                        "GFXTIM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "venclpen",
                    description: Some(
                        "VENC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "csilpen",
                    description: Some(
                        "CSI sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb5lpensr",
            extends: None,
            description: Some(
                "RCC APB5 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ltdclpens",
                    description: Some(
                        "LTDC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dcmipplpens",
                    description: Some(
                        "DCMIPP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxtimlpens",
                    description: Some(
                        "GFXTIM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "venclpens",
                    description: Some(
                        "VENC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "csilpens",
                    description: Some(
                        "CSI sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb5rstcr",
            extends: None,
            description: Some(
                "RCC APB5 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ltdcrstc",
                    description: Some(
                        "LTDC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dcmipprstc",
                    description: Some(
                        "DCMIPP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxtimrstc",
                    description: Some(
                        "GFXTIM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencrstc",
                    description: Some(
                        "VENC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "csirstc",
                    description: Some(
                        "CSI reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb5rstr",
            extends: None,
            description: Some(
                "RCC APB5 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ltdcrst",
                    description: Some(
                        "LTDC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dcmipprst",
                    description: Some(
                        "DCMIPP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxtimrst",
                    description: Some(
                        "GFXTIM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencrst",
                    description: Some(
                        "VENC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "csirst",
                    description: Some(
                        "CSI reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb5rstsr",
            extends: None,
            description: Some(
                "RCC APB5 reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ltdcrsts",
                    description: Some(
                        "LTDC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dcmipprsts",
                    description: Some(
                        "DCMIPP reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gfxtimrsts",
                    description: Some(
                        "GFXTIM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencrsts",
                    description: Some(
                        "VENC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "csirsts",
                    description: Some(
                        "CSI reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Bdcr",
            extends: None,
            description: Some(
                "RCC backup domain protection register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "vswrst",
                    description: Some(
                        "VSW domain software reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Busencr",
            extends: None,
            description: Some(
                "RCC bus enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknenc",
                    description: Some(
                        "ACLKN enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "aclkncenc",
                    description: Some(
                        "ACLKNC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmenc",
                    description: Some(
                        "AHBM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1enc",
                    description: Some(
                        "AHB1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2enc",
                    description: Some(
                        "AHB2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3enc",
                    description: Some(
                        "AHB3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4enc",
                    description: Some(
                        "AHB4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5enc",
                    description: Some(
                        "AHB5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1enc",
                    description: Some(
                        "APB1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2enc",
                    description: Some(
                        "APB2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3enc",
                    description: Some(
                        "APB3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4enc",
                    description: Some(
                        "APB4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5enc",
                    description: Some(
                        "APB5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Busenr",
            extends: None,
            description: Some(
                "RCC SoC buses enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknen",
                    description: Some(
                        "ACLKN enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "aclkncen",
                    description: Some(
                        "ACLKNC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmen",
                    description: Some(
                        "AHBM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1en",
                    description: Some(
                        "AHB1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2en",
                    description: Some(
                        "AHB2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3en",
                    description: Some(
                        "AHB3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4en",
                    description: Some(
                        "AHB4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5en",
                    description: Some(
                        "AHB5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1en",
                    description: Some(
                        "APB1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2en",
                    description: Some(
                        "APB2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3en",
                    description: Some(
                        "APB3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4en",
                    description: Some(
                        "APB4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5en",
                    description: Some(
                        "APB5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Busensr",
            extends: None,
            description: Some(
                "RCC bus enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknens",
                    description: Some(
                        "ACLKN enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "aclkncens",
                    description: Some(
                        "ACLKNC enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmens",
                    description: Some(
                        "AHBM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1ens",
                    description: Some(
                        "AHB1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2ens",
                    description: Some(
                        "AHB2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3ens",
                    description: Some(
                        "AHB3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4ens",
                    description: Some(
                        "AHB4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5ens",
                    description: Some(
                        "AHB5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1ens",
                    description: Some(
                        "APB1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2ens",
                    description: Some(
                        "APB2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3ens",
                    description: Some(
                        "APB3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4ens",
                    description: Some(
                        "APB4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5ens",
                    description: Some(
                        "APB5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Buslpencr",
            extends: None,
            description: Some(
                "RCC bus Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknlpenc",
                    description: Some(
                        "ACLKN sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "aclknclpenc",
                    description: Some(
                        "ACLKNC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmlpenc",
                    description: Some(
                        "AHBM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1lpenc",
                    description: Some(
                        "AHB1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2lpenc",
                    description: Some(
                        "AHB2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3lpenc",
                    description: Some(
                        "AHB3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4lpenc",
                    description: Some(
                        "AHB4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5lpenc",
                    description: Some(
                        "AHB5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1lpenc",
                    description: Some(
                        "APB1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2lpenc",
                    description: Some(
                        "APB2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3lpenc",
                    description: Some(
                        "APB3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4lpenc",
                    description: Some(
                        "APB4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5lpenc",
                    description: Some(
                        "APB5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Buslpenr",
            extends: None,
            description: Some(
                "RCC SoC buses Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknlpen",
                    description: Some(
                        "ACLKN sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "aclknclpen",
                    description: Some(
                        "ACLKNC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmlpen",
                    description: Some(
                        "AHBM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1lpen",
                    description: Some(
                        "AHB1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2lpen",
                    description: Some(
                        "AHB2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3lpen",
                    description: Some(
                        "AHB3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4lpen",
                    description: Some(
                        "AHB4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5lpen",
                    description: Some(
                        "AHB5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1lpen",
                    description: Some(
                        "APB1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2lpen",
                    description: Some(
                        "APB2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3lpen",
                    description: Some(
                        "APB3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4lpen",
                    description: Some(
                        "APB4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5lpen",
                    description: Some(
                        "APB5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Buslpensr",
            extends: None,
            description: Some(
                "RCC bus Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknlpens",
                    description: Some(
                        "ACLKN sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "aclknclpens",
                    description: Some(
                        "ACLKNC sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmlpens",
                    description: Some(
                        "AHBM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1lpens",
                    description: Some(
                        "AHB1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2lpens",
                    description: Some(
                        "AHB2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3lpens",
                    description: Some(
                        "AHB3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4lpens",
                    description: Some(
                        "AHB4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5lpens",
                    description: Some(
                        "AHB5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1lpens",
                    description: Some(
                        "APB1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2lpens",
                    description: Some(
                        "APB2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3lpens",
                    description: Some(
                        "APB3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4lpens",
                    description: Some(
                        "APB4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5lpens",
                    description: Some(
                        "APB5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Busrstcr",
            extends: None,
            description: Some(
                "RCC bus reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknrstc",
                    description: Some(
                        "ACLKN reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmrstc",
                    description: Some(
                        "AHBM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1rstc",
                    description: Some(
                        "AHB1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2rstc",
                    description: Some(
                        "AHB2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3rstc",
                    description: Some(
                        "AHB3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4rstc",
                    description: Some(
                        "AHB4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5rstc",
                    description: Some(
                        "AHB5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1rstc",
                    description: Some(
                        "APB1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2rstc",
                    description: Some(
                        "APB2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3rstc",
                    description: Some(
                        "APB3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4rstc",
                    description: Some(
                        "APB4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5rstc",
                    description: Some(
                        "APB5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nocrstc",
                    description: Some(
                        "NOC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Busrstr",
            extends: None,
            description: Some(
                "RCC SoC buses reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknrst",
                    description: Some(
                        "ACLKN reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmrst",
                    description: Some(
                        "AHBM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1rst",
                    description: Some(
                        "AHB1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2rst",
                    description: Some(
                        "AHB2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3rst",
                    description: Some(
                        "AHB3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4rst",
                    description: Some(
                        "AHB4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5rst",
                    description: Some(
                        "AHB5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1rst",
                    description: Some(
                        "APB1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2rst",
                    description: Some(
                        "APB2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3rst",
                    description: Some(
                        "APB3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4rst",
                    description: Some(
                        "APB4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5rst",
                    description: Some(
                        "APB5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nocrst",
                    description: Some(
                        "NOC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Busrstsr",
            extends: None,
            description: Some(
                "RCC bus reset set register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknrsts",
                    description: Some(
                        "ACLKN reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmrsts",
                    description: Some(
                        "AHBM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1rsts",
                    description: Some(
                        "AHB1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2rsts",
                    description: Some(
                        "AHB2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3rsts",
                    description: Some(
                        "AHB3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4rsts",
                    description: Some(
                        "AHB4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5rsts",
                    description: Some(
                        "AHB5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1rsts",
                    description: Some(
                        "APB1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2rsts",
                    description: Some(
                        "APB2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3rsts",
                    description: Some(
                        "APB3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4rsts",
                    description: Some(
                        "APB4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5rsts",
                    description: Some(
                        "APB5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nocrsts",
                    description: Some(
                        "NOC reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ccipr1",
            extends: None,
            description: Some(
                "RCC clock configuration for independent peripheral register1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "adf1sel",
                    description: Some(
                        "Source selection for the ADF1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Adfsel",
                    ),
                },
                Field {
                    name: "adc12sel",
                    description: Some(
                        "Source selection for the ADC12 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Adcsel",
                    ),
                },
                Field {
                    name: "adcpre",
                    description: Some(
                        "ADC12 Prog clock divider selection (for clock ck_icn_p_adf1).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Adcpre",
                    ),
                },
                Field {
                    name: "dcmippsel",
                    description: Some(
                        "Source selection for the DCMIPP kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Dcmippsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ccipr12",
            extends: None,
            description: Some(
                "RCC clock configuration for independent peripheral register12.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lptim1sel",
                    description: Some(
                        "Source selection for the LPTIM1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Lptimsel",
                    ),
                },
                Field {
                    name: "lptim2sel",
                    description: Some(
                        "Source selection for the LPTIM2 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Lptimsel",
                    ),
                },
                Field {
                    name: "lptim3sel",
                    description: Some(
                        "Source selection for the LPTIM3 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Lptimsel",
                    ),
                },
                Field {
                    name: "lptim4sel",
                    description: Some(
                        "Source selection for the LPTIM4 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Lptimsel",
                    ),
                },
                Field {
                    name: "lptim5sel",
                    description: Some(
                        "Source selection for the LPTIM5 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Lptimsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ccipr13",
            extends: None,
            description: Some(
                "RCC clock configuration for independent peripheral register13.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "usart1sel",
                    description: Some(
                        "Source selection for the USART1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Usartsel",
                    ),
                },
                Field {
                    name: "usart2sel",
                    description: Some(
                        "Source selection for the USART2 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Usartsel",
                    ),
                },
                Field {
                    name: "usart3sel",
                    description: Some(
                        "Source selection for the USART3 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Usartsel",
                    ),
                },
                Field {
                    name: "uart4sel",
                    description: Some(
                        "Source selection for the UART4 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Uartsel",
                    ),
                },
                Field {
                    name: "uart5sel",
                    description: Some(
                        "Source selection for the UART5 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Uartsel",
                    ),
                },
                Field {
                    name: "usart6sel",
                    description: Some(
                        "Source selection for the USART6 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Usartsel",
                    ),
                },
                Field {
                    name: "uart7sel",
                    description: Some(
                        "Source selection for the UART7 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Uartsel",
                    ),
                },
                Field {
                    name: "uart8sel",
                    description: Some(
                        "Source selection for the UART8 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Uartsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ccipr14",
            extends: None,
            description: Some(
                "RCC clock configuration for independent peripheral register14.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "uart9sel",
                    description: Some(
                        "Source selection for the UART9 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Uartsel",
                    ),
                },
                Field {
                    name: "usart10sel",
                    description: Some(
                        "Source selection for the USART10 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Usartsel",
                    ),
                },
                Field {
                    name: "lpuart1sel",
                    description: Some(
                        "Source selection for the LPUART1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Lpuartsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ccipr2",
            extends: None,
            description: Some(
                "RCC clock configuration for independent peripheral register 2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "eth1ptpsel",
                    description: Some(
                        "Source selection for the ETH1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ethptpsel",
                    ),
                },
                Field {
                    name: "eth1ptpdiv",
                    description: Some(
                        "ETH1 Kernel clock divider selection (for clock ck_ker_eth1ptp).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 4,
                    array: None,
                    enumm: Some(
                        "Ethptpdiv",
                    ),
                },
                Field {
                    name: "eth1pwrdownack",
                    description: Some(
                        "Set and reset by software.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ethpwrdownack",
                    ),
                },
                Field {
                    name: "eth1clksel",
                    description: Some(
                        "Source selection for the ETH1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ethclksel",
                    ),
                },
                Field {
                    name: "eth1sel",
                    description: Some(
                        "Set and reset by software.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1refclksel",
                    description: Some(
                        "Set and reset by software.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1gtxclksel",
                    description: Some(
                        "Set and reset by software.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ethgtxclksel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ccipr3",
            extends: None,
            description: Some(
                "RCC clock configuration for independent peripheral register3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "fdcansel",
                    description: Some(
                        "Source selection for the FDCAN kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Fdcansel",
                    ),
                },
                Field {
                    name: "fmcsel",
                    description: Some(
                        "Source selection for the FMC kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Fmcsel",
                    ),
                },
                Field {
                    name: "dftsel",
                    description: Some(
                        "Source selection for the DFT kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Dftsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ccipr4",
            extends: None,
            description: Some(
                "RCC clock configuration for independent peripheral register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "i2c1sel",
                    description: Some(
                        "Source selection for the I2C1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "I2c1sel",
                    ),
                },
                Field {
                    name: "i2c2sel",
                    description: Some(
                        "Source selection for the I2C2 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "I2c2sel",
                    ),
                },
                Field {
                    name: "i2c3sel",
                    description: Some(
                        "Source selection for the I2C3 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "I2c3sel",
                    ),
                },
                Field {
                    name: "i2c4sel",
                    description: Some(
                        "Source selection for the I2C4 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "I2c4sel",
                    ),
                },
                Field {
                    name: "i3c1sel",
                    description: Some(
                        "Source selection for the I3C1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "I3c1sel",
                    ),
                },
                Field {
                    name: "i3c2sel",
                    description: Some(
                        "Source selection for the I3C2 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "I3c2sel",
                    ),
                },
                Field {
                    name: "ltdcsel",
                    description: Some(
                        "Source selection for the LTDC kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ltdcsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ccipr5",
            extends: None,
            description: Some(
                "RCC lock configuration for independent peripheral register5.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "mco1sel",
                    description: Some(
                        "Source selection for the MCO1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Mcosel",
                    ),
                },
                Field {
                    name: "mco1pre",
                    description: Some(
                        "MCO1 Prog clock divider selection (for clock ck_icn_p_mce3).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 4,
                    array: None,
                    enumm: Some(
                        "Mcopre",
                    ),
                },
                Field {
                    name: "mco2sel",
                    description: Some(
                        "Source selection for the MCO2 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Mcosel",
                    ),
                },
                Field {
                    name: "mco2pre",
                    description: Some(
                        "MCO2 Prog clock divider selection (for clock ck_icn_p_mce4).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 4,
                    array: None,
                    enumm: Some(
                        "Mcopre",
                    ),
                },
                Field {
                    name: "mdf1sel",
                    description: Some(
                        "Source selection for the MDF1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Mdfsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ccipr6",
            extends: None,
            description: Some(
                "RCC clock configuration for independent peripheral register6.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "xspi1sel",
                    description: Some(
                        "Source selection for the XSPI1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Xspisel",
                    ),
                },
                Field {
                    name: "xspi2sel",
                    description: Some(
                        "Source selection for the XSPI2 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Xspisel",
                    ),
                },
                Field {
                    name: "xspi3sel",
                    description: Some(
                        "Source selection for the XSPI3 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Xspisel",
                    ),
                },
                Field {
                    name: "otgphy1sel",
                    description: Some(
                        "Source selection for the OTGPHY1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Otgphysel",
                    ),
                },
                Field {
                    name: "otgphy1ckrefsel",
                    description: Some(
                        "Set and reset by software.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otgphy2sel",
                    description: Some(
                        "Source selection for the OTGPHY2 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Otgphysel",
                    ),
                },
                Field {
                    name: "otgphy2ckrefsel",
                    description: Some(
                        "Set and reset by software.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ccipr7",
            extends: None,
            description: Some(
                "RCC clock configuration for independent peripheral register7.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "persel",
                    description: Some(
                        "Source selection for the PER kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Persel",
                    ),
                },
                Field {
                    name: "pssisel",
                    description: Some(
                        "Source selection for the PSSI kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Pssisel",
                    ),
                },
                Field {
                    name: "rtcsel",
                    description: Some(
                        "Source selection for the RTC kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Rtcsel",
                    ),
                },
                Field {
                    name: "rtcpre",
                    description: Some(
                        "RTC Prog clock divider selection (for clock ck_icn_p_risaf).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 6,
                    array: None,
                    enumm: Some(
                        "Rtcpre",
                    ),
                },
                Field {
                    name: "sai1sel",
                    description: Some(
                        "Source selection for the SAI1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Saisel",
                    ),
                },
                Field {
                    name: "sai2sel",
                    description: Some(
                        "Source selection for the SAI2 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Saisel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ccipr8",
            extends: None,
            description: Some(
                "RCC clock configuration for independent peripheral register8.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "sdmmc1sel",
                    description: Some(
                        "Source selection for the SDMMC1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Sdmmcsel",
                    ),
                },
                Field {
                    name: "sdmmc2sel",
                    description: Some(
                        "Source selection for the SDMMC2 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Sdmmcsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ccipr9",
            extends: None,
            description: Some(
                "RCC clock configuration for independent peripheral register9.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "spdifrx1sel",
                    description: Some(
                        "Source selection for the SPDIFRX1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Spdifrxsel",
                    ),
                },
                Field {
                    name: "spi1sel",
                    description: Some(
                        "Source selection for the SPI1 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Spisel1",
                    ),
                },
                Field {
                    name: "spi2sel",
                    description: Some(
                        "Source selection for the SPI2 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Spisel23",
                    ),
                },
                Field {
                    name: "spi3sel",
                    description: Some(
                        "Source selection for the SPI3 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Spisel23",
                    ),
                },
                Field {
                    name: "spi4sel",
                    description: Some(
                        "Source selection for the SPI4 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Spisel45",
                    ),
                },
                Field {
                    name: "spi5sel",
                    description: Some(
                        "Source selection for the SPI5 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Spisel45",
                    ),
                },
                Field {
                    name: "spi6sel",
                    description: Some(
                        "Source selection for the SPI6 kernel clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Spisel6",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ccr",
            extends: None,
            description: Some(
                "RCC control Clear register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsionc",
                    description: Some(
                        "LSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lseonc",
                    description: Some(
                        "LSE oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "msionc",
                    description: Some(
                        "MSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsionc",
                    description: Some(
                        "HSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hseonc",
                    description: Some(
                        "HSE oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllonc",
                    description: Some(
                        "PLL1 oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Cfgr1",
            extends: None,
            description: Some(
                "RCC configuration register 1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "stopwuck",
                    description: Some(
                        "System clock selection after a wake up from system Stop.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Stopwuck",
                    ),
                },
                Field {
                    name: "cpusw",
                    description: Some(
                        "CPU clock switch selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Cpusw",
                    ),
                },
                Field {
                    name: "cpusws",
                    description: Some(
                        "CPU clock switch status.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Cpusws",
                    ),
                },
                Field {
                    name: "syssw",
                    description: Some(
                        "System clock switch selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Syssw",
                    ),
                },
                Field {
                    name: "syssws",
                    description: Some(
                        "System clock switch status.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Syssws",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Cfgr2",
            extends: None,
            description: Some(
                "RCC configuration register 2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ppre1",
                    description: Some(
                        "CPU domain APB1 prescaler.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Ppre",
                    ),
                },
                Field {
                    name: "ppre2",
                    description: Some(
                        "CPU domain APB2 prescaler.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Ppre",
                    ),
                },
                Field {
                    name: "ppre4",
                    description: Some(
                        "CPU domain APB4 prescaler.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Ppre",
                    ),
                },
                Field {
                    name: "ppre5",
                    description: Some(
                        "CPU domain APB5 prescaler.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Ppre",
                    ),
                },
                Field {
                    name: "hpre",
                    description: Some(
                        "AHB clock prescaler.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 3,
                    array: None,
                    enumm: Some(
                        "Hpre",
                    ),
                },
                Field {
                    name: "timpre",
                    description: Some(
                        "Timers clocks prescaler selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Timpre",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Cicr",
            extends: None,
            description: Some(
                "RCC clock-source interrupt Clear register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsirdyc",
                    description: Some(
                        "LSI ready interrupt clear.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsirdyc",
                    ),
                },
                Field {
                    name: "lserdyc",
                    description: Some(
                        "LSE ready interrupt clear.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lserdyc",
                    ),
                },
                Field {
                    name: "msirdyc",
                    description: Some(
                        "MSI ready interrupt clear.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Msirdyc",
                    ),
                },
                Field {
                    name: "hsirdyc",
                    description: Some(
                        "HSI ready interrupt clear.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsirdyc",
                    ),
                },
                Field {
                    name: "hserdyc",
                    description: Some(
                        "HSE ready interrupt clear.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hserdyc",
                    ),
                },
                Field {
                    name: "pllrdyc",
                    description: Some(
                        "PLL1 ready interrupt clear.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllrdyc",
                    ),
                },
                Field {
                    name: "lsecssc",
                    description: Some(
                        "LSE ready interrupt clear.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsecssc",
                    ),
                },
                Field {
                    name: "hsecssc",
                    description: Some(
                        "HSE ready interrupt clear.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsecssc",
                    ),
                },
                Field {
                    name: "wkupfc",
                    description: Some(
                        "CPU Wakeup ready interrupt clear.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Wkupfc",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Cier",
            extends: None,
            description: Some(
                "RCC clock-source interrupt enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsirdyie",
                    description: Some(
                        "LSI ready interrupt enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsirdyie",
                    ),
                },
                Field {
                    name: "lserdyie",
                    description: Some(
                        "LSE ready interrupt enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lserdyie",
                    ),
                },
                Field {
                    name: "msirdyie",
                    description: Some(
                        "MSI ready interrupt enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Msirdyie",
                    ),
                },
                Field {
                    name: "hsirdyie",
                    description: Some(
                        "HSI ready interrupt enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsirdyie",
                    ),
                },
                Field {
                    name: "hserdyie",
                    description: Some(
                        "HSE ready interrupt enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hserdyie",
                    ),
                },
                Field {
                    name: "pllrdyie",
                    description: Some(
                        "PLL1 ready interrupt enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllrdyie",
                    ),
                },
                Field {
                    name: "lsecssie",
                    description: Some(
                        "LSE clock security system (CSS) interrupt enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsecssie",
                    ),
                },
                Field {
                    name: "hsecssie",
                    description: Some(
                        "HSE clock security system (CSS) interrupt enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsecssie",
                    ),
                },
                Field {
                    name: "wkupie",
                    description: Some(
                        "CPU wakeup from Stop interrupt enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Wkupie",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Cifr",
            extends: None,
            description: Some(
                "RCC clock-source interrupt flag register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsirdyf",
                    description: Some(
                        "LSI ready interrupt flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsirdyf",
                    ),
                },
                Field {
                    name: "lserdyf",
                    description: Some(
                        "LSE ready interrupt flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lserdyf",
                    ),
                },
                Field {
                    name: "msirdyf",
                    description: Some(
                        "MSI ready interrupt flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Msirdyf",
                    ),
                },
                Field {
                    name: "hsirdyf",
                    description: Some(
                        "HSI ready interrupt flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsirdyf",
                    ),
                },
                Field {
                    name: "hserdyf",
                    description: Some(
                        "HSE ready interrupt flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hserdyf",
                    ),
                },
                Field {
                    name: "pllrdyf",
                    description: Some(
                        "PLL1 ready interrupt flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllrdyf",
                    ),
                },
                Field {
                    name: "lsecssf",
                    description: Some(
                        "LSE ready interrupt flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsecssf",
                    ),
                },
                Field {
                    name: "hsecssf",
                    description: Some(
                        "HSE ready interrupt flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsecssf",
                    ),
                },
                Field {
                    name: "wkupf",
                    description: Some(
                        "CPU wakeup from Stop interrupt flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Wkupf",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ckprotr",
            extends: None,
            description: Some(
                "RCC clock protection register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "xspi3sels",
                    description: Some(
                        "XSPI3 clock selection current status.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Xspisels",
                    ),
                },
                Field {
                    name: "xspi2sels",
                    description: Some(
                        "XSPI2 clock selection current status.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Xspisels",
                    ),
                },
                Field {
                    name: "xspi1sels",
                    description: Some(
                        "XSPI1 clock selection current status.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Xspisels",
                    ),
                },
                Field {
                    name: "fmcsels",
                    description: Some(
                        "FMC clock selection current status.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Fmcsels",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Cr",
            extends: None,
            description: Some(
                "RCC control register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsion",
                    description: Some(
                        "LSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lseon",
                    description: Some(
                        "LSE oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "msion",
                    description: Some(
                        "MSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsion",
                    description: Some(
                        "HSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hseon",
                    description: Some(
                        "HSE oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllon",
                    description: Some(
                        "PLL1 enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Csr",
            extends: None,
            description: Some(
                "RCC control set register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsions",
                    description: Some(
                        "LSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lseons",
                    description: Some(
                        "LSE oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "msions",
                    description: Some(
                        "MSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsions",
                    description: Some(
                        "HSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hseons",
                    description: Some(
                        "HSE oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllons",
                    description: Some(
                        "PLL1 oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Divencr",
            extends: None,
            description: Some(
                "RCC divider enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1enc",
                    description: Some(
                        "IC1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic2enc",
                    description: Some(
                        "IC2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic3enc",
                    description: Some(
                        "IC3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic4enc",
                    description: Some(
                        "IC4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic5enc",
                    description: Some(
                        "IC5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic6enc",
                    description: Some(
                        "IC6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic7enc",
                    description: Some(
                        "IC7 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic8enc",
                    description: Some(
                        "IC8 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic9enc",
                    description: Some(
                        "IC9 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic10enc",
                    description: Some(
                        "IC10 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic11enc",
                    description: Some(
                        "IC11 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic12enc",
                    description: Some(
                        "IC12 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic13enc",
                    description: Some(
                        "IC13 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic14enc",
                    description: Some(
                        "IC14 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic15enc",
                    description: Some(
                        "IC15 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic16enc",
                    description: Some(
                        "IC16 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic17enc",
                    description: Some(
                        "IC17 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic18enc",
                    description: Some(
                        "IC18 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic19enc",
                    description: Some(
                        "IC19 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic20enc",
                    description: Some(
                        "IC20 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Divenr",
            extends: None,
            description: Some(
                "RCC IC dividers enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1en",
                    description: Some(
                        "IC1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic2en",
                    description: Some(
                        "IC2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic3en",
                    description: Some(
                        "IC3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic4en",
                    description: Some(
                        "IC4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic5en",
                    description: Some(
                        "IC5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic6en",
                    description: Some(
                        "IC6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic7en",
                    description: Some(
                        "IC7 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic8en",
                    description: Some(
                        "IC8 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic9en",
                    description: Some(
                        "IC9 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic10en",
                    description: Some(
                        "IC10 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic11en",
                    description: Some(
                        "IC11 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic12en",
                    description: Some(
                        "IC12 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic13en",
                    description: Some(
                        "IC13 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic14en",
                    description: Some(
                        "IC14 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic15en",
                    description: Some(
                        "IC15 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic16en",
                    description: Some(
                        "IC16 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic17en",
                    description: Some(
                        "IC17 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic18en",
                    description: Some(
                        "IC18 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic19en",
                    description: Some(
                        "IC19 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic20en",
                    description: Some(
                        "IC20 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Divensr",
            extends: None,
            description: Some(
                "RCC Divider enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1ens",
                    description: Some(
                        "IC1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic2ens",
                    description: Some(
                        "IC2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic3ens",
                    description: Some(
                        "IC3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic4ens",
                    description: Some(
                        "IC4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic5ens",
                    description: Some(
                        "IC5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic6ens",
                    description: Some(
                        "IC6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic7ens",
                    description: Some(
                        "IC7 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic8ens",
                    description: Some(
                        "IC8 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic9ens",
                    description: Some(
                        "IC9 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic10ens",
                    description: Some(
                        "IC10 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic11ens",
                    description: Some(
                        "IC11 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic12ens",
                    description: Some(
                        "IC12 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic13ens",
                    description: Some(
                        "IC13 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic14ens",
                    description: Some(
                        "IC14 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic15ens",
                    description: Some(
                        "IC15 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic16ens",
                    description: Some(
                        "IC16 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic17ens",
                    description: Some(
                        "IC17 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic18ens",
                    description: Some(
                        "IC18 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic19ens",
                    description: Some(
                        "IC19 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic20ens",
                    description: Some(
                        "IC20 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Divlpencr",
            extends: None,
            description: Some(
                "RCC divider Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1lpenc",
                    description: Some(
                        "IC1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic2lpenc",
                    description: Some(
                        "IC2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic3lpenc",
                    description: Some(
                        "IC3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic4lpenc",
                    description: Some(
                        "IC4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic5lpenc",
                    description: Some(
                        "IC5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic6lpenc",
                    description: Some(
                        "IC6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic7lpenc",
                    description: Some(
                        "IC7 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic8lpenc",
                    description: Some(
                        "IC8 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic9lpenc",
                    description: Some(
                        "IC9 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic10lpenc",
                    description: Some(
                        "IC10 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic11lpenc",
                    description: Some(
                        "IC11 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic12lpenc",
                    description: Some(
                        "IC12 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic13lpenc",
                    description: Some(
                        "IC13 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic14lpenc",
                    description: Some(
                        "IC14 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic15lpenc",
                    description: Some(
                        "IC15 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic16lpenc",
                    description: Some(
                        "IC16 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic17lpenc",
                    description: Some(
                        "IC17 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic18lpenc",
                    description: Some(
                        "IC18 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic19lpenc",
                    description: Some(
                        "IC19 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic20lpenc",
                    description: Some(
                        "IC20 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Divlpenr",
            extends: None,
            description: Some(
                "RCC dividers Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1lpen",
                    description: Some(
                        "IC1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic2lpen",
                    description: Some(
                        "IC2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic3lpen",
                    description: Some(
                        "IC3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic4lpen",
                    description: Some(
                        "IC4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic5lpen",
                    description: Some(
                        "IC5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic6lpen",
                    description: Some(
                        "IC6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic7lpen",
                    description: Some(
                        "IC7 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic8lpen",
                    description: Some(
                        "IC8 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic9lpen",
                    description: Some(
                        "IC9 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic10lpen",
                    description: Some(
                        "IC10 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic11lpen",
                    description: Some(
                        "IC11 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic12lpen",
                    description: Some(
                        "IC12 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic13lpen",
                    description: Some(
                        "IC13 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic14lpen",
                    description: Some(
                        "IC14 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic15lpen",
                    description: Some(
                        "IC15 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic16lpen",
                    description: Some(
                        "IC16 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic17lpen",
                    description: Some(
                        "IC17 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic18lpen",
                    description: Some(
                        "IC18 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic19lpen",
                    description: Some(
                        "IC19 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic20lpen",
                    description: Some(
                        "IC20 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Divlpensr",
            extends: None,
            description: Some(
                "RCC divider Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1lpens",
                    description: Some(
                        "IC1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic2lpens",
                    description: Some(
                        "IC2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic3lpens",
                    description: Some(
                        "IC3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic4lpens",
                    description: Some(
                        "IC4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic5lpens",
                    description: Some(
                        "IC5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic6lpens",
                    description: Some(
                        "IC6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic7lpens",
                    description: Some(
                        "IC7 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic8lpens",
                    description: Some(
                        "IC8 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic9lpens",
                    description: Some(
                        "IC9 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic10lpens",
                    description: Some(
                        "IC10 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic11lpens",
                    description: Some(
                        "IC11 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic12lpens",
                    description: Some(
                        "IC12 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic13lpens",
                    description: Some(
                        "IC13 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic14lpens",
                    description: Some(
                        "IC14 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic15lpens",
                    description: Some(
                        "IC15 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic16lpens",
                    description: Some(
                        "IC16 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic17lpens",
                    description: Some(
                        "IC17 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic18lpens",
                    description: Some(
                        "IC18 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic19lpens",
                    description: Some(
                        "IC19 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic20lpens",
                    description: Some(
                        "IC20 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Hsecfgr",
            extends: None,
            description: Some(
                "RCC HSE configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hsediv2byp",
                    description: Some(
                        "HSE div2 oscillator clock in Bypass mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsedivbyp",
                    ),
                },
                Field {
                    name: "hsecsson",
                    description: Some(
                        "HSE clock security system (CSS) enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsecssra",
                    description: Some(
                        "HSE clock security system (CSS) re-arm function.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsecssra",
                    ),
                },
                Field {
                    name: "hsecssd",
                    description: Some(
                        "HSE clock security system (CSS) failure detection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsecssd",
                    ),
                },
                Field {
                    name: "hsecssbyp",
                    description: Some(
                        "HSE clock security system (CSS) bypass enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsecssbyp",
                    ),
                },
                Field {
                    name: "hsecssbpre",
                    description: Some(
                        "HSE clock security system (CSS) bypass divider.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 4,
                    array: None,
                    enumm: Some(
                        "Hsecssbpre",
                    ),
                },
                Field {
                    name: "hsebyp",
                    description: Some(
                        "HSE clock bypass.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsebyp",
                    ),
                },
                Field {
                    name: "hseext",
                    description: Some(
                        "HSE clock type in Bypass mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hseext",
                    ),
                },
                Field {
                    name: "hsegfon",
                    description: Some(
                        "HSE clock glitch filter enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsedrv",
                    description: Some(
                        "HSE oscillator driving capability.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Hsedrv",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Hsicfgr",
            extends: None,
            description: Some(
                "RCC HSI configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hsidiv",
                    description: Some(
                        "HSI clock divider.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Hsidiv",
                    ),
                },
                Field {
                    name: "hsitrim",
                    description: Some(
                        "HSI clock trimming.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 7,
                    array: None,
                    enumm: Some(
                        "Hsitrim",
                    ),
                },
                Field {
                    name: "hsical",
                    description: Some(
                        "HSI clock calibration.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 9,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Hsimcr",
            extends: None,
            description: Some(
                "RCC HSI monitor control register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hsiref",
                    description: Some(
                        "HSI clock cycle counter reference value.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 11,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsidev",
                    description: Some(
                        "HSI clock count deviation value.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 6,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsimonen",
                    description: Some(
                        "HSI clock period monitor enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 31,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Hsimsr",
            extends: None,
            description: Some(
                "RCC HSI monitor status register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hsival",
                    description: Some(
                        "HSI clock cycle counter measured value.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 11,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Hwrsr",
            extends: None,
            description: Some(
                "RCC reset status register for hardware.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rmvf",
                    description: Some(
                        "Remove reset flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "HwrsrRmvf",
                    ),
                },
                Field {
                    name: "lckrstf",
                    description: Some(
                        "CPU lockup reset flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "HwrsrLckrstf",
                    ),
                },
                Field {
                    name: "borrstf",
                    description: Some(
                        "BOR flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "HwrsrBorrstf",
                    ),
                },
                Field {
                    name: "pinrstf",
                    description: Some(
                        "Pin reset flag (NRST).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "HwrsrPinrstf",
                    ),
                },
                Field {
                    name: "porrstf",
                    description: Some(
                        "POR/PDR flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "HwrsrPorrstf",
                    ),
                },
                Field {
                    name: "sftrstf",
                    description: Some(
                        "Software system reset flag (1).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "HwrsrSftrstf",
                    ),
                },
                Field {
                    name: "iwdgrstf",
                    description: Some(
                        "Independent Watchdog reset flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 26,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "HwrsrIwdgrstf",
                    ),
                },
                Field {
                    name: "wwdgrstf",
                    description: Some(
                        "Window watchdog reset flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "HwrsrWwdgrstf",
                    ),
                },
                Field {
                    name: "lpwrrstf",
                    description: Some(
                        "Illegal Stop or Standby flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "HwrsrLpwrrstf",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic10cfgr",
            extends: None,
            description: Some(
                "RCC IC10 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic10int",
                    description: Some(
                        "Divider IC10 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic10int",
                    ),
                },
                Field {
                    name: "ic10sel",
                    description: Some(
                        "Divider IC10 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic10sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic11cfgr",
            extends: None,
            description: Some(
                "RCC IC11 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic11int",
                    description: Some(
                        "Divider IC11 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic11int",
                    ),
                },
                Field {
                    name: "ic11sel",
                    description: Some(
                        "Divider IC11 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic11sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic12cfgr",
            extends: None,
            description: Some(
                "RCC IC12 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic12int",
                    description: Some(
                        "Divider IC12 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic12int",
                    ),
                },
                Field {
                    name: "ic12sel",
                    description: Some(
                        "Divider IC12 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic12sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic13cfgr",
            extends: None,
            description: Some(
                "RCC IC13 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic13int",
                    description: Some(
                        "Divider IC13 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic13int",
                    ),
                },
                Field {
                    name: "ic13sel",
                    description: Some(
                        "Divider IC13 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic13sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic14cfgr",
            extends: None,
            description: Some(
                "RCC IC14 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic14int",
                    description: Some(
                        "Divider IC14 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic14int",
                    ),
                },
                Field {
                    name: "ic14sel",
                    description: Some(
                        "Divider IC14 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic14sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic15cfgr",
            extends: None,
            description: Some(
                "RCC IC15 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic15int",
                    description: Some(
                        "Divider IC15 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic15int",
                    ),
                },
                Field {
                    name: "ic15sel",
                    description: Some(
                        "Divider IC15 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic15sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic16cfgr",
            extends: None,
            description: Some(
                "RCC IC16 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic16int",
                    description: Some(
                        "Divider IC16 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic16int",
                    ),
                },
                Field {
                    name: "ic16sel",
                    description: Some(
                        "Divider IC16 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic16sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic17cfgr",
            extends: None,
            description: Some(
                "RCC IC17 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic17int",
                    description: Some(
                        "Divider IC17 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic17int",
                    ),
                },
                Field {
                    name: "ic17sel",
                    description: Some(
                        "Divider IC17 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic17sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic18cfgr",
            extends: None,
            description: Some(
                "RCC IC18 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic18int",
                    description: Some(
                        "Divider IC18 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic18int",
                    ),
                },
                Field {
                    name: "ic18sel",
                    description: Some(
                        "Divider IC18 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic18sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic19cfgr",
            extends: None,
            description: Some(
                "RCC IC19 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic19int",
                    description: Some(
                        "Divider IC19 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic19int",
                    ),
                },
                Field {
                    name: "ic19sel",
                    description: Some(
                        "Divider IC19 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic19sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic1cfgr",
            extends: None,
            description: Some(
                "RCC IC1 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1int",
                    description: Some(
                        "Divider IC1 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic1int",
                    ),
                },
                Field {
                    name: "ic1sel",
                    description: Some(
                        "Divider IC1 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic1sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic20cfgr",
            extends: None,
            description: Some(
                "RCC IC20 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic20int",
                    description: Some(
                        "Divider IC20 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic20int",
                    ),
                },
                Field {
                    name: "ic20sel",
                    description: Some(
                        "Divider IC20 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic20sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic2cfgr",
            extends: None,
            description: Some(
                "RCC IC2 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic2int",
                    description: Some(
                        "Divider IC2 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic2int",
                    ),
                },
                Field {
                    name: "ic2sel",
                    description: Some(
                        "Divider IC2 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic2sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic3cfgr",
            extends: None,
            description: Some(
                "RCC IC3 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic3int",
                    description: Some(
                        "Divider IC3 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic3int",
                    ),
                },
                Field {
                    name: "ic3sel",
                    description: Some(
                        "Divider IC3 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic3sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic4cfgr",
            extends: None,
            description: Some(
                "RCC IC4 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic4int",
                    description: Some(
                        "Divider IC4 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic4int",
                    ),
                },
                Field {
                    name: "ic4sel",
                    description: Some(
                        "Divider IC4 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic4sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic5cfgr",
            extends: None,
            description: Some(
                "RCC IC5 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic5int",
                    description: Some(
                        "Divider IC5 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic5int",
                    ),
                },
                Field {
                    name: "ic5sel",
                    description: Some(
                        "Divider IC5 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic5sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic6cfgr",
            extends: None,
            description: Some(
                "RCC IC6 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic6int",
                    description: Some(
                        "Divider IC6 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic6int",
                    ),
                },
                Field {
                    name: "ic6sel",
                    description: Some(
                        "Divider IC6 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic6sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic7cfgr",
            extends: None,
            description: Some(
                "RCC IC7 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic7int",
                    description: Some(
                        "Divider IC7 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic7int",
                    ),
                },
                Field {
                    name: "ic7sel",
                    description: Some(
                        "Divider IC7 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic7sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic8cfgr",
            extends: None,
            description: Some(
                "RCC IC8 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic8int",
                    description: Some(
                        "Divider IC8 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic8int",
                    ),
                },
                Field {
                    name: "ic8sel",
                    description: Some(
                        "Divider IC8 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic8sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Ic9cfgr",
            extends: None,
            description: Some(
                "RCC IC9 configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic9int",
                    description: Some(
                        "Divider IC9 integer division factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: Some(
                        "Ic9int",
                    ),
                },
                Field {
                    name: "ic9sel",
                    description: Some(
                        "Divider IC9 Source Selection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Ic9sel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Lockcfgr0",
            extends: None,
            description: Some(
                "RCC oscillator lock configuration register0.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsilock",
                    description: Some(
                        "Defines the lock protection of the LSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsilock",
                    ),
                },
                Field {
                    name: "lselock",
                    description: Some(
                        "Defines the lock protection of the LSE oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lselock",
                    ),
                },
                Field {
                    name: "msilock",
                    description: Some(
                        "Defines the lock protection of the MSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Msilock",
                    ),
                },
                Field {
                    name: "hsilock",
                    description: Some(
                        "Defines the lock protection of the HSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsilock",
                    ),
                },
                Field {
                    name: "hselock",
                    description: Some(
                        "Defines the lock protection of the HSE oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hselock",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Lockcfgr1",
            extends: None,
            description: Some(
                "RCC PLL lock configuration register1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "plllock",
                    description: Some(
                        "Defines the lock protection of the PLL1 PLL configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Plllock",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Lockcfgr2",
            extends: None,
            description: Some(
                "RCC divider lock configuration register2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1lock",
                    description: Some(
                        "Defines the lock protection of the IC1 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic2lock",
                    description: Some(
                        "Defines the lock protection of the IC2 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic3lock",
                    description: Some(
                        "Defines the lock protection of the IC3 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic4lock",
                    description: Some(
                        "Defines the lock protection of the IC4 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic5lock",
                    description: Some(
                        "Defines the lock protection of the IC5 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic6lock",
                    description: Some(
                        "Defines the lock protection of the IC6 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic7lock",
                    description: Some(
                        "Defines the lock protection of the IC7 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic8lock",
                    description: Some(
                        "Defines the lock protection of the IC8 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic9lock",
                    description: Some(
                        "Defines the lock protection of the IC9 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic10lock",
                    description: Some(
                        "Defines the lock protection of the IC10 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic11lock",
                    description: Some(
                        "Defines the lock protection of the IC11 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic12lock",
                    description: Some(
                        "Defines the lock protection of the IC12 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic13lock",
                    description: Some(
                        "Defines the lock protection of the IC13 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic14lock",
                    description: Some(
                        "Defines the lock protection of the IC14 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic15lock",
                    description: Some(
                        "Defines the lock protection of the IC15 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic16lock",
                    description: Some(
                        "Defines the lock protection of the IC16 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic17lock",
                    description: Some(
                        "Defines the lock protection of the IC17 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic18lock",
                    description: Some(
                        "Defines the lock protection of the IC18 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic19lock",
                    description: Some(
                        "Defines the lock protection of the IC19 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
                Field {
                    name: "ic20lock",
                    description: Some(
                        "Defines the lock protection of the IC20 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Iclock",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Lockcfgr3",
            extends: None,
            description: Some(
                "RCC system lock configuration register3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "modlock",
                    description: Some(
                        "Defines the lock protection of the MOD system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Modlock",
                    ),
                },
                Field {
                    name: "syslock",
                    description: Some(
                        "Defines the lock protection of the SYS system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Syslock",
                    ),
                },
                Field {
                    name: "buslock",
                    description: Some(
                        "Defines the lock protection of the BUS system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Buslock",
                    ),
                },
                Field {
                    name: "perlock",
                    description: Some(
                        "Defines the lock protection of the PER system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Perlock",
                    ),
                },
                Field {
                    name: "intlock",
                    description: Some(
                        "Defines the lock protection of the INT system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Intlock",
                    ),
                },
                Field {
                    name: "rstlock",
                    description: Some(
                        "Defines the lock protection of the RST system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Rstlock",
                    ),
                },
                Field {
                    name: "dftlock",
                    description: Some(
                        "Defines the lock protection of the DFT system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Dftlock",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Lockcfgr4",
            extends: None,
            description: Some(
                "RCC bus lock configuration register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknlock",
                    description: Some(
                        "Defines the lock protection of the ACLKN bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Aclknlock",
                    ),
                },
                Field {
                    name: "aclknclock",
                    description: Some(
                        "Defines the lock protection of the ACLKNC bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Aclknclock",
                    ),
                },
                Field {
                    name: "ahbmlock",
                    description: Some(
                        "Defines the lock protection of the AHBM bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbmlock",
                    ),
                },
                Field {
                    name: "ahb1lock",
                    description: Some(
                        "Defines the lock protection of the AHB1 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahblock",
                    ),
                },
                Field {
                    name: "ahb2lock",
                    description: Some(
                        "Defines the lock protection of the AHB2 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahblock",
                    ),
                },
                Field {
                    name: "ahb3lock",
                    description: Some(
                        "Defines the lock protection of the AHB3 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahblock",
                    ),
                },
                Field {
                    name: "ahb4lock",
                    description: Some(
                        "Defines the lock protection of the AHB4 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahblock",
                    ),
                },
                Field {
                    name: "ahb5lock",
                    description: Some(
                        "Defines the lock protection of the AHB5 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahblock",
                    ),
                },
                Field {
                    name: "apb1lock",
                    description: Some(
                        "Defines the lock protection of the APB1 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apblock",
                    ),
                },
                Field {
                    name: "apb2lock",
                    description: Some(
                        "Defines the lock protection of the APB2 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apblock",
                    ),
                },
                Field {
                    name: "apb3lock",
                    description: Some(
                        "Defines the lock protection of the APB3 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apblock",
                    ),
                },
                Field {
                    name: "apb4lock",
                    description: Some(
                        "Defines the lock protection of the APB4 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apblock",
                    ),
                },
                Field {
                    name: "apb5lock",
                    description: Some(
                        "Defines the lock protection of the APB5 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apblock",
                    ),
                },
                Field {
                    name: "noclock",
                    description: Some(
                        "Defines the lock protection of the NOC bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Noclock",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Lockcfgsr3",
            extends: None,
            description: Some(
                "RCC system lock configuration register3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "modlocks",
                    description: Some(
                        "Defines the lock protection of the MOD configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syslocks",
                    description: Some(
                        "Defines the lock protection of the SYS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "buslocks",
                    description: Some(
                        "Defines the lock protection of the BUS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "perlocks",
                    description: Some(
                        "Defines the lock protection of the PER configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "intlocks",
                    description: Some(
                        "Defines the lock protection of the INT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rstlocks",
                    description: Some(
                        "Defines the lock protection of the RST configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dftlocks",
                    description: Some(
                        "Defines the lock protection of the DFT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Lsecfgr",
            extends: None,
            description: Some(
                "RCC LSE configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsecsson",
                    description: Some(
                        "LSE clock security system (CSS) enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsecssra",
                    description: Some(
                        "LSE clock security system (CSS) re-arm function.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsecssra",
                    ),
                },
                Field {
                    name: "lsecssd",
                    description: Some(
                        "LSE clock security system (CSS) failure detection.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsecssd",
                    ),
                },
                Field {
                    name: "lsebyp",
                    description: Some(
                        "LSE clock bypass.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsebyp",
                    ),
                },
                Field {
                    name: "lseext",
                    description: Some(
                        "LSE clock type in Bypass mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lseext",
                    ),
                },
                Field {
                    name: "lsegfon",
                    description: Some(
                        "LSE clock glitch filter enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsedrv",
                    description: Some(
                        "LSE oscillator driving capability.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 2,
                    array: None,
                    enumm: Some(
                        "Lsedrv",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Memencr",
            extends: None,
            description: Some(
                "RCC memory enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3enc",
                    description: Some(
                        "AXISRAM3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram4enc",
                    description: Some(
                        "AXISRAM4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram5enc",
                    description: Some(
                        "AXISRAM5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram6enc",
                    description: Some(
                        "AXISRAM6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram1enc",
                    description: Some(
                        "AHBSRAM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram2enc",
                    description: Some(
                        "AHBSRAM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkpsramenc",
                    description: Some(
                        "BKPSRAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram1enc",
                    description: Some(
                        "AXISRAM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram2enc",
                    description: Some(
                        "AXISRAM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flexramenc",
                    description: Some(
                        "FLEXRAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheramenc",
                    description: Some(
                        "NPUCACHERAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencramenc",
                    description: Some(
                        "VENCRAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bootromenc",
                    description: Some(
                        "BOOTROM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Memenr",
            extends: None,
            description: Some(
                "RCC memory enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3en",
                    description: Some(
                        "AXISRAM3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram4en",
                    description: Some(
                        "AXISRAM4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram5en",
                    description: Some(
                        "AXISRAM5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram6en",
                    description: Some(
                        "AXISRAM6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram1en",
                    description: Some(
                        "AHBSRAM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram2en",
                    description: Some(
                        "AHBSRAM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkpsramen",
                    description: Some(
                        "BKPSRAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram1en",
                    description: Some(
                        "AXISRAM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram2en",
                    description: Some(
                        "AXISRAM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flexramen",
                    description: Some(
                        "FLEXRAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheramen",
                    description: Some(
                        "NPUCACHERAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencramen",
                    description: Some(
                        "VENCRAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bootromen",
                    description: Some(
                        "BOOTROM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Memensr",
            extends: None,
            description: Some(
                "RCC memory enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3ens",
                    description: Some(
                        "AXISRAM3 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram4ens",
                    description: Some(
                        "AXISRAM4 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram5ens",
                    description: Some(
                        "AXISRAM5 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram6ens",
                    description: Some(
                        "AXISRAM6 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram1ens",
                    description: Some(
                        "AHBSRAM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram2ens",
                    description: Some(
                        "AHBSRAM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkpsramens",
                    description: Some(
                        "BKPSRAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram1ens",
                    description: Some(
                        "AXISRAM1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram2ens",
                    description: Some(
                        "AXISRAM2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flexramens",
                    description: Some(
                        "FLEXRAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheramens",
                    description: Some(
                        "NPUCACHERAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencramens",
                    description: Some(
                        "VENCRAM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bootromens",
                    description: Some(
                        "BOOTROM enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Memlpencr",
            extends: None,
            description: Some(
                "RCC memory Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3lpenc",
                    description: Some(
                        "AXISRAM3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram4lpenc",
                    description: Some(
                        "AXISRAM4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram5lpenc",
                    description: Some(
                        "AXISRAM5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram6lpenc",
                    description: Some(
                        "AXISRAM6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram1lpenc",
                    description: Some(
                        "AHBSRAM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram2lpenc",
                    description: Some(
                        "AHBSRAM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkpsramlpenc",
                    description: Some(
                        "BKPSRAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram1lpenc",
                    description: Some(
                        "AXISRAM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram2lpenc",
                    description: Some(
                        "AXISRAM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flexramlpenc",
                    description: Some(
                        "FLEXRAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheramlpenc",
                    description: Some(
                        "NPUCACHERAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencramlpenc",
                    description: Some(
                        "VENCRAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bootromlpenc",
                    description: Some(
                        "BOOTROM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Memlpenr",
            extends: None,
            description: Some(
                "RCC memory Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3lpen",
                    description: Some(
                        "AXISRAM3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram4lpen",
                    description: Some(
                        "AXISRAM4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram5lpen",
                    description: Some(
                        "AXISRAM5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram6lpen",
                    description: Some(
                        "AXISRAM6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram1lpen",
                    description: Some(
                        "AHBSRAM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram2lpen",
                    description: Some(
                        "AHBSRAM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkpsramlpen",
                    description: Some(
                        "BKPSRAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram1lpen",
                    description: Some(
                        "AXISRAM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram2lpen",
                    description: Some(
                        "AXISRAM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flexramlpen",
                    description: Some(
                        "FLEXRAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheramlpen",
                    description: Some(
                        "NPUCACHERAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencramlpen",
                    description: Some(
                        "VENCRAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bootromlpen",
                    description: Some(
                        "BOOTROM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Memlpensr",
            extends: None,
            description: Some(
                "RCC memory sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3lpens",
                    description: Some(
                        "AXISRAM3 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram4lpens",
                    description: Some(
                        "AXISRAM4 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram5lpens",
                    description: Some(
                        "AXISRAM5 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram6lpens",
                    description: Some(
                        "AXISRAM6 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram1lpens",
                    description: Some(
                        "AHBSRAM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram2lpens",
                    description: Some(
                        "AHBSRAM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkpsramlpens",
                    description: Some(
                        "BKPSRAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram1lpens",
                    description: Some(
                        "AXISRAM1 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram2lpens",
                    description: Some(
                        "AXISRAM2 sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flexramlpens",
                    description: Some(
                        "FLEXRAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheramlpens",
                    description: Some(
                        "NPUCACHERAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencramlpens",
                    description: Some(
                        "VENCRAM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bootromlpens",
                    description: Some(
                        "BOOTROM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Memrstcr",
            extends: None,
            description: Some(
                "RCC memory reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3rstc",
                    description: Some(
                        "AXISRAM3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram4rstc",
                    description: Some(
                        "AXISRAM4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram5rstc",
                    description: Some(
                        "AXISRAM5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram6rstc",
                    description: Some(
                        "AXISRAM6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram1rstc",
                    description: Some(
                        "AHBSRAM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram2rstc",
                    description: Some(
                        "AHBSRAM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram1rstc",
                    description: Some(
                        "AXISRAM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram2rstc",
                    description: Some(
                        "AXISRAM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flexramrstc",
                    description: Some(
                        "FLEXRAM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheramrstc",
                    description: Some(
                        "NPUCACHERAM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencramrstc",
                    description: Some(
                        "VENCRAM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bootromrstc",
                    description: Some(
                        "BOOTROM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Memrstr",
            extends: None,
            description: Some(
                "RCC memories reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3rst",
                    description: Some(
                        "AXISRAM3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram4rst",
                    description: Some(
                        "AXISRAM4reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram5rst",
                    description: Some(
                        "AXISRAM5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram6rst",
                    description: Some(
                        "AXISRAM6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram1rst",
                    description: Some(
                        "AHBSRAM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram2rst",
                    description: Some(
                        "AHBSRAM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram1rst",
                    description: Some(
                        "AXISRAM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram2rst",
                    description: Some(
                        "AXISRAM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flexramrst",
                    description: Some(
                        "FLEXRAM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheramrst",
                    description: Some(
                        "NPUCACHERAM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencramrst",
                    description: Some(
                        "VENCRAM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bootromrst",
                    description: Some(
                        "BOOTROM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Memrstsr",
            extends: None,
            description: Some(
                "RCC memory reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3rsts",
                    description: Some(
                        "AXISRAM3 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram4rsts",
                    description: Some(
                        "AXISRAM4 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram5rsts",
                    description: Some(
                        "AXISRAM5 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram6rsts",
                    description: Some(
                        "AXISRAM6 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram1rsts",
                    description: Some(
                        "AHBSRAM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram2rsts",
                    description: Some(
                        "AHBSRAM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram1rsts",
                    description: Some(
                        "AXISRAM1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram2rsts",
                    description: Some(
                        "AXISRAM2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flexramrsts",
                    description: Some(
                        "FLEXRAM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacheramrsts",
                    description: Some(
                        "NPUCACHERAM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencramrsts",
                    description: Some(
                        "VENCRAM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bootromrsts",
                    description: Some(
                        "BOOTROM reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Miscencr",
            extends: None,
            description: Some(
                "RCC miscellaneous enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dbgenc",
                    description: Some(
                        "DBG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mco1enc",
                    description: Some(
                        "MCO1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mco2enc",
                    description: Some(
                        "MCO2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphycompenc",
                    description: Some(
                        "XSPIPHYCOMP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "perenc",
                    description: Some(
                        "PER enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Miscenr",
            extends: None,
            description: Some(
                "RCC miscellaneous configuration enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dbgen",
                    description: Some(
                        "DBG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mco1en",
                    description: Some(
                        "MCO1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mco2en",
                    description: Some(
                        "MCO2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphycompen",
                    description: Some(
                        "XSPIPHYCOMP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "peren",
                    description: Some(
                        "PER enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Miscensr",
            extends: None,
            description: Some(
                "RCC miscellaneous enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dbgens",
                    description: Some(
                        "DBG enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mco1ens",
                    description: Some(
                        "MCO1 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mco2ens",
                    description: Some(
                        "MCO2 enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphycompens",
                    description: Some(
                        "XSPIPHYCOMP enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "perens",
                    description: Some(
                        "PER enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Misclpencr",
            extends: None,
            description: Some(
                "RCC miscellaneous Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dbglpenc",
                    description: Some(
                        "DBG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphycomplpenc",
                    description: Some(
                        "XSPIPHYCOMP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "perlpenc",
                    description: Some(
                        "PER sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Misclpenr",
            extends: None,
            description: Some(
                "RCC miscellaneous configurations Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dbglpen",
                    description: Some(
                        "DBG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphycomplpen",
                    description: Some(
                        "XSPIPHYCOMP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "perlpen",
                    description: Some(
                        "PER sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Misclpensr",
            extends: None,
            description: Some(
                "RCC miscellaneous Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dbglpens",
                    description: Some(
                        "DBG sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphycomplpens",
                    description: Some(
                        "XSPIPHYCOMP sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "perlpens",
                    description: Some(
                        "PER sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Miscrstcr",
            extends: None,
            description: Some(
                "RCC miscellaneous reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dbgrstc",
                    description: Some(
                        "DBG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphy1rstc",
                    description: Some(
                        "XSPIPHY1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphy2rstc",
                    description: Some(
                        "XSPIPHY2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1dllrstc",
                    description: Some(
                        "SDMMC1DLL reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2dllrstc",
                    description: Some(
                        "SDMMC2DLL reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Miscrstr",
            extends: None,
            description: Some(
                "RCC miscellaneous configurations reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dbgrst",
                    description: Some(
                        "DBG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphy1rst",
                    description: Some(
                        "XSPIPHY1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphy2rst",
                    description: Some(
                        "XSPIPHY2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1dllrst",
                    description: Some(
                        "SDMMC1DLL reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2dllrst",
                    description: Some(
                        "SDMMC2DLL reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Miscrstsr",
            extends: None,
            description: Some(
                "RCC miscellaneous reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dbgrsts",
                    description: Some(
                        "DBG reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphy1rsts",
                    description: Some(
                        "XSPIPHY1 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xspiphy2rsts",
                    description: Some(
                        "XSPIPHY2 reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc1dllrsts",
                    description: Some(
                        "SDMMC1DLL reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdmmc2dllrsts",
                    description: Some(
                        "SDMMC2DLL reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Msicfgr",
            extends: None,
            description: Some(
                "RCC MSI configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "msifreqsel",
                    description: Some(
                        "MSI oscillator frequency select.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Msifreqsel",
                    ),
                },
                Field {
                    name: "msitrim",
                    description: Some(
                        "MSI clock trimming.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "msical",
                    description: Some(
                        "MSI clock calibration.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 8,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pll1cfgr1",
            extends: None,
            description: Some(
                "RCC PLL1 configuration register 1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "plldivn",
                    description: Some(
                        "PLL1 Integer part for the VCO multiplication factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 12,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "plldivm",
                    description: Some(
                        "PLL1 reference input clock divide frequency ratio.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 6,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Plldivm",
                    ),
                },
                Field {
                    name: "pllbyp",
                    description: Some(
                        "PLL1 bypass.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllbyp",
                    ),
                },
                Field {
                    name: "pllsel",
                    description: Some(
                        "PLL1 source selection of the reference clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Pll1cfgr2",
            extends: None,
            description: Some(
                "RCC PLL1 configuration register 2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "plldivnfrac",
                    description: Some(
                        "PLL1 Fractional part of the VCO multiplication factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 24,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pll1cfgr3",
            extends: None,
            description: Some(
                "RCC PLL1 configuration register 3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllmodssrst",
                    description: Some(
                        "PLL1 Modulation Spread Spectrum reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "plldacen",
                    description: Some(
                        "PLL1 noise canceling DAC enable in fractional mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodssdis",
                    description: Some(
                        "PLL1 Modulation Spread-Spectrum Disable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllmodssdis",
                    ),
                },
                Field {
                    name: "pllmoddsen",
                    description: Some(
                        "PLL1 Modulation Spread-Spectrum (and Fractional Divide) enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodsprdw",
                    description: Some(
                        "PLL1 Modulation Spread-Spectrum Down.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllmodsprdw",
                    ),
                },
                Field {
                    name: "pllmoddiv",
                    description: Some(
                        "PLL1 Modulation Division frequency adjustment.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 4,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodspr",
                    description: Some(
                        "PLL1 Modulation Spread depth adjustment.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 5,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllpdiv2",
                    description: Some(
                        "PLL1 VCO frequency divider level 2.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllpdiv",
                    ),
                },
                Field {
                    name: "pllpdiv1",
                    description: Some(
                        "PLL1 VCO frequency divider level 1.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllpdiv",
                    ),
                },
                Field {
                    name: "pllpdiven",
                    description: Some(
                        "PLL1 post divider POSTDIV1, POSTDIV2, and PLL clock output enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pll2cfgr1",
            extends: None,
            description: Some(
                "RCC PLL2 configuration register 1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "plldivn",
                    description: Some(
                        "PLL2 Integer part for the VCO multiplication factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 12,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "plldivm",
                    description: Some(
                        "PLL2 reference input clock divide frequency ratio.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 6,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Plldivm",
                    ),
                },
                Field {
                    name: "pllbyp",
                    description: Some(
                        "PLL2 bypass.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllbyp",
                    ),
                },
                Field {
                    name: "pllsel",
                    description: Some(
                        "PLL2 source selection of the reference clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Pll2cfgr2",
            extends: None,
            description: Some(
                "RCC PLL2 configuration register 2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "plldivnfrac",
                    description: Some(
                        "PLL2 Fractional part of the VCO multiplication factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 24,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pll2cfgr3",
            extends: None,
            description: Some(
                "RCC PLL2 configuration register 3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllmodssrst",
                    description: Some(
                        "PLL2 Modulation Spread Spectrum reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "plldacen",
                    description: Some(
                        "PLL2 noise canceling DAC enable in fractional mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodssdis",
                    description: Some(
                        "PLL2 Modulation Spread-Spectrum Disable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllmodssdis",
                    ),
                },
                Field {
                    name: "pllmoddsen",
                    description: Some(
                        "PLL2 Modulation Spread-Spectrum (and Fractional Divide) enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodsprdw",
                    description: Some(
                        "PLL2 Modulation Down Spread.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllmodsprdw",
                    ),
                },
                Field {
                    name: "pllmoddiv",
                    description: Some(
                        "PLL2 Modulation Division frequency adjustment.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 4,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodspr",
                    description: Some(
                        "PLL2 Modulation Spread depth adjustment.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 5,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllpdiv2",
                    description: Some(
                        "PLL2 VCO frequency divider level 2.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllpdiv",
                    ),
                },
                Field {
                    name: "pllpdiv1",
                    description: Some(
                        "PLL2 VCO frequency divider level 1.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllpdiv",
                    ),
                },
                Field {
                    name: "pllpdiven",
                    description: Some(
                        "PLL2 post divider POSTDIV1, POSTDIV2, and PLL clock output enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pll3cfgr1",
            extends: None,
            description: Some(
                "RCC PLL3 configuration register 1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "plldivn",
                    description: Some(
                        "PLL3 Integer part for the VCO multiplication factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 12,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "plldivm",
                    description: Some(
                        "PLL3 reference input clock divide frequency ratio.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 6,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Plldivm",
                    ),
                },
                Field {
                    name: "pllbyp",
                    description: Some(
                        "PLL3 bypass.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllbyp",
                    ),
                },
                Field {
                    name: "pllsel",
                    description: Some(
                        "PLL3 source selection of the reference clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Pll3cfgr2",
            extends: None,
            description: Some(
                "RCC PLL3 configuration register 2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "plldivnfrac",
                    description: Some(
                        "PLL3 Fractional part of the VCO multiplication factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 24,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pll3cfgr3",
            extends: None,
            description: Some(
                "RCC PLL3 configuration register 3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllmodssrst",
                    description: Some(
                        "PLL3 Modulation Spread Spectrum reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "plldacen",
                    description: Some(
                        "PLL3 noise canceling DAC enable in fractional mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodssdis",
                    description: Some(
                        "PLL3 Modulation Spread-Spectrum Disable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllmodssdis",
                    ),
                },
                Field {
                    name: "pllmoddsen",
                    description: Some(
                        "PLL3 Modulation Spread-Spectrum (and Fractional Divide) enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodsprdw",
                    description: Some(
                        "PLL3 Modulation Down Spread.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllmodsprdw",
                    ),
                },
                Field {
                    name: "pllmoddiv",
                    description: Some(
                        "PLL3 Modulation Division frequency adjustment.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 4,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodspr",
                    description: Some(
                        "PLL3 Modulation Spread depth adjustment.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 5,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllpdiv2",
                    description: Some(
                        "PLL3 VCO frequency divider level 2.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllpdiv",
                    ),
                },
                Field {
                    name: "pllpdiv1",
                    description: Some(
                        "PLL3 VCO frequency divider level 1.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllpdiv",
                    ),
                },
                Field {
                    name: "pllpdiven",
                    description: Some(
                        "PLL3 post divider POSTDIV1, POSTDIV2, and PLL clock output enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pll4cfgr1",
            extends: None,
            description: Some(
                "RCC PLL4 configuration register 1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "plldivn",
                    description: Some(
                        "PLL4 Integer part for the VCO multiplication factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 12,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "plldivm",
                    description: Some(
                        "PLL4 reference input clock divide frequency ratio.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 20,
                        },
                    ),
                    bit_size: 6,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Plldivm",
                    ),
                },
                Field {
                    name: "pllbyp",
                    description: Some(
                        "PLL4 bypass.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllbyp",
                    ),
                },
                Field {
                    name: "pllsel",
                    description: Some(
                        "PLL4 source selection of the reference clock.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllsel",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Pll4cfgr2",
            extends: None,
            description: Some(
                "RCC PLL4 configuration register 2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "plldivnfrac",
                    description: Some(
                        "PLL4 Fractional part of the VCO multiplication factor.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 24,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pll4cfgr3",
            extends: None,
            description: Some(
                "RCC PLL4 configuration register 3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllmodssrst",
                    description: Some(
                        "PLL4 Modulation Spread Spectrum reset.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "plldacen",
                    description: Some(
                        "PLL4 noise canceling DAC enable in fractional mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodssdis",
                    description: Some(
                        "PLL4 Modulation Spread-Spectrum Disable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllmodssdis",
                    ),
                },
                Field {
                    name: "pllmoddsen",
                    description: Some(
                        "PLL4 Modulation Spread-Spectrum (and Fractional Divide) enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodsprdw",
                    description: Some(
                        "PLL4 Modulation Down Spread.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllmodsprdw",
                    ),
                },
                Field {
                    name: "pllmoddiv",
                    description: Some(
                        "PLL4 Modulation Division frequency adjustment.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 4,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllmodspr",
                    description: Some(
                        "PLL4 Modulation Spread depth adjustment.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 5,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
                Field {
                    name: "pllpdiv2",
                    description: Some(
                        "PLL4 VCO frequency divider level 2.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllpdiv",
                    ),
                },
                Field {
                    name: "pllpdiv1",
                    description: Some(
                        "PLL4 VCO frequency divider level 1.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 27,
                        },
                    ),
                    bit_size: 3,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllpdiv",
                    ),
                },
                Field {
                    name: "pllpdiven",
                    description: Some(
                        "PLL4 post divider POSTDIV1, POSTDIV2, and PLL clock output enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 1,
                                stride: 0,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Privcfgcr0",
            extends: None,
            description: Some(
                "RCC oscillator privilege configuration register0.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsipvc",
                    description: Some(
                        "Defines the privilege protection of the LSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsepvc",
                    description: Some(
                        "Defines the privilege protection of the LSE configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "msipvc",
                    description: Some(
                        "Defines the privilege protection of the MSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsipvc",
                    description: Some(
                        "Defines the privilege protection of the HSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsepvc",
                    description: Some(
                        "Defines the privilege protection of the HSE configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Privcfgcr1",
            extends: None,
            description: Some(
                "RCC PLL privilege configuration register1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllpvc",
                    description: Some(
                        "Defines the privilege protection of the PLL1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Privcfgcr2",
            extends: None,
            description: Some(
                "RCC divider privilege configuration register2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1pvc",
                    description: Some(
                        "Defines the privilege protection of the IC1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic2pvc",
                    description: Some(
                        "Defines the privilege protection of the IC2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic3pvc",
                    description: Some(
                        "Defines the privilege protection of the IC3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic4pvc",
                    description: Some(
                        "Defines the privilege protection of the IC4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic5pvc",
                    description: Some(
                        "Defines the privilege protection of the IC5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic6pvc",
                    description: Some(
                        "Defines the privilege protection of the IC6 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic7pvc",
                    description: Some(
                        "Defines the privilege protection of the IC7 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic8pvc",
                    description: Some(
                        "Defines the privilege protection of the IC8 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic9pvc",
                    description: Some(
                        "Defines the privilege protection of the IC9 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic10pvc",
                    description: Some(
                        "Defines the privilege protection of the IC10 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic11pvc",
                    description: Some(
                        "Defines the privilege protection of the IC11 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic12pvc",
                    description: Some(
                        "Defines the privilege protection of the IC12 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic13pvc",
                    description: Some(
                        "Defines the privilege protection of the IC13 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic14pvc",
                    description: Some(
                        "Defines the privilege protection of the IC14 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic15pvc",
                    description: Some(
                        "Defines the privilege protection of the IC15 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic16pvc",
                    description: Some(
                        "Defines the privilege protection of the IC16 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic17pvc",
                    description: Some(
                        "Defines the privilege protection of the IC17 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic18pvc",
                    description: Some(
                        "Defines the privilege protection of the IC18 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic19pvc",
                    description: Some(
                        "Defines the privilege protection of the IC19 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic20pvc",
                    description: Some(
                        "Defines the privilege protection of the IC20 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Privcfgcr3",
            extends: None,
            description: Some(
                "RCC system privilege configuration register3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "modpvc",
                    description: Some(
                        "Defines the privilege protection of the MOD configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syspvc",
                    description: Some(
                        "Defines the privilege protection of the SYS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "buspvc",
                    description: Some(
                        "Defines the privilege protection of the BUS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "perpvc",
                    description: Some(
                        "Defines the privilege protection of the PER configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "intpvc",
                    description: Some(
                        "Defines the privilege protection of the INT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rstpvc",
                    description: Some(
                        "Defines the privilege protection of the RST configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dftpvc",
                    description: Some(
                        "Defines the privilege protection of the DFT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Privcfgcr4",
            extends: None,
            description: Some(
                "RCC privilege configuration register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknpvc",
                    description: Some(
                        "Defines the privilege protection of the ACLKN configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "aclkncpvc",
                    description: Some(
                        "Defines the privilege protection of the ACLKNC configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmpvc",
                    description: Some(
                        "Defines the privilege protection of the AHBM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1pvc",
                    description: Some(
                        "Defines the privilege protection of the AHB1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2pvc",
                    description: Some(
                        "Defines the privilege protection of the AHB2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3pvc",
                    description: Some(
                        "Defines the privilege protection of the AHB3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4pvc",
                    description: Some(
                        "Defines the privilege protection of the AHB4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5pvc",
                    description: Some(
                        "Defines the privilege protection of the AHB5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1pvc",
                    description: Some(
                        "Defines the privilege protection of the APB1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2pvc",
                    description: Some(
                        "Defines the privilege protection of the APB2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3pvc",
                    description: Some(
                        "Defines the privilege protection of the APB3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4pvc",
                    description: Some(
                        "Defines the privilege protection of the APB4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5pvc",
                    description: Some(
                        "Defines the privilege protection of the APB5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nocpvc",
                    description: Some(
                        "Defines the privilege protection of the NOC configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Privcfgr0",
            extends: None,
            description: Some(
                "RCC oscillator privilege configuration register0.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsipv",
                    description: Some(
                        "Defines the privilege protection of the LSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsipv",
                    ),
                },
                Field {
                    name: "lsepv",
                    description: Some(
                        "Defines the privilege protection of the LSE oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsepv",
                    ),
                },
                Field {
                    name: "msipv",
                    description: Some(
                        "Defines the privilege protection of the MSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Msipv",
                    ),
                },
                Field {
                    name: "hsipv",
                    description: Some(
                        "Defines the privilege protection of the HSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsipv",
                    ),
                },
                Field {
                    name: "hsepv",
                    description: Some(
                        "Defines the privilege protection of the HSE oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsepv",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Privcfgr1",
            extends: None,
            description: Some(
                "RCC PLL privilege configuration register1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllpv",
                    description: Some(
                        "Defines the privilege protection of the PLL1 PLL configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllpv",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Privcfgr2",
            extends: None,
            description: Some(
                "RCC divider privilege configuration register2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1pv",
                    description: Some(
                        "Defines the privilege protection of the IC1 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic2pv",
                    description: Some(
                        "Defines the privilege protection of the IC2 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic3pv",
                    description: Some(
                        "Defines the privilege protection of the IC3 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic4pv",
                    description: Some(
                        "Defines the privilege protection of the IC4 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic5pv",
                    description: Some(
                        "Defines the privilege protection of the IC5 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic6pv",
                    description: Some(
                        "Defines the privilege protection of the IC6 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic7pv",
                    description: Some(
                        "Defines the privilege protection of the IC7 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic8pv",
                    description: Some(
                        "Defines the privilege protection of the IC8 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic9pv",
                    description: Some(
                        "Defines the privilege protection of the IC9 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic10pv",
                    description: Some(
                        "Defines the privilege protection of the IC10 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic11pv",
                    description: Some(
                        "Defines the privilege protection of the IC11 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic12pv",
                    description: Some(
                        "Defines the privilege protection of the IC12 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic13pv",
                    description: Some(
                        "Defines the privilege protection of the IC13 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic14pv",
                    description: Some(
                        "Defines the privilege protection of the IC14 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic15pv",
                    description: Some(
                        "Defines the privilege protection of the IC15 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic16pv",
                    description: Some(
                        "Defines the privilege protection of the IC16 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic17pv",
                    description: Some(
                        "Defines the privilege protection of the IC17 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic18pv",
                    description: Some(
                        "Defines the privilege protection of the IC18 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic19pv",
                    description: Some(
                        "Defines the privilege protection of the IC19 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
                Field {
                    name: "ic20pv",
                    description: Some(
                        "Defines the privilege protection of the IC20 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpv",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Privcfgr3",
            extends: None,
            description: Some(
                "RCC system privilege configuration register3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "modpv",
                    description: Some(
                        "Defines the privilege protection of the MOD system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Modpv",
                    ),
                },
                Field {
                    name: "syspv",
                    description: Some(
                        "Defines the privilege protection of the SYS system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Syspv",
                    ),
                },
                Field {
                    name: "buspv",
                    description: Some(
                        "Defines the privilege protection of the BUS system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Buspv",
                    ),
                },
                Field {
                    name: "perpv",
                    description: Some(
                        "Defines the privilege protection of the PER system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Perpv",
                    ),
                },
                Field {
                    name: "intpv",
                    description: Some(
                        "Defines the privilege protection of the INT system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Intpv",
                    ),
                },
                Field {
                    name: "rstpv",
                    description: Some(
                        "Defines the privilege protection of the RST system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Rstpv",
                    ),
                },
                Field {
                    name: "dftpv",
                    description: Some(
                        "Defines the privilege protection of the DFT system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Dftpv",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Privcfgr4",
            extends: None,
            description: Some(
                "RCC bus privilege configuration register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknpv",
                    description: Some(
                        "Defines the privilege protection of the ACLKN bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Aclknpv",
                    ),
                },
                Field {
                    name: "aclkncpv",
                    description: Some(
                        "Defines the privilege protection of the ACLKNC bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Aclkncpv",
                    ),
                },
                Field {
                    name: "ahbmpv",
                    description: Some(
                        "Defines the privilege protection of the AHBM bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbmpv",
                    ),
                },
                Field {
                    name: "ahb1pv",
                    description: Some(
                        "Defines the privilege protection of the AHB1 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbpv",
                    ),
                },
                Field {
                    name: "ahb2pv",
                    description: Some(
                        "Defines the privilege protection of the AHB2 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbpv",
                    ),
                },
                Field {
                    name: "ahb3pv",
                    description: Some(
                        "Defines the privilege protection of the AHB3 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbpv",
                    ),
                },
                Field {
                    name: "ahb4pv",
                    description: Some(
                        "Defines the privilege protection of the AHB4 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbpv",
                    ),
                },
                Field {
                    name: "ahb5pv",
                    description: Some(
                        "Defines the privilege protection of the AHB5 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbpv",
                    ),
                },
                Field {
                    name: "apb1pv",
                    description: Some(
                        "Defines the privilege protection of the APB1 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbpv",
                    ),
                },
                Field {
                    name: "apb2pv",
                    description: Some(
                        "Defines the privilege protection of the APB2 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbpv",
                    ),
                },
                Field {
                    name: "apb3pv",
                    description: Some(
                        "Defines the privilege protection of the APB3 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbpv",
                    ),
                },
                Field {
                    name: "apb4pv",
                    description: Some(
                        "Defines the privilege protection of the APB4 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbpv",
                    ),
                },
                Field {
                    name: "apb5pv",
                    description: Some(
                        "Defines the privilege protection of the APB5 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbpv",
                    ),
                },
                Field {
                    name: "nocpv",
                    description: Some(
                        "Defines the privilege protection of the NOC bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Nocpv",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Privcfgsr0",
            extends: None,
            description: Some(
                "RCC oscillator privilege configuration register0.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsipvs",
                    description: Some(
                        "Defines the privilege protection of the LSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsepvs",
                    description: Some(
                        "Defines the privilege protection of the LSE configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "msipvs",
                    description: Some(
                        "Defines the privilege protection of the MSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsipvs",
                    description: Some(
                        "Defines the privilege protection of the HSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsepvs",
                    description: Some(
                        "Defines the privilege protection of the HSE configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Privcfgsr1",
            extends: None,
            description: Some(
                "RCC PLL privilege configuration register1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllpvs",
                    description: Some(
                        "Defines the privilege protection of the PLL1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Privcfgsr2",
            extends: None,
            description: Some(
                "RCC divider privilege configuration register2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1pvs",
                    description: Some(
                        "Defines the privilege protection of the IC1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic2pvs",
                    description: Some(
                        "Defines the privilege protection of the IC2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic3pvs",
                    description: Some(
                        "Defines the privilege protection of the IC3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic4pvs",
                    description: Some(
                        "Defines the privilege protection of the IC4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic5pvs",
                    description: Some(
                        "Defines the privilege protection of the IC5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic6pvs",
                    description: Some(
                        "Defines the privilege protection of the IC6 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic7pvs",
                    description: Some(
                        "Defines the privilege protection of the IC7 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic8pvs",
                    description: Some(
                        "Defines the privilege protection of the IC8 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic9pvs",
                    description: Some(
                        "Defines the privilege protection of the IC9 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic10pvs",
                    description: Some(
                        "Defines the privilege protection of the IC10 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic11pvs",
                    description: Some(
                        "Defines the privilege protection of the IC11 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic12pvs",
                    description: Some(
                        "Defines the privilege protection of the IC12 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic13pvs",
                    description: Some(
                        "Defines the privilege protection of the IC13 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic14pvs",
                    description: Some(
                        "Defines the privilege protection of the IC14 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic15pvs",
                    description: Some(
                        "Defines the privilege protection of the IC15 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic16pvs",
                    description: Some(
                        "Defines the privilege protection of the IC16 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic17pvs",
                    description: Some(
                        "Defines the privilege protection of the IC17 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic18pvs",
                    description: Some(
                        "Defines the privilege protection of the IC18 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic19pvs",
                    description: Some(
                        "Defines the privilege protection of the IC19 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic20pvs",
                    description: Some(
                        "Defines the privilege protection of the IC20 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Privcfgsr3",
            extends: None,
            description: Some(
                "RCC system privilege configuration register3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "modpvs",
                    description: Some(
                        "Defines the privilege protection of the MOD configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syspvs",
                    description: Some(
                        "Defines the privilege protection of the SYS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "buspvs",
                    description: Some(
                        "Defines the privilege protection of the BUS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "perpvs",
                    description: Some(
                        "Defines the privilege protection of the PER configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "intpvs",
                    description: Some(
                        "Defines the privilege protection of the INT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rstpvs",
                    description: Some(
                        "Defines the privilege protection of the RST configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dftpvs",
                    description: Some(
                        "Defines the privilege protection of the DFT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Privcfgsr4",
            extends: None,
            description: Some(
                "RCC privilege configuration register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknpvs",
                    description: Some(
                        "Defines the privilege protection of the ACLKN configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "aclkncpvs",
                    description: Some(
                        "Defines the privilege protection of the ACLKNC configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmpvs",
                    description: Some(
                        "Defines the privilege protection of the AHBM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1pvs",
                    description: Some(
                        "Defines the privilege protection of the AHB1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2pvs",
                    description: Some(
                        "Defines the privilege protection of the AHB2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3pvs",
                    description: Some(
                        "Defines the privilege protection of the AHB3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4pvs",
                    description: Some(
                        "Defines the privilege protection of the AHB4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5pvs",
                    description: Some(
                        "Defines the privilege protection of the AHB5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1pvs",
                    description: Some(
                        "Defines the privilege protection of the APB1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2pvs",
                    description: Some(
                        "Defines the privilege protection of the APB2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3pvs",
                    description: Some(
                        "Defines the privilege protection of the APB3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4pvs",
                    description: Some(
                        "Defines the privilege protection of the APB4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5pvs",
                    description: Some(
                        "Defines the privilege protection of the APB5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nocpvs",
                    description: Some(
                        "Defines the privilege protection of the NOC configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgcr0",
            extends: None,
            description: Some(
                "RCC oscillator public configuration register0.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsipubc",
                    description: Some(
                        "Defines the public protection of the LSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsepubc",
                    description: Some(
                        "Defines the public protection of the LSE configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "msipubc",
                    description: Some(
                        "Defines the public protection of the MSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsipubc",
                    description: Some(
                        "Defines the public protection of the HSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsepubc",
                    description: Some(
                        "Defines the public protection of the HSE configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgcr1",
            extends: None,
            description: Some(
                "RCC PLL public configuration register1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllpubc",
                    description: Some(
                        "Defines the public protection of the PLL1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgcr2",
            extends: None,
            description: Some(
                "RCC divider public configuration register2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1pubc",
                    description: Some(
                        "Defines the public protection of the IC1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic2pubc",
                    description: Some(
                        "Defines the public protection of the IC2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic3pubc",
                    description: Some(
                        "Defines the public protection of the IC3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic4pubc",
                    description: Some(
                        "Defines the public protection of the IC4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic5pubc",
                    description: Some(
                        "Defines the public protection of the IC5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic6pubc",
                    description: Some(
                        "Defines the public protection of the IC6 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic7pubc",
                    description: Some(
                        "Defines the public protection of the IC7 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic8pubc",
                    description: Some(
                        "Defines the public protection of the IC8 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic9pubc",
                    description: Some(
                        "Defines the public protection of the IC9 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic10pubc",
                    description: Some(
                        "Defines the public protection of the IC10 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic11pubc",
                    description: Some(
                        "Defines the public protection of the IC11 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic12pubc",
                    description: Some(
                        "Defines the public protection of the IC12 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic13pubc",
                    description: Some(
                        "Defines the public protection of the IC13 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic14pubc",
                    description: Some(
                        "Defines the public protection of the IC14 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic15pubc",
                    description: Some(
                        "Defines the public protection of the IC15 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic16pubc",
                    description: Some(
                        "Defines the public protection of the IC16 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic17pubc",
                    description: Some(
                        "Defines the public protection of the IC17 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic18pubc",
                    description: Some(
                        "Defines the public protection of the IC18 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic19pubc",
                    description: Some(
                        "Defines the public protection of the IC19 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic20pubc",
                    description: Some(
                        "Defines the public protection of the IC20 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgcr3",
            extends: None,
            description: Some(
                "RCC system public configuration register3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "modpubc",
                    description: Some(
                        "Defines the public protection of the MOD configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syspubc",
                    description: Some(
                        "Defines the public protection of the SYS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "buspubc",
                    description: Some(
                        "Defines the public protection of the BUS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "perpubc",
                    description: Some(
                        "Defines the public protection of the PER configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "intpubc",
                    description: Some(
                        "Defines the public protection of the INT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rstpubc",
                    description: Some(
                        "Defines the public protection of the RST configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dftpubc",
                    description: Some(
                        "Defines the public protection of the DFT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgcr4",
            extends: None,
            description: Some(
                "RCC public configuration register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknpubc",
                    description: Some(
                        "Defines the public protection of the ACLKN configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "aclkncpubc",
                    description: Some(
                        "Defines the public protection of the ACLKNC configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmpubc",
                    description: Some(
                        "Defines the public protection of the AHBM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1pubc",
                    description: Some(
                        "Defines the public protection of the AHB1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2pubc",
                    description: Some(
                        "Defines the public protection of the AHB2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3pubc",
                    description: Some(
                        "Defines the public protection of the AHB3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4pubc",
                    description: Some(
                        "Defines the public protection of the AHB4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5pubc",
                    description: Some(
                        "Defines the public protection of the AHB5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1pubc",
                    description: Some(
                        "Defines the public protection of the APB1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2pubc",
                    description: Some(
                        "Defines the public protection of the APB2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3pubc",
                    description: Some(
                        "Defines the public protection of the APB3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4pubc",
                    description: Some(
                        "Defines the public protection of the APB4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5pubc",
                    description: Some(
                        "Defines the public protection of the APB5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nocpubc",
                    description: Some(
                        "Defines the public protection of the NOC configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgcr5",
            extends: None,
            description: Some(
                "RCC public configuration register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3pubc",
                    description: Some(
                        "Defines the public protection of the AXISRAM3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram4pubc",
                    description: Some(
                        "Defines the public protection of the AXISRAM4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram5pubc",
                    description: Some(
                        "Defines the public protection of the AXISRAM5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram6pubc",
                    description: Some(
                        "Defines the public protection of the AXISRAM6 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram1pubc",
                    description: Some(
                        "Defines the public protection of the AHBSRAM1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram2pubc",
                    description: Some(
                        "Defines the public protection of the AHBSRAM2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkpsrampubc",
                    description: Some(
                        "Defines the public protection of the BKPSRAM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram1pubc",
                    description: Some(
                        "Defines the public protection of the AXISRAM1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram2pubc",
                    description: Some(
                        "Defines the public protection of the AXISRAM2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flexrampubc",
                    description: Some(
                        "Defines the public protection of the FLEXRAM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cacheaxirampubc",
                    description: Some(
                        "Defines the public protection of the NPUCACHERAM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencrampubc",
                    description: Some(
                        "Defines the public protection of the VENCRAM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgr0",
            extends: None,
            description: Some(
                "RCC oscillator public configuration register0.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsipub",
                    description: Some(
                        "Defines the public protection of the LSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsipub",
                    ),
                },
                Field {
                    name: "lsepub",
                    description: Some(
                        "Defines the public protection of the LSE oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsepub",
                    ),
                },
                Field {
                    name: "msipub",
                    description: Some(
                        "Defines the public protection of the MSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Msipub",
                    ),
                },
                Field {
                    name: "hsipub",
                    description: Some(
                        "Defines the public protection of the HSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsipub",
                    ),
                },
                Field {
                    name: "hsepub",
                    description: Some(
                        "Defines the public protection of the HSE oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsepub",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Pubcfgr1",
            extends: None,
            description: Some(
                "RCC PLL public configuration register1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllpub",
                    description: Some(
                        "Defines the public protection of the PLL1 PLL configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllpub",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Pubcfgr2",
            extends: None,
            description: Some(
                "RCC divider public configuration register2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1pub",
                    description: Some(
                        "Defines the public protection of the IC1 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic2pub",
                    description: Some(
                        "Defines the public protection of the IC2 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic3pub",
                    description: Some(
                        "Defines the public protection of the IC3 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic4pub",
                    description: Some(
                        "Defines the public protection of the IC4 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic5pub",
                    description: Some(
                        "Defines the public protection of the IC5 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic6pub",
                    description: Some(
                        "Defines the public protection of the IC6 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic7pub",
                    description: Some(
                        "Defines the public protection of the IC7 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic8pub",
                    description: Some(
                        "Defines the public protection of the IC8 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic9pub",
                    description: Some(
                        "Defines the public protection of the IC9 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic10pub",
                    description: Some(
                        "Defines the public protection of the IC10 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic11pub",
                    description: Some(
                        "Defines the public protection of the IC11 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic12pub",
                    description: Some(
                        "Defines the public protection of the IC12 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic13pub",
                    description: Some(
                        "Defines the public protection of the IC13 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic14pub",
                    description: Some(
                        "Defines the public protection of the IC14 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic15pub",
                    description: Some(
                        "Defines the public protection of the IC15 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic16pub",
                    description: Some(
                        "Defines the public protection of the IC16 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic17pub",
                    description: Some(
                        "Defines the public protection of the IC17 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic18pub",
                    description: Some(
                        "Defines the public protection of the IC18 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic19pub",
                    description: Some(
                        "Defines the public protection of the IC19 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
                Field {
                    name: "ic20pub",
                    description: Some(
                        "Defines the public protection of the IC20 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icpub",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Pubcfgr3",
            extends: None,
            description: Some(
                "RCC system public configuration register3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "modpub",
                    description: Some(
                        "Defines the public protection of the MOD system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Modpub",
                    ),
                },
                Field {
                    name: "syspub",
                    description: Some(
                        "Defines the public protection of the SYS system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Syspub",
                    ),
                },
                Field {
                    name: "buspub",
                    description: Some(
                        "Defines the public protection of the BUS system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Buspub",
                    ),
                },
                Field {
                    name: "perpub",
                    description: Some(
                        "Defines the public protection of the PER system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Perpub",
                    ),
                },
                Field {
                    name: "intpub",
                    description: Some(
                        "Defines the public protection of the INT system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Intpub",
                    ),
                },
                Field {
                    name: "rstpub",
                    description: Some(
                        "Defines the public protection of the RST system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Rstpub",
                    ),
                },
                Field {
                    name: "dftpub",
                    description: Some(
                        "Defines the public protection of the DFT system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Dftpub",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Pubcfgr4",
            extends: None,
            description: Some(
                "RCC bus public configuration register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknpub",
                    description: Some(
                        "Defines the public protection of the ACLKN bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Aclknpub",
                    ),
                },
                Field {
                    name: "aclkncpub",
                    description: Some(
                        "Defines the public protection of the ACLKNC bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Aclkncpub",
                    ),
                },
                Field {
                    name: "ahbmpub",
                    description: Some(
                        "Defines the public protection of the AHBM bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbmpub",
                    ),
                },
                Field {
                    name: "ahb1pub",
                    description: Some(
                        "Defines the public protection of the AHB1 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbpub",
                    ),
                },
                Field {
                    name: "ahb2pub",
                    description: Some(
                        "Defines the public protection of the AHB2 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbpub",
                    ),
                },
                Field {
                    name: "ahb3pub",
                    description: Some(
                        "Defines the public protection of the AHB3 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbpub",
                    ),
                },
                Field {
                    name: "ahb4pub",
                    description: Some(
                        "Defines the public protection of the AHB4 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbpub",
                    ),
                },
                Field {
                    name: "ahb5pub",
                    description: Some(
                        "Defines the public protection of the AHB5 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbpub",
                    ),
                },
                Field {
                    name: "apb1pub",
                    description: Some(
                        "Defines the public protection of the APB1 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbpub",
                    ),
                },
                Field {
                    name: "apb2pub",
                    description: Some(
                        "Defines the public protection of the APB2 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbpub",
                    ),
                },
                Field {
                    name: "apb3pub",
                    description: Some(
                        "Defines the public protection of the APB3 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbpub",
                    ),
                },
                Field {
                    name: "apb4pub",
                    description: Some(
                        "Defines the public protection of the APB4 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbpub",
                    ),
                },
                Field {
                    name: "apb5pub",
                    description: Some(
                        "Defines the public protection of the APB5 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbpub",
                    ),
                },
                Field {
                    name: "nocpub",
                    description: Some(
                        "Defines the public protection of the NOC bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Nocpub",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Pubcfgr5",
            extends: None,
            description: Some(
                "RCC bus public configuration register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3pub",
                    description: Some(
                        "Defines the public protection of the AXISRAM3 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Axisrampub",
                    ),
                },
                Field {
                    name: "axisram4pub",
                    description: Some(
                        "Defines the public protection of the AXISRAM4 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Axisrampub",
                    ),
                },
                Field {
                    name: "axisram5pub",
                    description: Some(
                        "Defines the public protection of the AXISRAM5 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Axisrampub",
                    ),
                },
                Field {
                    name: "axisram6pub",
                    description: Some(
                        "Defines the public protection of the AXISRAM6 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Axisrampub",
                    ),
                },
                Field {
                    name: "ahbsram1pub",
                    description: Some(
                        "Defines the public protection of the AHBSRAM1 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbsrampub",
                    ),
                },
                Field {
                    name: "ahbsram2pub",
                    description: Some(
                        "Defines the public protection of the AHBSRAM2 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbsrampub",
                    ),
                },
                Field {
                    name: "bkpsrampub",
                    description: Some(
                        "Defines the public protection of the BKPSRAM bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Bkpsrampub",
                    ),
                },
                Field {
                    name: "axisram1pub",
                    description: Some(
                        "Defines the public protection of the AXISRAM1 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Axisrampub",
                    ),
                },
                Field {
                    name: "axisram2pub",
                    description: Some(
                        "Defines the public protection of the AXISRAM2 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Axisrampub",
                    ),
                },
                Field {
                    name: "flexrampub",
                    description: Some(
                        "Defines the public protection of the FLEXRAM bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Flexrampub",
                    ),
                },
                Field {
                    name: "npucacherampub",
                    description: Some(
                        "Defines the public protection of the NPUCACHERAM bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Npucacherampub",
                    ),
                },
                Field {
                    name: "vencrampub",
                    description: Some(
                        "Defines the public protection of the VENCRAM bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Vencrampub",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Pubcfgsr0",
            extends: None,
            description: Some(
                "RCC oscillator public configuration register0.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsipubs",
                    description: Some(
                        "Defines the public protection of the LSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsepubs",
                    description: Some(
                        "Defines the public protection of the LSE configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "msipubs",
                    description: Some(
                        "Defines the public protection of the MSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsipubs",
                    description: Some(
                        "Defines the public protection of the HSI configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsepubs",
                    description: Some(
                        "Defines the public protection of the HSE configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgsr1",
            extends: None,
            description: Some(
                "RCC PLL public configuration register1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllpubs",
                    description: Some(
                        "Defines the public protection of the PLL1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgsr2",
            extends: None,
            description: Some(
                "RCC divider public configuration register2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1pubs",
                    description: Some(
                        "Defines the public protection of the IC1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic2pubs",
                    description: Some(
                        "Defines the public protection of the IC2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic3pubs",
                    description: Some(
                        "Defines the public protection of the IC3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic4pubs",
                    description: Some(
                        "Defines the public protection of the IC4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic5pubs",
                    description: Some(
                        "Defines the public protection of the IC5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic6pubs",
                    description: Some(
                        "Defines the public protection of the IC6 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic7pubs",
                    description: Some(
                        "Defines the public protection of the IC7 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic8pubs",
                    description: Some(
                        "Defines the public protection of the IC8 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic9pubs",
                    description: Some(
                        "Defines the public protection of the IC9 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic10pubs",
                    description: Some(
                        "Defines the public protection of the IC10 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic11pubs",
                    description: Some(
                        "Defines the public protection of the IC11 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic12pubs",
                    description: Some(
                        "Defines the public protection of the IC12 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic13pubs",
                    description: Some(
                        "Defines the public protection of the IC13 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic14pubs",
                    description: Some(
                        "Defines the public protection of the IC14 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic15pubs",
                    description: Some(
                        "Defines the public protection of the IC15 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic16pubs",
                    description: Some(
                        "Defines the public protection of the IC16 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic17pubs",
                    description: Some(
                        "Defines the public protection of the IC17 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic18pubs",
                    description: Some(
                        "Defines the public protection of the IC18 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic19pubs",
                    description: Some(
                        "Defines the public protection of the IC19 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ic20pubs",
                    description: Some(
                        "Defines the public protection of the IC20 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgsr3",
            extends: None,
            description: Some(
                "RCC system public configuration register3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "modpubs",
                    description: Some(
                        "Defines the public protection of the MOD configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syspubs",
                    description: Some(
                        "Defines the public protection of the SYS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "buspubs",
                    description: Some(
                        "Defines the public protection of the BUS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "perpubs",
                    description: Some(
                        "Defines the public protection of the PER configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "intpubs",
                    description: Some(
                        "Defines the public protection of the INT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rstpubs",
                    description: Some(
                        "Defines the public protection of the RST configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dftpubs",
                    description: Some(
                        "Defines the public protection of the DFT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgsr4",
            extends: None,
            description: Some(
                "RCC public configuration register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknpubs",
                    description: Some(
                        "Defines the public protection of the ACLKN configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "aclkncpubs",
                    description: Some(
                        "Defines the public protection of the ACLKNC configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbmpubs",
                    description: Some(
                        "Defines the public protection of the AHBM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb1pubs",
                    description: Some(
                        "Defines the public protection of the AHB1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb2pubs",
                    description: Some(
                        "Defines the public protection of the AHB2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb3pubs",
                    description: Some(
                        "Defines the public protection of the AHB3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb4pubs",
                    description: Some(
                        "Defines the public protection of the AHB4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahb5pubs",
                    description: Some(
                        "Defines the public protection of the AHB5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb1pubs",
                    description: Some(
                        "Defines the public protection of the APB1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb2pubs",
                    description: Some(
                        "Defines the public protection of the APB2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb3pubs",
                    description: Some(
                        "Defines the public protection of the APB3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb4pubs",
                    description: Some(
                        "Defines the public protection of the APB4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "apb5pubs",
                    description: Some(
                        "Defines the public protection of the APB5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "nocpubs",
                    description: Some(
                        "Defines the public protection of the NOC configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Pubcfgsr5",
            extends: None,
            description: Some(
                "RCC public configuration register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "axisram3pubs",
                    description: Some(
                        "Defines the public protection of the AXISRAM3 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram4pubs",
                    description: Some(
                        "Defines the public protection of the AXISRAM4 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram5pubs",
                    description: Some(
                        "Defines the public protection of the AXISRAM5 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram6pubs",
                    description: Some(
                        "Defines the public protection of the AXISRAM6 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram1pubs",
                    description: Some(
                        "Defines the public protection of the AHBSRAM1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ahbsram2pubs",
                    description: Some(
                        "Defines the public protection of the AHBSRAM2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkpsrampubs",
                    description: Some(
                        "Defines the public protection of the BKPSRAM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram1pubs",
                    description: Some(
                        "Defines the public protection of the AXISRAM1 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "axisram2pubs",
                    description: Some(
                        "Defines the public protection of the AXISRAM2 configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flexrampubs",
                    description: Some(
                        "Defines the public protection of the FLEXRAM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "npucacherampubs",
                    description: Some(
                        "Defines the public protection of the NPUCACHERAM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vencrampubs",
                    description: Some(
                        "Defines the public protection of the VENCRAM configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Rdcr",
            extends: None,
            description: Some(
                "RCC APB5 Sleep enable register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "mrd",
                    description: Some(
                        "BOOTROM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 5,
                    array: None,
                    enumm: Some(
                        "Mrd",
                    ),
                },
                Field {
                    name: "eadly",
                    description: Some(
                        "BOOTROM sleep enable.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 4,
                    array: None,
                    enumm: Some(
                        "Eadly",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Rsr",
            extends: None,
            description: Some(
                "RCC reset register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rmvf",
                    description: Some(
                        "Remove reset flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "RsrRmvf",
                    ),
                },
                Field {
                    name: "lckrstf",
                    description: Some(
                        "CPU lockup reset flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "RsrLckrstf",
                    ),
                },
                Field {
                    name: "borrstf",
                    description: Some(
                        "BOR flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 21,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "RsrBorrstf",
                    ),
                },
                Field {
                    name: "pinrstf",
                    description: Some(
                        "Pin reset flag (NRST).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 22,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "RsrPinrstf",
                    ),
                },
                Field {
                    name: "porrstf",
                    description: Some(
                        "POR/PDR flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 23,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "RsrPorrstf",
                    ),
                },
                Field {
                    name: "sftrstf",
                    description: Some(
                        "Software System reset flag (1).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 24,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "RsrSftrstf",
                    ),
                },
                Field {
                    name: "iwdgrstf",
                    description: Some(
                        "Independent Watchdog reset flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 26,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "RsrIwdgrstf",
                    ),
                },
                Field {
                    name: "wwdgrstf",
                    description: Some(
                        "Window Watchdog reset flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 28,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "RsrWwdgrstf",
                    ),
                },
                Field {
                    name: "lpwrrstf",
                    description: Some(
                        "Illegal Stop or Standby flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 30,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "RsrLpwrrstf",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Seccfgr0",
            extends: None,
            description: Some(
                "RCC oscillator secure configuration register0.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsisec",
                    description: Some(
                        "Defines the secure protection of the LSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsisec",
                    ),
                },
                Field {
                    name: "lsesec",
                    description: Some(
                        "Defines the secure protection of the LSE oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsesec",
                    ),
                },
                Field {
                    name: "msisec",
                    description: Some(
                        "Defines the secure protection of the MSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Msisec",
                    ),
                },
                Field {
                    name: "hsisec",
                    description: Some(
                        "Defines the secure protection of the HSI oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsisec",
                    ),
                },
                Field {
                    name: "hsesec",
                    description: Some(
                        "Defines the secure protection of the HSE oscillator configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsesec",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Seccfgr1",
            extends: None,
            description: Some(
                "RCC PLL secure configuration register1.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "pllsec",
                    description: Some(
                        "Defines the secure protection of the PLL1 PLL configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllsec",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Seccfgr2",
            extends: None,
            description: Some(
                "RCC divider secure configuration register2.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ic1sec",
                    description: Some(
                        "Defines the secure protection of the IC1 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic2sec",
                    description: Some(
                        "Defines the secure protection of the IC2 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic3sec",
                    description: Some(
                        "Defines the secure protection of the IC3 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic4sec",
                    description: Some(
                        "Defines the secure protection of the IC4 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic5sec",
                    description: Some(
                        "Defines the secure protection of the IC5 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic6sec",
                    description: Some(
                        "Defines the secure protection of the IC6 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic7sec",
                    description: Some(
                        "Defines the secure protection of the IC7 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic8sec",
                    description: Some(
                        "Defines the secure protection of the IC8 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic9sec",
                    description: Some(
                        "Defines the secure protection of the IC9 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic10sec",
                    description: Some(
                        "Defines the secure protection of the IC10 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic11sec",
                    description: Some(
                        "Defines the secure protection of the IC11 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic12sec",
                    description: Some(
                        "Defines the secure protection of the IC12 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic13sec",
                    description: Some(
                        "Defines the secure protection of the IC13 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic14sec",
                    description: Some(
                        "Defines the secure protection of the IC14 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic15sec",
                    description: Some(
                        "Defines the secure protection of the IC15 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 14,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic16sec",
                    description: Some(
                        "Defines the secure protection of the IC16 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 15,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic17sec",
                    description: Some(
                        "Defines the secure protection of the IC17 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 16,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic18sec",
                    description: Some(
                        "Defines the secure protection of the IC18 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 17,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic19sec",
                    description: Some(
                        "Defines the secure protection of the IC19 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 18,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
                Field {
                    name: "ic20sec",
                    description: Some(
                        "Defines the secure protection of the IC20 divider configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 19,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Icsec",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Seccfgr3",
            extends: None,
            description: Some(
                "RCC system secure configuration register3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "modsec",
                    description: Some(
                        "Defines the secure protection of the MOD system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Modsec",
                    ),
                },
                Field {
                    name: "syssec",
                    description: Some(
                        "Defines the secure protection of the SYS system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Syssec",
                    ),
                },
                Field {
                    name: "bussec",
                    description: Some(
                        "Defines the secure protection of the BUS system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Bussec",
                    ),
                },
                Field {
                    name: "persec",
                    description: Some(
                        "Defines the secure protection of the PER system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Persec",
                    ),
                },
                Field {
                    name: "intsec",
                    description: Some(
                        "Defines the secure protection of the INT system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Intsec",
                    ),
                },
                Field {
                    name: "rstsec",
                    description: Some(
                        "Defines the secure protection of the RST system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Rstsec",
                    ),
                },
                Field {
                    name: "dftsec",
                    description: Some(
                        "Defines the secure protection of the DFT system configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Dftsec",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Seccfgr4",
            extends: None,
            description: Some(
                "RCC bus secure configuration register4.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "aclknsec",
                    description: Some(
                        "Defines the secure protection of the ACLKN bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Aclknsec",
                    ),
                },
                Field {
                    name: "aclkncsec",
                    description: Some(
                        "Defines the secure protection of the ACLKNC bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Aclkncsec",
                    ),
                },
                Field {
                    name: "ahbmsec",
                    description: Some(
                        "Defines the secure protection of the AHBM bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbmsec",
                    ),
                },
                Field {
                    name: "ahb1sec",
                    description: Some(
                        "Defines the secure protection of the AHB1 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbsec",
                    ),
                },
                Field {
                    name: "ahb2sec",
                    description: Some(
                        "Defines the secure protection of the AHB2 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbsec",
                    ),
                },
                Field {
                    name: "ahb3sec",
                    description: Some(
                        "Defines the secure protection of the AHB3 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbsec",
                    ),
                },
                Field {
                    name: "ahb4sec",
                    description: Some(
                        "Defines the secure protection of the AHB4 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbsec",
                    ),
                },
                Field {
                    name: "ahb5sec",
                    description: Some(
                        "Defines the secure protection of the AHB5 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 7,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Ahbsec",
                    ),
                },
                Field {
                    name: "apb1sec",
                    description: Some(
                        "Defines the secure protection of the APB1 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbsec",
                    ),
                },
                Field {
                    name: "apb2sec",
                    description: Some(
                        "Defines the secure protection of the APB2 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 9,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbsec",
                    ),
                },
                Field {
                    name: "apb3sec",
                    description: Some(
                        "Defines the secure protection of the APB3 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 10,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbsec",
                    ),
                },
                Field {
                    name: "apb4sec",
                    description: Some(
                        "Defines the secure protection of the APB4 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 11,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbsec",
                    ),
                },
                Field {
                    name: "apb5sec",
                    description: Some(
                        "Defines the secure protection of the APB5 bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 12,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Apbsec",
                    ),
                },
                Field {
                    name: "nocsec",
                    description: Some(
                        "Defines the secure protection of the NOC bus configuration bits.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 13,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Nocsec",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Seccfgsr3",
            extends: None,
            description: Some(
                "RCC system secure configuration register3.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "modsecs",
                    description: Some(
                        "Defines the secure protection of the MOD configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "syssecs",
                    description: Some(
                        "Defines the secure protection of the SYS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bussecs",
                    description: Some(
                        "Defines the secure protection of the BUS configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "persecs",
                    description: Some(
                        "Defines the secure protection of the PER configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "intsecs",
                    description: Some(
                        "Defines the secure protection of the INT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rstsecs",
                    description: Some(
                        "Defines the secure protection of the RST configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 5,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dftsecs",
                    description: Some(
                        "Defines the secure protection of the DFT configuration bits (enable, ready, divider).",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 6,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Sr",
            extends: None,
            description: Some(
                "RCC status register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsirdy",
                    description: Some(
                        "LSI clock ready flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lsirdy",
                    ),
                },
                Field {
                    name: "lserdy",
                    description: Some(
                        "LSE clock ready flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Lserdy",
                    ),
                },
                Field {
                    name: "msirdy",
                    description: Some(
                        "MSI clock ready flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Msirdy",
                    ),
                },
                Field {
                    name: "hsirdy",
                    description: Some(
                        "HSI clock ready flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hsirdy",
                    ),
                },
                Field {
                    name: "hserdy",
                    description: Some(
                        "HSE clock ready flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 4,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: Some(
                        "Hserdy",
                    ),
                },
                Field {
                    name: "pllrdy",
                    description: Some(
                        "PLL1 clock ready flag.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 8,
                        },
                    ),
                    bit_size: 1,
                    array: Some(
                        Array::Regular(
                            RegularArray {
                                len: 4,
                                stride: 1,
                            },
                        ),
                    ),
                    enumm: Some(
                        "Pllrdy",
                    ),
                },
            ],
        },
        FieldSet {
            name: "Stopccr",
            extends: None,
            description: Some(
                "RCC StopCCR configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsistopenc",
                    description: Some(
                        "LSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsestopenc",
                    description: Some(
                        "LSE oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "msistopenc",
                    description: Some(
                        "MSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsistopenc",
                    description: Some(
                        "HSI oscillator enable in Run/Sleep mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Stopcr",
            extends: None,
            description: Some(
                "RCC Stop mode control register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsistopen",
                    description: Some(
                        "LSI oscillator enable in Stop mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsestopen",
                    description: Some(
                        "LSE oscillator enable in Stop mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "msistopen",
                    description: Some(
                        "MSI oscillator enable in Stop mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 2,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsistopen",
                    description: Some(
                        "HSI oscillator enable in Stop mode.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 3,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Stopcsr",
            extends: None,
            description: Some(
                "RCC Stop configuration register.",
            ),
            bit_size: 32,
            fields: &[
                Field {
                    name: "msistopens",
                    description: Some(
                        "MSISTOPENS.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 0,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsistopens",
                    description: Some(
                        "HSISTOPENS.",
                    ),
                    bit_offset: BitOffset::Regular(
                        RegularBitOffset {
                            offset: 1,
                        },
                    ),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
    ],
    enums: &[
        Enum {
            name: "Aclknclock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "B_0X0",
                    description: Some(
                        "ACLKNC configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "B_0X1",
                    description: Some(
                        "ACLKNC configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Aclkncpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "B_0X0",
                    description: Some(
                        "ACLKNC configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "B_0X1",
                    description: Some(
                        "ACLKNC configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Aclkncpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "B_0X0",
                    description: Some(
                        "ACLKNC configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "B_0X1",
                    description: Some(
                        "ACLKNC configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Aclkncsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "B_0X0",
                    description: Some(
                        "ACLKNC configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "B_0X1",
                    description: Some(
                        "ACLKNC configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Aclknlock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "B_0X0",
                    description: Some(
                        "ACLKN configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "B_0X1",
                    description: Some(
                        "ACLKN configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Aclknpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "B_0X0",
                    description: Some(
                        "ACLKN configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "B_0X1",
                    description: Some(
                        "ACLKN configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Aclknpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "B_0X0",
                    description: Some(
                        "ACLKN configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "B_0X1",
                    description: Some(
                        "ACLKN configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Aclknsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "B_0X0",
                    description: Some(
                        "ACLKN configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "B_0X1",
                    description: Some(
                        "ACLKN configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Adcpre",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "B_0X0",
                    description: Some(
                        "ck_icn_p_adf1 is divided by 1.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "B_0X1",
                    description: Some(
                        "ck_icn_p_adf1 is divided by 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "B_0X2",
                    description: Some(
                        "ck_icn_p_adf1 is divided by 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "B_0X3",
                    description: Some(
                        "ck_icn_p_adf1 is divided by 4.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Adcsel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "HCLK1",
                    description: Some(
                        "hclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC7",
                    description: Some(
                        "ic7_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC8",
                    description: Some(
                        "ic8_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "I2S_CKIN",
                    description: Some(
                        "I2S_CKIN selected as reference clock.",
                    ),
                    value: 6,
                },
                EnumVariant {
                    name: "TIMG",
                    description: Some(
                        "timg_ck selected as reference clock.",
                    ),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Adfsel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "HCLK2",
                    description: Some(
                        "hclk2 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC7",
                    description: Some(
                        "ic7_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC8",
                    description: Some(
                        "ic8_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "I2S_CKIN",
                    description: Some(
                        "I2S_CKIN selected as reference clock.",
                    ),
                    value: 6,
                },
                EnumVariant {
                    name: "TIMG",
                    description: Some(
                        "timg_ck selected as reference clock.",
                    ),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Ahblock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "AHB1 configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "AHB1 configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Ahbmlock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "AHBM configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "AHBM configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Ahbmpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "AHBM configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "AHBM configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Ahbmpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIV",
                    description: Some(
                        "AHBM configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIV",
                    description: Some(
                        "AHBM configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Ahbmsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "AHBM configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "AHBM configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Ahbpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "AHB1 configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "AHB1 configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Ahbpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIV",
                    description: Some(
                        "AHB1 configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIV",
                    description: Some(
                        "AHB1 configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Ahbsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "AHB1 configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "AHB1 configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Ahbsrampub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "AHBSRAM1 configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "AHBSRAM1 configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Apblock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "APB1 configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "APB1 configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Apbpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "APB1 configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "APB1 configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Apbpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIV",
                    description: Some(
                        "APB1 configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIV",
                    description: Some(
                        "APB1 configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Apbsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "APB1 configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "APB1 configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Axisrampub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "AXISRAM1 configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "AXISRAM1 configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Bkpsrampub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "BKPSRAM configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "BKPSRAM configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Buslock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "BUS configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "BUS configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Buspub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "BUS configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "BUS configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Buspv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIV",
                    description: Some(
                        "BUS configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIV",
                    description: Some(
                        "BUS configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Bussec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "BUS configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "BUS configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Cpusw",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HSI",
                    description: Some(
                        "hsi_ck selected as system clock (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as system clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some(
                        "hse_ck selected as system clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC1",
                    description: Some(
                        "ic1_ck selected as system clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Cpusws",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HSI",
                    description: Some(
                        "hsi_ck selected as system clock (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as system clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some(
                        "hse_ck selected as system clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC1",
                    description: Some(
                        "ic1_ck selected as system clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Dcmippsel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PCLK5",
                    description: Some(
                        "pclk5 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC17",
                    description: Some(
                        "ic17_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Dftlock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "DFT configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "DFT configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Dftpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "DFT configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "DFT configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Dftpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIV",
                    description: Some(
                        "DFT configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIV",
                    description: Some(
                        "DFT configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Dftsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "DFT configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "DFT configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Dftsel",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "JTAG_TCK",
                    description: Some(
                        "jtag_tck selected as reference clock (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PCLK3",
                    description: Some(
                        "pclk3 selected as reference clock.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Eadly",
            description: None,
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "BYPASS",
                    description: Some(
                        "sysrstn low pulse duration is guaranteed by the pulse stretcher of the PAD. The RPCTL is bypassed (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "_1MS",
                    description: Some(
                        "The guaranteed sysrstn low pulse duration is about 1 ms (1 x 32 lsi_ck cycles).",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "_2MS",
                    description: Some(
                        "The guaranteed sysrstn low pulse duration is about 2 ms (2 x 32 lsi_ck cycles).",
                    ),
                    value: 2,
                },
            ],
        },
        Enum {
            name: "Ethclksel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HCLKE",
                    description: Some(
                        "hclke selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC12",
                    description: Some(
                        "ic12_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some(
                        "hse_ck selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ethgtxclksel",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "MII",
                    description: Some(
                        "MII.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "RGMII",
                    description: Some(
                        "RGMII.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Ethptpdiv",
            description: None,
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "ck_ker_eth1ptp is divided by 1.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "ck_ker_eth1ptp is divided by 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "ck_ker_eth1ptp is divided by 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "ck_ker_eth1ptp is divided by 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV16",
                    description: Some(
                        "ck_ker_eth1ptp is divided by 16.",
                    ),
                    value: 15,
                },
            ],
        },
        Enum {
            name: "Ethptpsel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HCLKE",
                    description: Some(
                        "hclke selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC13",
                    description: Some(
                        "ic13_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some(
                        "hse_ck selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ethpwrdownack",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_ACK",
                    description: Some(
                        "Power-down sequence start not yet acknowledged.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "ACK",
                    description: Some(
                        "Power-down sequence start acknowledged.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Fdcansel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PCLK1",
                    description: Some(
                        "pclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC19",
                    description: Some(
                        "ic19_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some(
                        "hse_ck selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Flexrampub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "FLEXRAM configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "FLEXRAM configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Fmcsel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HCLK5",
                    description: Some(
                        "hclk5 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC3",
                    description: Some(
                        "ic3_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC4",
                    description: Some(
                        "ic4_ck selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Fmcsels",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HCLK5",
                    description: Some(
                        "hclk5 selected as FMC clock (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as FMC clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC3",
                    description: Some(
                        "ic3_ck selected as FMC clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC4",
                    description: Some(
                        "ic4_ck selected as FMC clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Hpre",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "sys_bus2_ck= sys_bus_ck.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "sys_bus2_ck = sys_bus_ck / 2 (default after reset).",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "sys_bus2_ck= sys_bus_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV8",
                    description: Some(
                        "sys_bus2_ck = sys_bus_ck / 8.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV16",
                    description: Some(
                        "sys_bus2_ck = sys_bus_ck / 16.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "DIV32",
                    description: Some(
                        "sys_bus2_ck = sys_bus_ck / 32.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "DIV64",
                    description: Some(
                        "sys_bus2_ck = sys_bus_ck / 64.",
                    ),
                    value: 6,
                },
                EnumVariant {
                    name: "DIV128",
                    description: Some(
                        "sys_bus2_ck = sys_bus_ck / 128.",
                    ),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Hsebyp",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_BYPASS",
                    description: Some(
                        "HSE oscillator not bypassed (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "BYPASS",
                    description: Some(
                        "HSE oscillator bypassed with an external clock.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsecssbpre",
            description: None,
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "HSI clock is divided by 1.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "HSI clock is divided by 2 (default after reset).",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "HSI clock is divided by 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "HSI clock is divided by 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV15",
                    description: Some(
                        "HSI clock is divided by 15.",
                    ),
                    value: 15,
                },
            ],
        },
        Enum {
            name: "Hsecssbyp",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_BYPASS",
                    description: Some(
                        "clock Security System Bypass of the HSE oscillator is OFF (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "BYPASS",
                    description: Some(
                        "clock Security System Bypass on the HSE oscillator is ON.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsecssc",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_MODIFIED",
                    description: Some(
                        "HSECSSF not modified (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLEARED",
                    description: Some(
                        "HSECSSF cleared.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsecssd",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_FAILURE",
                    description: Some(
                        "No failure detected on the oscillator (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "FAILURE",
                    description: Some(
                        "Failure detected on the oscillator.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsecssf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_CLOCK_READY",
                    description: Some(
                        "no clock ready interrupt caused by the HSE (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLOCK_READY",
                    description: Some(
                        "clock ready interrupt caused by the HSE.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsecssie",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "DISABLED",
                    description: Some(
                        "HSE CSS interrupt disabled.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "ENABLED",
                    description: Some(
                        "HSE CSS interrupt enabled (default after reset).",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsecssra",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_RE_ARM",
                    description: Some(
                        "Writing 0 has no effect (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "RE_ARM",
                    description: Some(
                        "Writing 1 generates a re-arm pulse for the HSECSS function.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsedivbyp",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "HSE: hse_div2_osc_ck = hse_osc_ck/2 (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "HSE: hse_div2_osc_ck = hse_osc_ck.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsedrv",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "LOWEST",
                    description: Some(
                        "Lowest drive (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOW",
                    description: Some(
                        "Medium low drive.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HIGH",
                    description: Some(
                        "Medium high drive.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HIGHEST",
                    description: Some(
                        "Highest drive.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Hseext",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "ANALOG",
                    description: Some(
                        "HSE in analog mode (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIGITAL",
                    description: Some(
                        "HSE in digital mode.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hselock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "HSE configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "HSE configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsepub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "HSE configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "HSE configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsepv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIV",
                    description: Some(
                        "HSE configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIV",
                    description: Some(
                        "HSE configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hserdy",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_RDY",
                    description: Some(
                        "HSE is not ready (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "RDY",
                    description: Some(
                        "HSE is ready.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hserdyc",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_MODIFIED",
                    description: Some(
                        "HSERDYF not modified (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLEARED",
                    description: Some(
                        "HSERDYF cleared.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hserdyf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_CLOCK_READY",
                    description: Some(
                        "no clock ready interrupt caused by the HSE (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLOCK_READY",
                    description: Some(
                        "clock ready interrupt caused by the HSE.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hserdyie",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "DISABLED",
                    description: Some(
                        "HSE ready interrupt disabled (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "ENABLED",
                    description: Some(
                        "HSE ready interrupt enabled.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsesec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "HSE configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "HSE configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsidiv",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "hsi_ck = hsi_osc_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 2.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsilock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "HSI configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "HSI configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsipub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "HSI configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "HSI configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsipv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIV",
                    description: Some(
                        "HSI configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIV",
                    description: Some(
                        "HSI configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsirdy",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_RDY",
                    description: Some(
                        "HSI is not ready.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "RDY",
                    description: Some(
                        "HSI is ready (default after reset).",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsirdyc",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_MODIFIED",
                    description: Some(
                        "HSIRDYF not modified (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLEARED",
                    description: Some(
                        "HSIRDYF cleared.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsirdyf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_CLOCK_READY",
                    description: Some(
                        "no clock ready interrupt caused by the HSI (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLOCK_READY",
                    description: Some(
                        "clock ready interrupt caused by the HSI.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsirdyie",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "DISABLED",
                    description: Some(
                        "HSI ready interrupt disabled (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "ENABLED",
                    description: Some(
                        "HSI ready interrupt enabled.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsisec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "HSI configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "HSI configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Hsitrim",
            description: None,
            bit_size: 7,
            variants: &[
                EnumVariant {
                    name: "ZERO",
                    description: Some(
                        "bsec_hsi_cal[8:0] (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLUS_62",
                    description: Some(
                        "bsec_hsi_cal[8:0] + 62.",
                    ),
                    value: 62,
                },
                EnumVariant {
                    name: "PLUS_63",
                    description: Some(
                        "bsec_hsi_cal[8:0] + 63.",
                    ),
                    value: 63,
                },
                EnumVariant {
                    name: "MINUS_64",
                    description: Some(
                        "bsec_hsi_cal[8:0] - 64.",
                    ),
                    value: 64,
                },
                EnumVariant {
                    name: "MINUS_63",
                    description: Some(
                        "bsec_hsi_cal[8:0] - 63.",
                    ),
                    value: 65,
                },
            ],
        },
        Enum {
            name: "HwrsrBorrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_OCCURRED",
                    description: Some(
                        "no BOR occurred.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "BOR occurred (default after power-on reset).",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "HwrsrIwdgrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_OCCURRED",
                    description: Some(
                        "no Independent Watchdog Reset occurred (default after power-on reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "Independent Watchdog Reset occurred.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "HwrsrLckrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_OCCURRED",
                    description: Some(
                        "No reset from CPU lockup occurred.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "Reset from CPU lockup occurred.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "HwrsrLpwrrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_OCCURRED",
                    description: Some(
                        "no illegal reset occurred (default after power-on reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "illegal Stop or Standby reset occurred.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "HwrsrPinrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_OCCURRED",
                    description: Some(
                        "no reset from pin occurred.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "Reset from Pin occurred (default after power-on reset).",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "HwrsrPorrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_OCCURRED",
                    description: Some(
                        "no POR/PDR reset occurred.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "POR/PDR reset occurred (default after power-on reset).",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "HwrsrRmvf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_CLEAR",
                    description: Some(
                        "clear of the reset flags not activated (default after power-on reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLEAR",
                    description: Some(
                        "clear the value of the reset flags.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "HwrsrSftrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_OCCURRED",
                    description: Some(
                        "no Software System reset occurred (default after power-on reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "a Software System reset has been generated by the CPU.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "HwrsrWwdgrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "B_0X0",
                    description: Some(
                        "no Window Watchdog Reset occurred from WWDG (default after power-on reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "B_0X1",
                    description: Some(
                        "Window Watchdog Reset occurred from WWDG.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "I2c1sel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK1",
                    description: Some(
                        "pclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC10",
                    description: Some(
                        "ic10_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC15",
                    description: Some(
                        "ic15_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
            ],
        },
        Enum {
            name: "I2c2sel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK1",
                    description: Some(
                        "pclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC10",
                    description: Some(
                        "ic10_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC15",
                    description: Some(
                        "ic15_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
            ],
        },
        Enum {
            name: "I2c3sel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK1",
                    description: Some(
                        "pclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC10",
                    description: Some(
                        "ic10_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC15",
                    description: Some(
                        "ic15_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
            ],
        },
        Enum {
            name: "I2c4sel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK1",
                    description: Some(
                        "pclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC10",
                    description: Some(
                        "ic10_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC15",
                    description: Some(
                        "ic15_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
            ],
        },
        Enum {
            name: "I3c1sel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK1",
                    description: Some(
                        "pclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC10",
                    description: Some(
                        "ic10_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC15",
                    description: Some(
                        "ic15_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
            ],
        },
        Enum {
            name: "I3c2sel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK1",
                    description: Some(
                        "pclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC10",
                    description: Some(
                        "ic10_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC15",
                    description: Some(
                        "ic15_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
            ],
        },
        Enum {
            name: "Ic10int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC10 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC10 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC10 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC10 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC10 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic10sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected (default after reset).",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic11int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC11 = pllx_ck.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC11 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC11 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC11 = pllx_ck / 4 (default after reset).",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC11 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic11sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic12int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC12 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC12 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC12 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC12 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC12 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic12sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic13int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC13 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC13 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC13 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC13 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC13 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic13sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic14int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC14 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC14 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC14 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC14 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC14 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic14sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic15int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC15 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC15 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC15 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC15 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC15 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic15sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic16int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC16 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC16 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC16 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC16 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic16sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic17int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC17 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC17 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC17 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC17 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC17 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic17sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic18int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC18 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC18 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC18 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC18 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC18 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic18sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic19int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC19 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC19 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC19 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC19 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC19 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic19sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic1int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC1 = pllx_ck.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC1 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC1 = pllx_ck / 3 (default after reset).",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC1 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC1 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic1sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic20int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC20 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC20 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC20 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC20 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC20 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic20sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic2int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC2 = pllx_ck.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC2 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC2 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC2 = pllx_ck / 4 (default after reset).",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC2 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic2sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic3int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC3 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC3 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC3 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC3 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC3 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic3sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic4int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC4 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC4 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC4 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC4 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC4 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic4sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic5int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC5 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC5 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC5 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC5 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC5 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic5sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic6int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC6 = pllx_ck.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC6 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC6 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC6 = pllx_ck / 4 (default after reset).",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC6 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic6sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic7int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC7 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC7 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC7 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC7 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC7 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic7sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected (default after reset).",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic8int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC8 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC8 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC8 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC8 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC8 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic8sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected (default after reset).",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ic9int",
            description: None,
            bit_size: 8,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "IC9 = pllx_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "IC9 = pllx_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "IC9 = pllx_ck / 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "IC9 = pllx_ck / 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some(
                        "IC9 = pllx_ck / 256.",
                    ),
                    value: 255,
                },
            ],
        },
        Enum {
            name: "Ic9sel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PLL1",
                    description: Some(
                        "pll1_ck is selected.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some(
                        "pll2_ck is selected (default after reset).",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV4",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_OSC_DIV8",
                    description: Some(
                        "hsi_ck = hsi_osc_ck / 8.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Iclock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "IC10 configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "IC10 configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Icpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "IC10 configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "IC10 configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Icpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIVILEGE",
                    description: Some(
                        "IC10 configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIVILEGE",
                    description: Some(
                        "IC10 configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Icsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "IC10 configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "IC10 configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Intlock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "INT configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "INT configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Intpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "INT configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "INT configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Intpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIVILEGE",
                    description: Some(
                        "INT configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIVILEGE",
                    description: Some(
                        "INT configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Intsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "INT configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "INT configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lptimsel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK1",
                    description: Some(
                        "pclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC15",
                    description: Some(
                        "ic15_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "LSE",
                    description: Some(
                        "lse_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "LSI",
                    description: Some(
                        "lsi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "TIMG",
                    description: Some(
                        "timg_ck selected as reference clock.",
                    ),
                    value: 5,
                },
            ],
        },
        Enum {
            name: "Lpuartsel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK4",
                    description: Some(
                        "pclk4 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC9",
                    description: Some(
                        "ic9_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC14",
                    description: Some(
                        "ic14_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "LSE",
                    description: Some(
                        "lse_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 6,
                },
            ],
        },
        Enum {
            name: "Lsebyp",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_BYPASS",
                    description: Some(
                        "LSE oscillator not bypassed (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "BYPASS",
                    description: Some(
                        "LSE oscillator bypassed with an external clock.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsecssc",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_MODIFIED",
                    description: Some(
                        "LSECSSF not modified (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLEARED",
                    description: Some(
                        "LSECSSF cleared.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsecssd",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_DETECTED",
                    description: Some(
                        "No failure detected on the oscillator (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DETECTED",
                    description: Some(
                        "Failure detected on the oscillator.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsecssf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_READY",
                    description: Some(
                        "no clock ready interrupt caused by the LSE (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "READY",
                    description: Some(
                        "clock ready interrupt caused by the LSE.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsecssie",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "DISABLED",
                    description: Some(
                        "LSE CSS interrupt disabled (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "ENABLED",
                    description: Some(
                        "LSE CSS interrupt enabled.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsecssra",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_EFFECT",
                    description: Some(
                        "Writing 0 has no effect (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "RE_ARM",
                    description: Some(
                        "Writing 1 generates a re-arm pulse for the LSECSS function.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsedrv",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "LOWEST",
                    description: Some(
                        "Lowest drive (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "MEDIUM_LOW",
                    description: Some(
                        "Medium low drive.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "MEDIUM_HIGH",
                    description: Some(
                        "Medium high drive.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HIGHEST",
                    description: Some(
                        "Highest drive.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Lseext",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "ANALOG",
                    description: Some(
                        "LSE in analog mode (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIGITAL",
                    description: Some(
                        "LSE in digital mode.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lselock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "LSE configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "LSE configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsepub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "LSE configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "LSE configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsepv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIVILEGE",
                    description: Some(
                        "LSE configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIVILAGE",
                    description: Some(
                        "LSE configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lserdy",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_READY",
                    description: Some(
                        "LSE is not ready (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "READY",
                    description: Some(
                        "LSE is ready.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lserdyc",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_MODIFIED",
                    description: Some(
                        "LSERDYF not modified (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLEARED",
                    description: Some(
                        "LSERDYF cleared.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lserdyf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_READY",
                    description: Some(
                        "no clock ready interrupt caused by the LSE (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "READY",
                    description: Some(
                        "clock ready interrupt caused by the LSE.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lserdyie",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "DISABLED",
                    description: Some(
                        "LSE ready interrupt disabled (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "ENABLED",
                    description: Some(
                        "LSE ready interrupt enabled.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsesec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "LSE configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "LSE configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsilock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "LSI configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "LSI configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsipub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "LSI configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "LSI configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsipv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIVILEGE",
                    description: Some(
                        "LSI configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIVILEGE",
                    description: Some(
                        "LSI configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsirdy",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_READY",
                    description: Some(
                        "LSI is not ready (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "READY",
                    description: Some(
                        "LSI is ready.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsirdyc",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_MODIFIED",
                    description: Some(
                        "LSIRDYF not modified (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLEARED",
                    description: Some(
                        "LSIRDYF cleared.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsirdyf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_INTERRUPT",
                    description: Some(
                        "no clock ready interrupt caused by the LSI (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "INTERRUPT",
                    description: Some(
                        "clock ready interrupt caused by the LSI.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsirdyie",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "DISABLED",
                    description: Some(
                        "LSI ready interrupt disabled (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "ENABLED",
                    description: Some(
                        "LSI ready interrupt enabled.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Lsisec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "LSI configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "LSI configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Ltdcsel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "PCLK5",
                    description: Some(
                        "pclk5 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC16",
                    description: Some(
                        "ic16_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Mcopre",
            description: None,
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "ck_icn_p_mce3 is divided by 1.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "ck_icn_p_mce3 is divided by 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "ck_icn_p_mce3 is divided by 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "ck_icn_p_mce3 is divided by 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV16",
                    description: Some(
                        "ck_icn_p_mce3 is divided by 16.",
                    ),
                    value: 15,
                },
            ],
        },
        Enum {
            name: "Mcosel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LSE",
                    description: Some(
                        "lse_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "LSI",
                    description: Some(
                        "lsi_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some(
                        "hse_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "IC5",
                    description: Some(
                        "ic5_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "IC10",
                    description: Some(
                        "ic10_ck selected as reference clock.",
                    ),
                    value: 6,
                },
                EnumVariant {
                    name: "SYSA",
                    description: Some(
                        "sysa_ck selected as reference clock.",
                    ),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Mdfsel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "HCLK2",
                    description: Some(
                        "hclk2 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC7",
                    description: Some(
                        "ic7_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC8",
                    description: Some(
                        "ic8_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "I2S_CKIN",
                    description: Some(
                        "I2S_CKIN selected as reference clock.",
                    ),
                    value: 6,
                },
                EnumVariant {
                    name: "TIMG",
                    description: Some(
                        "timg_ck selected as reference clock.",
                    ),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Modlock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "MOD configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "MOD configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Modpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "MOD configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "MOD configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Modpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIVILEGE",
                    description: Some(
                        "MOD configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIVILEGE",
                    description: Some(
                        "MOD configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Modsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "MOD configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "MOD configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Mrd",
            description: None,
            bit_size: 5,
            variants: &[
                EnumVariant {
                    name: "NO_DELAY",
                    description: Some(
                        "No extra delay added by the BOOTROM.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "_100US",
                    description: Some(
                        "100 us.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "_200US",
                    description: Some(
                        "200 us.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "_500US",
                    description: Some(
                        "500 us.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "_1MS",
                    description: Some(
                        "1 ms.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "_2MS",
                    description: Some(
                        "2 ms.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "_5MS",
                    description: Some(
                        "5 ms (default after reset).",
                    ),
                    value: 6,
                },
                EnumVariant {
                    name: "_10MS",
                    description: Some(
                        "10 ms.",
                    ),
                    value: 7,
                },
                EnumVariant {
                    name: "_20MS",
                    description: Some(
                        "20 ms.",
                    ),
                    value: 8,
                },
                EnumVariant {
                    name: "_50MS",
                    description: Some(
                        "50 ms.",
                    ),
                    value: 9,
                },
                EnumVariant {
                    name: "_100MS",
                    description: Some(
                        "100 ms.",
                    ),
                    value: 10,
                },
                EnumVariant {
                    name: "_200MS",
                    description: Some(
                        "200 ms.",
                    ),
                    value: 11,
                },
                EnumVariant {
                    name: "_500MS",
                    description: Some(
                        "500 ms.",
                    ),
                    value: 12,
                },
                EnumVariant {
                    name: "_1S",
                    description: Some(
                        "1 s.",
                    ),
                    value: 13,
                },
                EnumVariant {
                    name: "_2S",
                    description: Some(
                        "2 s.",
                    ),
                    value: 14,
                },
                EnumVariant {
                    name: "_3S",
                    description: Some(
                        "5 s.",
                    ),
                    value: 15,
                },
            ],
        },
        Enum {
            name: "Msifreqsel",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "_4MHZ",
                    description: Some(
                        "MSI oscillator frequency is 4 MHz (default after backup domain reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "_16MHZ",
                    description: Some(
                        "MSI oscillator frequency is 16 MHz.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Msilock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "MSI configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "MSI configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Msipub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUB",
                    description: Some(
                        "MSI configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUB",
                    description: Some(
                        "MSI configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Msipv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIVILEGE",
                    description: Some(
                        "MSI configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIVILEGE",
                    description: Some(
                        "MSI configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Msirdy",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_READY",
                    description: Some(
                        "MSI is not ready (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "READY",
                    description: Some(
                        "MSI is ready.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Msirdyc",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_MODIFIED",
                    description: Some(
                        "MSIRDYF not modified (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLEARED",
                    description: Some(
                        "MSIRDYF cleared.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Msirdyf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_INTERRUPT",
                    description: Some(
                        "no clock ready interrupt caused by the MSI (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "INTERRUPT",
                    description: Some(
                        "clock ready interrupt caused by the MSI.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Msirdyie",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "DISABLED",
                    description: Some(
                        "MSI ready interrupt disabled (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "ENABLED",
                    description: Some(
                        "MSI ready interrupt enabled.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Msisec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "MSI configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "MSI configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Noclock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "NOC configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "NOC configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Nocpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "NOC configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "NOC configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Nocpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIVILEGE",
                    description: Some(
                        "NOC configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIVILEGE",
                    description: Some(
                        "NOC configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Nocsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "NOC configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "NOC configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Npucacherampub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "NPUCACHERAM configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "NPUCACHERAM configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Otgphysel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HSE",
                    description: Some(
                        "hse_ck selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC15",
                    description: Some(
                        "ic15_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSE_DIV2_OSC",
                    description: Some(
                        "hse_div2_osc_ck selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Perlock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "PER configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "PER configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Perpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "PER configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "PER configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Perpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIVILEGE",
                    description: Some(
                        "PER configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIVILEGE",
                    description: Some(
                        "PER configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Persec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "PER configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "PER configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Persel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "HSI",
                    description: Some(
                        "hsi_ck selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some(
                        "hse_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC19",
                    description: Some(
                        "ic19_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "IC5",
                    description: Some(
                        "ic5_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "IC10",
                    description: Some(
                        "ic10_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "IC15",
                    description: Some(
                        "ic15_ck selected as reference clock.",
                    ),
                    value: 6,
                },
                EnumVariant {
                    name: "IC20",
                    description: Some(
                        "ic20_ck selected as reference clock.",
                    ),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Pllbyp",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "VCO_POSTDIV",
                    description: Some(
                        "PLL output is driven by the VCO, via the optional POSTDIV division.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "BYPASS",
                    description: Some(
                        "PLL output is bypassed and driven by the PLL reference clock (default after reset).",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Plldivm",
            description: None,
            bit_size: 6,
            variants: &[
                EnumVariant {
                    name: "NOT_APPLICABLE",
                    description: Some(
                        "Not applicable when PLL is enabled.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "reference clock is divided by 1 (min value).",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "reference clock is divided by 2.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV63",
                    description: Some(
                        "reference clock is divided by 63.",
                    ),
                    value: 63,
                },
            ],
        },
        Enum {
            name: "Plllock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "PLL1 configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "PLL1 configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Pllmodsprdw",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "CENTER_SPREAD",
                    description: Some(
                        "Center-spread modulation selected (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DOWN_SPREAD",
                    description: Some(
                        "Down-spread modulation selected.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Pllmodssdis",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "MODULATION_SPREAD_SPECTRUM",
                    description: Some(
                        "Modulation Spread-Spectrum is active (and Fractional Divide inactive).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "FRACTIONAL_DIVIDE",
                    description: Some(
                        "Fractional Divide is active (and the Modulation Spread-Spectrum inactive) (default after reset).",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Pllpdiv",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "NOT_APPLICABLE",
                    description: Some(
                        "Not applicable.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "VCO output is divided by 1 (minimum value) (default after reset).",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV7",
                    description: Some(
                        "VCO output is divided by 7.",
                    ),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Pllpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "PLL1 configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "PLL1 configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Pllpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIVILEGE",
                    description: Some(
                        "PLL1 configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIVILEGE",
                    description: Some(
                        "PLL1 configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Pllrdy",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "UNLOCKED",
                    description: Some(
                        "PLL1 unlocked (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCKED",
                    description: Some(
                        "PLL1 locked.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Pllrdyc",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_MODIFIED",
                    description: Some(
                        "PLL1RDYF not modified (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLEARED",
                    description: Some(
                        "PLL1RDYF cleared.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Pllrdyf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_INTERRUPT",
                    description: Some(
                        "no clock ready interrupt caused by the PLL1 (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "INTERRUPT",
                    description: Some(
                        "clock ready interrupt caused by the PLL1.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Pllrdyie",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "DISABLED",
                    description: Some(
                        "PLL1 lock interrupt disabled (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "ENABLED",
                    description: Some(
                        "PLL1 lock interrupt enabled.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Pllsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "PLL1 configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "PLL1 configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Pllsel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "HSI",
                    description: Some(
                        "hsi_ck selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some(
                        "hse_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "I2S_CKIN",
                    description: Some(
                        "I2S_CKIN selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Ppre",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "rcc_pclk1 = sys_bus2_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "rcc_pclk1 = sys_bus2_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "rcc_pclk1 = sys_bus2_ck / 4.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV8",
                    description: Some(
                        "rcc_pclk1 = sys_bus2_ck / 8.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV16",
                    description: Some(
                        "rcc_pclk1 = sys_bus2_ck / 16.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "DIV32",
                    description: Some(
                        "rcc_pclk1 = sys_bus2_ck / 32.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "DIV64",
                    description: Some(
                        "rcc_pclk1 = sys_bus2_ck / 64.",
                    ),
                    value: 6,
                },
                EnumVariant {
                    name: "DIV128",
                    description: Some(
                        "rcc_pclk1 = sys_bus2_ck / 128.",
                    ),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Pssisel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HCLK5",
                    description: Some(
                        "hclk5 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC20",
                    description: Some(
                        "ic20_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "RsrBorrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "ABSENCE",
                    description: Some(
                        "no BOR occurred.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "BOR occurred (default after power-on reset).",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "RsrIwdgrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "ABSENCE",
                    description: Some(
                        "no Independent Watchdog reset occurred (default after power-on reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "Independent Watchdog reset occurred.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "RsrLckrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "ABSENCE",
                    description: Some(
                        "No reset from CPU lockup occurred.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "Reset from CPU lockup occurred.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "RsrLpwrrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "ABSENCE",
                    description: Some(
                        "no illegal reset occurred (default after power-on reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "illegal Stop or Standby reset occurred.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "RsrPinrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "ABSENCE",
                    description: Some(
                        "no reset from Pin occurred.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "Reset from Pin occurred (default after power-on reset).",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "RsrPorrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "ABSENCE",
                    description: Some(
                        "no POR/PDR reset occurred.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "POR/PDR reset occurred (default after power-on reset).",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "RsrRmvf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_CLEAR",
                    description: Some(
                        "clear of the reset flags not activated (default after power-on reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLEAR",
                    description: Some(
                        "clear the value of the reset flags.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "RsrSftrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "ABSENCE",
                    description: Some(
                        "no Software System reset occurred (default after power-on reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "a Software System reset has been generated by the CPU.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "RsrWwdgrstf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "ABSENCE",
                    description: Some(
                        "no Window Watchdog reset occurred from WWDG (default after power-on reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "OCCURRED",
                    description: Some(
                        "Window Watchdog reset occurred from WWDG.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Rstlock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "RST configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "RST configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Rstpub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "RST configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "RST configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Rstpv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIVILEGE",
                    description: Some(
                        "RST configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIVILEGE",
                    description: Some(
                        "RST configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Rstsec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "RST configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "RST configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Rtcpre",
            description: None,
            bit_size: 6,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "ck_icn_p_risaf is divided by 1.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "ck_icn_p_risaf is divided by 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some(
                        "ck_icn_p_risaf is divided by 3.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "ck_icn_p_risaf is divided by 4.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV64",
                    description: Some(
                        "ck_icn_p_risaf is divided by 64.",
                    ),
                    value: 63,
                },
            ],
        },
        Enum {
            name: "Rtcsel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "LSE",
                    description: Some(
                        "lse_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "LSI",
                    description: Some(
                        "lsi_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "HSE_RTC",
                    description: Some(
                        "hse_rtc_ck selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Saisel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK2",
                    description: Some(
                        "pclk2 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC7",
                    description: Some(
                        "ic7_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC8",
                    description: Some(
                        "ic8_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "I2S_CKIN",
                    description: Some(
                        "I2S_CKIN selected as reference clock.",
                    ),
                    value: 6,
                },
                EnumVariant {
                    name: "SPDIF_SYMB",
                    description: Some(
                        "spdif_symb_ck selected as reference clock.",
                    ),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Sdmmcsel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HCLKU",
                    description: Some(
                        "hclku selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC4",
                    description: Some(
                        "ic4_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC5",
                    description: Some(
                        "ic5_ck selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Spdifrxsel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK1",
                    description: Some(
                        "pclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC7",
                    description: Some(
                        "ic7_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC8",
                    description: Some(
                        "ic8_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "I2S_CKIN",
                    description: Some(
                        "I2S_CKIN selected as reference clock.",
                    ),
                    value: 6,
                },
            ],
        },
        Enum {
            name: "Spisel1",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK2",
                    description: Some(
                        "pclk2 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC8",
                    description: Some(
                        "ic8_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC9",
                    description: Some(
                        "ic9_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "I2S_CKIN",
                    description: Some(
                        "I2S_CKIN selected as reference clock.",
                    ),
                    value: 6,
                },
            ],
        },
        Enum {
            name: "Spisel23",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK1",
                    description: Some(
                        "pclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC8",
                    description: Some(
                        "ic8_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC9",
                    description: Some(
                        "ic9_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "I2S_CKIN",
                    description: Some(
                        "I2S_CKIN selected as reference clock.",
                    ),
                    value: 6,
                },
            ],
        },
        Enum {
            name: "Spisel45",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK2",
                    description: Some(
                        "pclk2 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC9",
                    description: Some(
                        "ic9_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC14",
                    description: Some(
                        "ic14_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "I2S_CKIN",
                    description: Some(
                        "I2S_CKIN selected as reference clock.",
                    ),
                    value: 6,
                },
            ],
        },
        Enum {
            name: "Spisel6",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK4",
                    description: Some(
                        "pclk2 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC8",
                    description: Some(
                        "ic8_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC9",
                    description: Some(
                        "ic9_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "I2S_CKIN",
                    description: Some(
                        "I2S_CKIN selected as reference clock.",
                    ),
                    value: 6,
                },
            ],
        },
        Enum {
            name: "Stopwuck",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "HSI",
                    description: Some(
                        "HSI selected as wake up clock from system Stop (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CSI",
                    description: Some(
                        "CSI selected as wake up clock from system Stop.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Syslock",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_LOCK",
                    description: Some(
                        "SYS configuration bits are accessible by non-lock software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "LOCK",
                    description: Some(
                        "SYS configuration bits are accessible by lock software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Syspub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "SYS configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "SYS configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Syspv",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PRIVILEGE",
                    description: Some(
                        "SYS configuration bits are accessible by non-privilege software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PRIVILEGE",
                    description: Some(
                        "SYS configuration bits are accessible by privilege software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Syssec",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_SECURE",
                    description: Some(
                        "SYS configuration bits are accessible by non-secure software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "SECURE",
                    description: Some(
                        "SYS configuration bits are accessible by secure software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Syssw",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HSI",
                    description: Some(
                        "hsi_ck selected as system clock (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as system clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some(
                        "hse_ck selected as system clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC2",
                    description: Some(
                        "ic2_ck selected as system clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Syssws",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HSI",
                    description: Some(
                        "hsi_ck selected as system clock (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as system clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some(
                        "hse_ck selected as system clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC2",
                    description: Some(
                        "ic2_ck selected as system clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Timpre",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some(
                        "timg_ck = sys_bus_ck (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some(
                        "timg_ck = sys_bus_ck / 2.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some(
                        "timg_ck = sys_bus_ck / 4.",
                    ),
                    value: 2,
                },
            ],
        },
        Enum {
            name: "Uartsel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK1",
                    description: Some(
                        "pclk1 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC9",
                    description: Some(
                        "ic9_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC14",
                    description: Some(
                        "ic14_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "LSE",
                    description: Some(
                        "lse_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "HSI",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 6,
                },
            ],
        },
        Enum {
            name: "Usartsel",
            description: None,
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "PCLK2",
                    description: Some(
                        "pclk2 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC9",
                    description: Some(
                        "ic9_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC14",
                    description: Some(
                        "ic14_ck selected as reference clock.",
                    ),
                    value: 3,
                },
                EnumVariant {
                    name: "LSE",
                    description: Some(
                        "lse_ck selected as reference clock.",
                    ),
                    value: 4,
                },
                EnumVariant {
                    name: "MSI",
                    description: Some(
                        "msi_ck selected as reference clock.",
                    ),
                    value: 5,
                },
                EnumVariant {
                    name: "HSI_DIV",
                    description: Some(
                        "hsi_div_ck selected as reference clock.",
                    ),
                    value: 6,
                },
            ],
        },
        Enum {
            name: "Vencrampub",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NON_PUBLIC",
                    description: Some(
                        "VENCRAM configuration bits are accessible by non-public software only (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PUBLIC",
                    description: Some(
                        "VENCRAM configuration bits are accessible by public software only.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Wkupf",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NO_INTERRUPT",
                    description: Some(
                        "no wakeup interrupt caused by the PWR (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "INTERRUPT",
                    description: Some(
                        "wakeup interrupt caused by the PWR.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Wkupfc",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "NOT_MODIFIED",
                    description: Some(
                        "WKUPF not modified (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "CLEARED",
                    description: Some(
                        "WKUPF cleared.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Wkupie",
            description: None,
            bit_size: 1,
            variants: &[
                EnumVariant {
                    name: "DISABLED",
                    description: Some(
                        "Wakeup interrupt disabled (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "ENABLED",
                    description: Some(
                        "Wakeup interrupt enabled.",
                    ),
                    value: 1,
                },
            ],
        },
        Enum {
            name: "Xspisel",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HCLK5",
                    description: Some(
                        "hclk5 selected as reference clock.",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as reference clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC3",
                    description: Some(
                        "ic3_ck selected as reference clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC4",
                    description: Some(
                        "ic4_ck selected as reference clock.",
                    ),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Xspisels",
            description: None,
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HCLK5",
                    description: Some(
                        "hclk5 selected as XSPI1 clock (default after reset).",
                    ),
                    value: 0,
                },
                EnumVariant {
                    name: "PER",
                    description: Some(
                        "per_ck selected as XSPI1 clock.",
                    ),
                    value: 1,
                },
                EnumVariant {
                    name: "IC3",
                    description: Some(
                        "ic3_ck selected as XSPI1 clock.",
                    ),
                    value: 2,
                },
                EnumVariant {
                    name: "IC4",
                    description: Some(
                        "ic4_ck selected as XSPI1 clock.",
                    ),
                    value: 3,
                },
            ],
        },
    ],
};
